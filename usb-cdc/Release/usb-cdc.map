Archive member included because of file (symbol)

/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
                              /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               ./usbdrv.o
usbTxStatus1        0xc               ./usbdrv.o
usbDeviceAddr       0x1               ./usbdrv.o
usbRxToken          0x1               ./usbdrv.o
usbInputBufOffset   0x1               ./usbdrv.o
usbMsgPtr           0x2               ./usbdrv.o
usbRxLen            0x1               ./usbdrv.o
usbNewDeviceAddr    0x1               ./usbdrv.o
usbCurrentTok       0x1               ./usbdrv.o
usbConfiguration    0x1               ./usbdrv.o
usbRxBuf            0x16              ./usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD ./main.o
LOAD ./oddebug.o
LOAD ./receiver.o
LOAD ./usbdrv.o
LOAD ./usbdrvasm.o
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/libm.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/libc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x722
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000026       0x65 ./usbdrv.o
                0x0000000000000060                usbDescriptorDevice
                0x0000000000000026                usbDescriptorString0
                0x0000000000000072                usbDescriptorConfiguration
                0x000000000000002a                usbDescriptorStringVendor
                0x0000000000000044                usbDescriptorStringDevice
                0x000000000000008c                . = ALIGN (0x2)
 *fill*         0x000000000000008b        0x1 00
                0x000000000000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000008c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000008c                __ctors_start = .
 *(.ctors)
                0x000000000000008c                __ctors_end = .
                0x000000000000008c                __dtors_start = .
 *(.dtors)
                0x000000000000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000008c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x000000000000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000008c        0xc /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000098       0x16 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
                0x0000000000000098                __do_copy_data
 .init4         0x00000000000000ae       0x10 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000ae                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000be        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000000000000c2        0x2 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000000000c2                __vector_12
                0x00000000000000c2                __bad_interrupt
                0x00000000000000c2                __vector_6
                0x00000000000000c2                __vector_3
                0x00000000000000c2                __vector_11
                0x00000000000000c2                __vector_13
                0x00000000000000c2                __vector_17
                0x00000000000000c2                __vector_7
                0x00000000000000c2                __vector_5
                0x00000000000000c2                __vector_4
                0x00000000000000c2                __vector_9
                0x00000000000000c2                __vector_2
                0x00000000000000c2                __vector_15
                0x00000000000000c2                __vector_8
                0x00000000000000c2                __vector_14
                0x00000000000000c2                __vector_10
                0x00000000000000c2                __vector_16
                0x00000000000000c2                __vector_18
 .text          0x00000000000000c4        0x0 ./main.o
 .text          0x00000000000000c4        0x0 ./oddebug.o
 .text          0x00000000000000c4      0x170 ./receiver.o
                0x00000000000000c4                usbFunctionSetup
                0x0000000000000164                main
 .text          0x0000000000000234      0x244 ./usbdrv.o
                0x000000000000024e                usbPoll
                0x0000000000000436                usbSetInterrupt
                0x0000000000000234                usbInit
 .text          0x0000000000000478      0x2a6 ./usbdrvasm.o
                0x00000000000004aa                __vector_1
                0x0000000000000478                usbCrc16
                0x00000000000004a2                usbCrc16Append
 .text          0x000000000000071e        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .text          0x000000000000071e        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000071e        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
                0x000000000000071e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000000071e        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000071e        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000071e        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
                0x000000000000071e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000071e        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
                0x000000000000071e                exit
                0x000000000000071e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000071e        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000722                _etext = .

.data           0x0000000000800060        0x2 load address 0x0000000000000722
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 ./oddebug.o
 .data          0x0000000000800060        0x0 ./receiver.o
 .data          0x0000000000800060        0x2 ./usbdrv.o
                0x0000000000800060                usbTxLen
 .data          0x0000000000800062        0x0 ./usbdrvasm.o
 .data          0x0000000000800062        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800062        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800062        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800062                . = ALIGN (0x2)
                0x0000000000800062                _edata = .
                0x0000000000800062                PROVIDE (__data_end, .)

.bss            0x0000000000800062       0x6f
                0x0000000000800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800062        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800062        0x0 ./main.o
 .bss           0x0000000000800062        0x0 ./oddebug.o
 .bss           0x0000000000800062       0x38 ./receiver.o
 .bss           0x000000000080009a        0x1 ./usbdrv.o
 .bss           0x000000000080009b        0x0 ./usbdrvasm.o
 .bss           0x000000000080009b        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .bss           0x000000000080009b        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x000000000080009b        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080009b       0x36 ./usbdrv.o
                0x000000000080009b                usbTxBuf
                0x00000000008000a6                usbTxStatus1
                0x00000000008000b2                usbDeviceAddr
                0x00000000008000b3                usbRxToken
                0x00000000008000b4                usbInputBufOffset
                0x00000000008000b5                usbMsgPtr
                0x00000000008000b7                usbRxLen
                0x00000000008000b8                usbNewDeviceAddr
                0x00000000008000b9                usbCurrentTok
                0x00000000008000ba                usbConfiguration
                0x00000000008000bb                usbRxBuf
                0x00000000008000d1                PROVIDE (__bss_end, .)
                0x0000000000000722                __data_load_start = LOADADDR (.data)
                0x0000000000000724                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000d1        0x0
                0x00000000008000d1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000d1                PROVIDE (__noinit_end, .)
                0x00000000008000d1                _end = .
                0x00000000008000d1                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(usb-cdc.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__bss_end                                         /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
__data_start                                      /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
__do_clear_bss                                    /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
                                                  ./usbdrv.o
                                                  ./receiver.o
                                                  ./oddebug.o
                                                  ./main.o
__do_copy_data                                    /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
                                                  ./usbdrv.o
                                                  ./receiver.o
                                                  ./oddebug.o
                                                  ./main.o
__heap_end                                        /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__init                                            /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__stack                                           /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_1                                        ./usbdrvasm.o
                                                  /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_10                                       /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_11                                       /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_12                                       /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_13                                       /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_14                                       /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_15                                       /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_16                                       /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_17                                       /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_18                                       /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_2                                        /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_3                                        /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_4                                        /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_5                                        /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_6                                        /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_7                                        /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_8                                        /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_9                                        /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vector_default                                  /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
__vectors                                         /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
_exit                                             /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
exit                                              /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
                                                  /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
main                                              ./receiver.o
                                                  /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
usbConfiguration                                  ./usbdrv.o
usbCrc16                                          ./usbdrvasm.o
usbCrc16Append                                    ./usbdrvasm.o
                                                  ./usbdrv.o
usbCurrentTok                                     ./usbdrvasm.o
                                                  ./usbdrv.o
usbDescriptorConfiguration                        ./usbdrv.o
usbDescriptorDevice                               ./usbdrv.o
usbDescriptorString0                              ./usbdrv.o
usbDescriptorStringDevice                         ./usbdrv.o
usbDescriptorStringVendor                         ./usbdrv.o
usbDeviceAddr                                     ./usbdrvasm.o
                                                  ./usbdrv.o
usbFunctionSetup                                  ./receiver.o
                                                  ./usbdrv.o
usbInit                                           ./usbdrv.o
                                                  ./receiver.o
usbInputBufOffset                                 ./usbdrvasm.o
                                                  ./usbdrv.o
usbMsgPtr                                         ./usbdrv.o
                                                  ./receiver.o
usbNewDeviceAddr                                  ./usbdrvasm.o
                                                  ./usbdrv.o
usbPoll                                           ./usbdrv.o
                                                  ./receiver.o
usbRxBuf                                          ./usbdrvasm.o
                                                  ./usbdrv.o
usbRxLen                                          ./usbdrvasm.o
                                                  ./usbdrv.o
usbRxToken                                        ./usbdrvasm.o
                                                  ./usbdrv.o
usbSetInterrupt                                   ./usbdrv.o
                                                  ./receiver.o
usbTxBuf                                          ./usbdrvasm.o
                                                  ./usbdrv.o
usbTxLen                                          ./usbdrv.o
                                                  ./usbdrvasm.o
usbTxStatus1                                      ./usbdrvasm.o
                                                  ./usbdrv.o
