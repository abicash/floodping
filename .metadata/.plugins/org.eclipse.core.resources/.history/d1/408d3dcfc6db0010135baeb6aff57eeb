#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>
#include <stdlib.h>
#include <stdio.h>
#include "uart.h"
#include "i2cmaster.h"

static union {
	unsigned char bytes[18];
	struct {
		unsigned short C1, C2, C3, C4, C5, C6, C7;
		unsigned char A, B, C, D;
	} Coeff;
} HP03_Cal;


static struct {
		unsigned short sens,off;
} HH10_Cal;


#define u8 unsigned char
#define u16 unsigned short

#define HP03_ADC_ADDR_W  0xEE
#define HP03_ADC_ADDR_R  0xEF

#define HP03_CAL_ADDR_W  0xA0
#define HP03_CAL_ADDR_R  0xA1

#define HH10_CAL_ADDR_W  0xA2
#define HH10_CAL_ADDR_R  0xA3


void HP03_ReadOne(u8 what, u16 *v)
{
	i2c_start_wait(HP03_ADC_ADDR_W);
	i2c_write(0xFF);
	i2c_write(what);
	i2c_stop();

	_delay_us(40000);

	i2c_start_wait(HP03_ADC_ADDR_W);
	i2c_write(0xFD);
	i2c_rep_start(HP03_ADC_ADDR_R);
	*v = i2c_readAck() << 8 | i2c_readNak();
	i2c_stop();
}

void HP03_Read(int *t, int *p) {

	u16 D1, D2;
	HP03_ReadOne(0xE8, &D2);
	HP03_ReadOne(0xF0, &D1);

	long Z = (D2 < HP03_Cal.Coeff.C5) ? HP03_Cal.Coeff.B : HP03_Cal.Coeff.A;
	long X = ((long) D2) - HP03_Cal.Coeff.C5;
	long dUT1 = (X * Z * X) >> 14;
	long dUT = (X - (dUT1 / (1 << HP03_Cal.Coeff.C)));

	*t = (250 + ( (dUT * HP03_Cal.Coeff.C6) >> 16) ) - (dUT >> HP03_Cal.Coeff.D);

	long Offs = (HP03_Cal.Coeff.C2 + (((HP03_Cal.Coeff.C4 - 1024) * dUT) >> 14)) << 2;
	long Sens = HP03_Cal.Coeff.C1 + ( ( HP03_Cal.Coeff.C3 * dUT ) >> 10 );
	X = ( (Sens * ( ((long)D1) - 7168) ) >> 14 ) - Offs;
	*p = ((X >> 5) + (((long)HP03_Cal.Coeff.C7) / 10));
}

volatile int xxx = 0;
ISR (TIMER1_CAPT_vect)
{
  xxx++;
  TCNT1 = 0;
}

int main() {

	uart_puts("Boot.......\r\n");

	TCCR2 = (1<<CS20);
	TCCR2 |= (1<<WGM21) | (1<<COM20);
	OCR2 = 183;


	//TCCR1B = (1<<ICES1) | (0<<WGM13);
	TCCR1B |= (0<<CS12)|(1<<CS11)|(0<<CS10);
	DDRD &= ~(1<<PD6);
	PORTD &= ~(1<<PD6);
	TIFR |= (1<<ICF1);
	TIMSK  |= (1<<TICIE1);

	uart_init(UART_BAUD_SELECT(57600, F_CPU));
	sei();

	DDRD |= (1 << PD7);

	DDRC |= (1 << PC2);
	PORTC |= (1 << PC0) | (1 << PC1);

	PORTC &= ~(1 << PC2);

	i2c_init();

	i2c_start_wait(HP03_CAL_ADDR_W);
	i2c_write(0x10);
	i2c_rep_start(HP03_CAL_ADDR_R);

	for (int i = 0; i < 7; i++)
	{
		HP03_Cal.bytes[(i<<1)+1] = i2c_readAck();
		HP03_Cal.bytes[(i<<1)] = i2c_readAck();
	}
	for (int i = 14; i < 17; i++)
	{
		HP03_Cal.bytes[i] = i2c_readAck();
	}
	HP03_Cal.bytes[17] = i2c_readNak();
	i2c_stop();



	i2c_start_wait(HH10_CAL_ADDR_W);
	i2c_write(0x0A);
	i2c_rep_start(HH10_CAL_ADDR_R);
	HH10_Cal.sens = (i2c_readAck() << 8 ) | i2c_readAck();
	HH10_Cal.off = (i2c_readAck() << 8 ) | i2c_readNak();
	i2c_stop();

	PORTC |= (1 << PC2); // XCLR high
	_delay_ms(10);

	while (1) {

		int t = 0;
		int p = 0;

//		HP03_Read(&t, &p);
//		_delay_ms(1);
//
		char s[100];
//		HP03_Read(&t, &p);
//		sprintf(s, "T:%d\r\n", t);
//		uart_puts(s);
//		sprintf(s, "P:%d\r\n", p);
//		uart_puts(s);

		sprintf(s, "f:%d        %d\r\n", PIND & (1<<PD6), ICR1);
		uart_puts(s);

		//_delay_ms(200);
	}
}
