/*---------------------------------------------------------------------------------------------------------------------------------------------------
 * main.c - demo main module to test irmp decoder
 *
 * Copyright (c) 2009-2010 Frank Meyer - frank(at)fli4l.de
 *
 * ATMEGA88 @ 8 MHz
 *
 * Fuses: lfuse: 0xE2 hfuse: 0xDC efuse: 0xF9
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *---------------------------------------------------------------------------------------------------------------------------------------------------
 */

#include <inttypes.h>
#include <avr/io.h>
#include <util/delay.h>
#include <avr/pgmspace.h>
#include <avr/interrupt.h>
#include "irmp.h"

#ifndef F_CPU
#error F_CPU unkown
#endif

#define F_INTERRUPT   10000                                                     // 10000 interrupts per second
void timer_init(void) {
#define PRESCALER 8
	TCCR0A = (1 << WGM01); /* IR polling timer */
	TCCR0B = (1 << CS01); // switch CTC Mode on, set prescaler to 1

	// may adjust IR polling rate here to optimize IR receiving:
	OCR0A = (F_CPU / F_INTERRUPT / PRESCALER) - 1; // compare value: 1/10000 of CPU frequency

	// enable Timer1 for IR polling
	TIMSK = 1 << OCIE0A; // Timer0A ISR activate

}

/*---------------------------------------------------------------------------------------------------------------------------------------------------
 * timer 1 compare handler, should be called every 1/10000 sec
 *---------------------------------------------------------------------------------------------------------------------------------------------------
 */
void TIMER0_COMPA_vect(void) __attribute__((interrupt));
void TIMER0_COMPA_vect(void) {
	irmp_ISR();
}

/*---------------------------------------------------------------------------------------------------------------------------------------------------
 * MAIN: main routine
 *---------------------------------------------------------------------------------------------------------------------------------------------------
 */
int main(void) {
	DDRB |= (1 << PB0);
	IRMP_DATA irmp_data;

	irmp_init(); // initialize rc5
	timer_init();

	sei ();
	// enable interrupts

	for (;;) {
//		PORTB |= (1 << PB0);
//		_delay_ms(200);
//		PORTB &= 0xFE;
//		_delay_ms(200);

		if (irmp_get_data(&irmp_data)) {

			int x = irmp_data.protocol;
			for (int i = 0; i < 8; i++) {
				PORTB |= (1 << PB0);
				_delay_ms(100);
				if (x & 1 == 0) {
					PORTB &= 0xFE;
				}
				_delay_ms(400);
				PORTB &= 0xFE;
				_delay_ms(400);
			}

		}
	}
}
