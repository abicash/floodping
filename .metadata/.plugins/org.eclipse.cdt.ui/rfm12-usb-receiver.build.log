
**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3518 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xde:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3518 bytes):

Writing | ################################################## | 100% 2.45s

avrdude: 3518 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3518 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.80s

avrdude: verifying ...
avrdude: 3518 bytes of flash verified
avrdude: reading input file "0xde"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0xde:
avrdude: load data lfuse data from input file 0xde:
avrdude: input file 0xde contains 1 bytes
 
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****
