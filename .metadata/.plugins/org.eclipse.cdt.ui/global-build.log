
**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:117: warning: implicit declaration of function 'memcpy'
../main.c:117: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building file: ../twimaster.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"twimaster.d" -MT"twimaster.d" -c -o "twimaster.o" "../twimaster.c"
../twimaster.c:12:23: warning: i2cmaster.h: No such file or directory
../twimaster.c: In function 'i2c_init':
../twimaster.c:31: error: 'TWSR' undeclared (first use in this function)
../twimaster.c:31: error: (Each undeclared identifier is reported only once
../twimaster.c:31: error: for each function it appears in.)
../twimaster.c:32: error: 'TWBR' undeclared (first use in this function)
../twimaster.c: In function 'i2c_start':
../twimaster.c:46: error: 'TWCR' undeclared (first use in this function)
../twimaster.c:46: error: 'TWINT' undeclared (first use in this function)
../twimaster.c:46: error: 'TWSTA' undeclared (first use in this function)
../twimaster.c:46: error: 'TWEN' undeclared (first use in this function)
../twimaster.c:52: error: 'TWSR' undeclared (first use in this function)
../twimaster.c:52: error: 'TWS7' undeclared (first use in this function)
../twimaster.c:52: error: 'TWS6' undeclared (first use in this function)
../twimaster.c:52: error: 'TWS5' undeclared (first use in this function)
../twimaster.c:52: error: 'TWS4' undeclared (first use in this function)
../twimaster.c:52: error: 'TWS3' undeclared (first use in this function)
../twimaster.c:56: error: 'TWDR' undeclared (first use in this function)
../twimaster.c: In function 'i2c_start_wait':
../twimaster.c:85: error: 'TWCR' undeclared (first use in this function)
../twimaster.c:85: error: 'TWINT' undeclared (first use in this function)
../twimaster.c:85: error: 'TWSTA' undeclared (first use in this function)
../twimaster.c:85: error: 'TWEN' undeclared (first use in this function)
../twimaster.c:91: error: 'TWSR' undeclared (first use in this function)
../twimaster.c:91: error: 'TWS7' undeclared (first use in this function)
../twimaster.c:91: error: 'TWS6' undeclared (first use in this function)
../twimaster.c:91: error: 'TWS5' undeclared (first use in this function)
../twimaster.c:91: error: 'TWS4' undeclared (first use in this function)
../twimaster.c:91: error: 'TWS3' undeclared (first use in this function)
../twimaster.c:95: error: 'TWDR' undeclared (first use in this function)
../twimaster.c:106: error: 'TWSTO' undeclared (first use in this function)
../twimaster.c: In function 'i2c_stop':
../twimaster.c:141: error: 'TWCR' undeclared (first use in this function)
../twimaster.c:141: error: 'TWINT' undeclared (first use in this function)
../twimaster.c:141: error: 'TWEN' undeclared (first use in this function)
../twimaster.c:141: error: 'TWSTO' undeclared (first use in this function)
../twimaster.c: In function 'i2c_write':
../twimaster.c:161: error: 'TWDR' undeclared (first use in this function)
../twimaster.c:162: error: 'TWCR' undeclared (first use in this function)
../twimaster.c:162: error: 'TWINT' undeclared (first use in this function)
../twimaster.c:162: error: 'TWEN' undeclared (first use in this function)
../twimaster.c:168: error: 'TWSR' undeclared (first use in this function)
../twimaster.c:168: error: 'TWS7' undeclared (first use in this function)
../twimaster.c:168: error: 'TWS6' undeclared (first use in this function)
../twimaster.c:168: error: 'TWS5' undeclared (first use in this function)
../twimaster.c:168: error: 'TWS4' undeclared (first use in this function)
../twimaster.c:168: error: 'TWS3' undeclared (first use in this function)
../twimaster.c: In function 'i2c_readAck':
../twimaster.c:182: error: 'TWCR' undeclared (first use in this function)
../twimaster.c:182: error: 'TWINT' undeclared (first use in this function)
../twimaster.c:182: error: 'TWEN' undeclared (first use in this function)
../twimaster.c:182: error: 'TWEA' undeclared (first use in this function)
../twimaster.c:185: error: 'TWDR' undeclared (first use in this function)
../twimaster.c: In function 'i2c_readNak':
../twimaster.c:197: error: 'TWCR' undeclared (first use in this function)
../twimaster.c:197: error: 'TWINT' undeclared (first use in this function)
../twimaster.c:197: error: 'TWEN' undeclared (first use in this function)
../twimaster.c:200: error: 'TWDR' undeclared (first use in this function)
make: *** [twimaster.o] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project rh10hp03-tiny2313 ****

make clean 
rm -rf  ./main.o ./rf12.o ./twimaster.o ./uart.o  ./main.d ./rf12.d ./twimaster.d ./uart.d  rh10hp03-tiny2313.eep  rh10hp03-tiny2313.hex  rh10hp03-tiny2313.lss  sizedummy  rh10hp03-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c:16: warning: 'WDT_OVERFLOW_vect' appears to be a misspelled signal handler
../main.c: In function 'WDT_OVERFLOW_vect':
../main.c:18: error: 'WDTCSR' undeclared (first use in this function)
../main.c:18: error: (Each undeclared identifier is reported only once
../main.c:18: error: for each function it appears in.)
../main.c:18: error: 'WDIE' undeclared (first use in this function)
../main.c: In function 'send':
../main.c:117: warning: implicit declaration of function 'memcpy'
../main.c:117: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:151: error: 'WDTCSR' undeclared (first use in this function)
../main.c:151: error: 'WDIE' undeclared (first use in this function)
../main.c:163: error: 'ICIE1' undeclared (first use in this function)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:117: warning: implicit declaration of function 'memcpy'
../main.c:117: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:151: error: 'WDTCSR' undeclared (first use in this function)
../main.c:151: error: (Each undeclared identifier is reported only once
../main.c:151: error: for each function it appears in.)
../main.c:151: error: 'WDIE' undeclared (first use in this function)
../main.c:163: error: 'ICIE1' undeclared (first use in this function)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:117: warning: implicit declaration of function 'memcpy'
../main.c:117: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:163: error: 'ICIE' undeclared (first use in this function)
../main.c:163: error: (Each undeclared identifier is reported only once
../main.c:163: error: for each function it appears in.)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:117: warning: implicit declaration of function 'memcpy'
../main.c:117: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:163: error: 'ICIE1' undeclared (first use in this function)
../main.c:163: error: (Each undeclared identifier is reported only once
../main.c:163: error: for each function it appears in.)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:117: warning: implicit declaration of function 'memcpy'
../main.c:117: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building file: ../twimaster.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"twimaster.d" -MT"twimaster.d" -c -o "twimaster.o" "../twimaster.c"
../twimaster.c:12:23: warning: i2cmaster.h: No such file or directory
Finished building: ../twimaster.c
 
Building file: ../uart.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"uart.d" -MT"uart.d" -c -o "uart.o" "../uart.c"
Finished building: ../uart.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2880 bytes (35.2% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:117: warning: implicit declaration of function 'memcpy'
../main.c:117: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:151: error: 'WDTCSR' undeclared (first use in this function)
../main.c:151: error: (Each undeclared identifier is reported only once
../main.c:151: error: for each function it appears in.)
../main.c:151: error: 'WDIE' undeclared (first use in this function)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:117: warning: implicit declaration of function 'memcpy'
../main.c:117: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:151: error: 'WDIE' undeclared (first use in this function)
../main.c:151: error: (Each undeclared identifier is reported only once
../main.c:151: error: for each function it appears in.)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:117: warning: implicit declaration of function 'memcpy'
../main.c:117: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2886 bytes (35.2% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:202: error: 'WDTcounter' undeclared (first use in this function)
../main.c:202: error: (Each undeclared identifier is reported only once
../main.c:202: error: for each function it appears in.)
../main.c: At top level:
../main.c:217: error: expected identifier or '(' before '}' token
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:120: warning: implicit declaration of function 'memcpy'
../main.c:120: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c:121: error: 't' undeclared (first use in this function)
../main.c:121: error: (Each undeclared identifier is reported only once
../main.c:121: error: for each function it appears in.)
../main.c:122: error: 'p' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:219: error: expected declaration or statement at end of input
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:120: warning: implicit declaration of function 'memcpy'
../main.c:120: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c:121: error: 't' undeclared (first use in this function)
../main.c:121: error: (Each undeclared identifier is reported only once
../main.c:121: error: for each function it appears in.)
../main.c:122: error: 'p' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:220: error: expected declaration or statement at end of input
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:121: warning: implicit declaration of function 'memcpy'
../main.c:121: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:221: error: expected declaration or statement at end of input
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:121: warning: implicit declaration of function 'memcpy'
../main.c:121: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2882 bytes (35.2% Full)
(.text + .data + .bootloader)

Data:        155 bytes (15.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2882 bytes (35.2% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:118: warning: implicit declaration of function 'memcpy'
../main.c:118: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2934 bytes (35.8% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2898 bytes (35.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
../rf12.c: In function 'rf12_preinit':
../rf12.c:63: error: 'FSK' undeclared (first use in this function)
../rf12.c:63: error: (Each undeclared identifier is reported only once
../rf12.c:63: error: for each function it appears in.)
make: *** [rf12.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
../rf12.c: In function 'rf12_preinit':
../rf12.c:66: error: 'FSK' undeclared (first use in this function)
../rf12.c:66: error: (Each undeclared identifier is reported only once
../rf12.c:66: error: for each function it appears in.)
make: *** [rf12.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2896 bytes (35.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2896 bytes (35.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2902 bytes (35.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2902 bytes (35.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2902 bytes (35.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4436 bytes (54.2% Full)
(.text + .data + .bootloader)

Data:        155 bytes (15.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4436 bytes (54.2% Full)
(.text + .data + .bootloader)

Data:        155 bytes (15.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:135: error: 'uiX' undeclared (first use in this function)
../main.c:135: error: (Each undeclared identifier is reported only once
../main.c:135: error: for each function it appears in.)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2952 bytes (36.0% Full)
(.text + .data + .bootloader)

Data:        149 bytes (14.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2718 bytes (33.2% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2710 bytes (33.1% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4260 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4260 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4260 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4214 bytes (51.4% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4220 bytes (51.5% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4220 bytes (51.5% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4260 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4268 bytes (52.1% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4268 bytes (52.1% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4268 bytes (52.1% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4262 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4256 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4256 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4258 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4262 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4236 bytes (51.7% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:111: warning: implicit declaration of function 'memcpy'
../main.c:111: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4250 bytes (51.9% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c:80: warning: 'TIMER1_COMP_vect' appears to be a misspelled signal handler
../main.c: In function 'send':
../main.c:114: warning: implicit declaration of function 'memcpy'
../main.c:114: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4270 bytes (52.1% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4272 bytes (52.1% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function '__vector_6':
../main.c:81: warning: implicit declaration of function 'nop'
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
./main.o: In function `__vector_6':
main.c:(.text+0x280): undefined reference to `nop'
make: *** [rh10hp03-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:117: warning: implicit declaration of function 'memcpy'
../main.c:117: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4272 bytes (52.1% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4272 bytes (52.1% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:143: error: 'WDT_2S' undeclared (first use in this function)
../main.c:143: error: (Each undeclared identifier is reported only once
../main.c:143: error: for each function it appears in.)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4278 bytes (52.2% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4276 bytes (52.2% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4278 bytes (52.2% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4272 bytes (52.1% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2700 bytes (33.0% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2696 bytes (32.9% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2696 bytes (32.9% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2696 bytes (32.9% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2696 bytes (32.9% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2696 bytes (32.9% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2696 bytes (32.9% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2696 bytes (32.9% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2690 bytes (32.8% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2690 bytes (32.8% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2690 bytes (32.8% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2690 bytes (32.8% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2690 bytes (32.8% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2690 bytes (32.8% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2690 bytes (32.8% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2704 bytes (33.0% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4270 bytes (52.1% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4224 bytes (51.6% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Clean-only build of configuration Release for project rh10hp03-tiny2313 ****

make clean 
rm -rf  ./main.o ./rf12.o ./twimaster.o ./uart.o  ./main.d ./rf12.d ./twimaster.d ./uart.d  rh10hp03-tiny2313.eep  rh10hp03-tiny2313.hex  rh10hp03-tiny2313.lss  sizedummy  rh10hp03-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building file: ../twimaster.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"twimaster.d" -MT"twimaster.d" -c -o "twimaster.o" "../twimaster.c"
../twimaster.c:12:23: warning: i2cmaster.h: No such file or directory
Finished building: ../twimaster.c
 
Building file: ../uart.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"uart.d" -MT"uart.d" -c -o "uart.o" "../uart.c"
Finished building: ../uart.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4224 bytes (51.6% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4206 bytes (51.3% Full)
(.text + .data + .bootloader)

Data:        153 bytes (14.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: implicit declaration of function 'memcpy'
../main.c:115: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4216 bytes (51.5% Full)
(.text + .data + .bootloader)

Data:        157 bytes (15.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:119: warning: implicit declaration of function 'memcpy'
../main.c:119: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4256 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        157 bytes (15.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:119: warning: implicit declaration of function 'memcpy'
../main.c:119: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4258 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        149 bytes (14.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:119: warning: implicit declaration of function 'memcpy'
../main.c:119: warning: incompatible implicit declaration of built-in function 'memcpy'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4258 bytes (52.0% Full)
(.text + .data + .bootloader)

Data:        149 bytes (14.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:119: warning: implicit declaration of function 'memcpy'
../main.c:119: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:168: warning: format '%d' expects type 'int', but argument 3 has type 'long int'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4266 bytes (52.1% Full)
(.text + .data + .bootloader)

Data:        149 bytes (14.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:119: warning: implicit declaration of function 'memcpy'
../main.c:119: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:160: warning: unused variable 's'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2732 bytes (33.3% Full)
(.text + .data + .bootloader)

Data:        143 bytes (14.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:118: warning: implicit declaration of function 'memcpy'
../main.c:118: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:160: warning: unused variable 's'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2930 bytes (35.8% Full)
(.text + .data + .bootloader)

Data:        149 bytes (14.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:118: warning: implicit declaration of function 'memcpy'
../main.c:118: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:160: warning: unused variable 's'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2950 bytes (36.0% Full)
(.text + .data + .bootloader)

Data:        149 bytes (14.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:116: warning: implicit declaration of function 'memcpy'
../main.c:116: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:158: warning: unused variable 's'
../main.c:189: warning: 'uiTemp' may be used uninitialized in this function
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2914 bytes (35.6% Full)
(.text + .data + .bootloader)

Data:        149 bytes (14.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:116: warning: implicit declaration of function 'memcpy'
../main.c:116: warning: incompatible implicit declaration of built-in function 'memcpy'
../main.c: In function 'main':
../main.c:158: warning: unused variable 's'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2916 bytes (35.6% Full)
(.text + .data + .bootloader)

Data:        149 bytes (14.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2916 bytes (35.6% Full)
(.text + .data + .bootloader)

Data:        149 bytes (14.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2916 bytes (35.6% Full)
(.text + .data + .bootloader)

Data:        149 bytes (14.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
../rf12.c: In function 'rf12_trans':
../rf12.c:51: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c:51: error: (Each undeclared identifier is reported only once
../rf12.c:51: error: for each function it appears in.)
../rf12.c:59: error: 'RF_PIN' undeclared (first use in this function)
../rf12.c: In function 'rf12_preinit':
../rf12.c:79: error: 'RF_DDR' undeclared (first use in this function)
../rf12.c:80: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c: In function 'rf12_ready':
../rf12.c:138: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c:142: error: 'RF_PIN' undeclared (first use in this function)
make: *** [rf12.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
../rf12.c: In function 'rf12_trans':
../rf12.c:55: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c:55: error: (Each undeclared identifier is reported only once
../rf12.c:55: error: for each function it appears in.)
../rf12.c: In function 'rf12_preinit':
../rf12.c:79: error: 'RF_DDR' undeclared (first use in this function)
../rf12.c:80: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c: In function 'rf12_ready':
../rf12.c:138: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c:142: error: 'RF_PIN' undeclared (first use in this function)
make: *** [rf12.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
../rf12.c: In function 'rf12_trans':
../rf12.c:66: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c:66: error: (Each undeclared identifier is reported only once
../rf12.c:66: error: for each function it appears in.)
../rf12.c: In function 'rf12_preinit':
../rf12.c:79: error: 'RF_DDR' undeclared (first use in this function)
../rf12.c:80: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c: In function 'rf12_ready':
../rf12.c:138: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c:142: error: 'RF_PIN' undeclared (first use in this function)
make: *** [rf12.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
../rf12.c: In function 'rf12_preinit':
../rf12.c:79: error: 'RF_DDR' undeclared (first use in this function)
../rf12.c:79: error: (Each undeclared identifier is reported only once
../rf12.c:79: error: for each function it appears in.)
../rf12.c:80: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c: In function 'rf12_ready':
../rf12.c:138: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c:142: error: 'RF_PIN' undeclared (first use in this function)
make: *** [rf12.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
../rf12.c: In function 'rf12_ready':
../rf12.c:141: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c:141: error: (Each undeclared identifier is reported only once
../rf12.c:141: error: for each function it appears in.)
../rf12.c:145: error: 'RF_PIN' undeclared (first use in this function)
make: *** [rf12.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2924 bytes (35.7% Full)
(.text + .data + .bootloader)

Data:        149 bytes (14.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2988 bytes (36.5% Full)
(.text + .data + .bootloader)

Data:        189 bytes (18.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2992 bytes (36.5% Full)
(.text + .data + .bootloader)

Data:        189 bytes (18.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3034 bytes (37.0% Full)
(.text + .data + .bootloader)

Data:        219 bytes (21.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3036 bytes (37.1% Full)
(.text + .data + .bootloader)

Data:        219 bytes (21.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3118 bytes (38.1% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3138 bytes (38.3% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3162 bytes (38.6% Full)
(.text + .data + .bootloader)

Data:        265 bytes (25.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
../rf12.c: In function 'rf12_preinit':
../rf12.c:85: error: 'RF_PORT' undeclared (first use in this function)
../rf12.c:85: error: (Each undeclared identifier is reported only once
../rf12.c:85: error: for each function it appears in.)
../rf12.c: In function 'rf12_init':
../rf12.c:93: error: 'RF_PORT' undeclared (first use in this function)
make: *** [rf12.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3166 bytes (38.6% Full)
(.text + .data + .bootloader)

Data:        265 bytes (25.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3160 bytes (38.6% Full)
(.text + .data + .bootloader)

Data:        265 bytes (25.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3168 bytes (38.7% Full)
(.text + .data + .bootloader)

Data:        265 bytes (25.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
../rf12.c: In function 'rf12_txdata_send':
../rf12.c:193: warning: implicit declaration of function 'wdt_reset'
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
./rf12.o: In function `rf12_txdata_send':
rf12.c:(.text+0x1d0): undefined reference to `wdt_reset'
make: *** [rh10hp03-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3150 bytes (38.5% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3176 bytes (38.8% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3148 bytes (38.4% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3148 bytes (38.4% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3150 bytes (38.5% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3188 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:        271 bytes (26.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3180 bytes (38.8% Full)
(.text + .data + .bootloader)

Data:        271 bytes (26.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:231: error: 'buf' undeclared (first use in this function)
../main.c:231: error: (Each undeclared identifier is reported only once
../main.c:231: error: for each function it appears in.)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3140 bytes (38.3% Full)
(.text + .data + .bootloader)

Data:        265 bytes (25.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3140 bytes (38.3% Full)
(.text + .data + .bootloader)

Data:        265 bytes (25.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3142 bytes (38.4% Full)
(.text + .data + .bootloader)

Data:        265 bytes (25.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3130 bytes (38.2% Full)
(.text + .data + .bootloader)

Data:        263 bytes (25.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3180 bytes (38.8% Full)
(.text + .data + .bootloader)

Data:        271 bytes (26.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3174 bytes (38.7% Full)
(.text + .data + .bootloader)

Data:        271 bytes (26.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3094 bytes (37.8% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3100 bytes (37.8% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3100 bytes (37.8% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3100 bytes (37.8% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3178 bytes (38.8% Full)
(.text + .data + .bootloader)

Data:        271 bytes (26.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3110 bytes (38.0% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3128 bytes (38.2% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3112 bytes (38.0% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3118 bytes (38.1% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3108 bytes (37.9% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3110 bytes (38.0% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:228: warning: implicit declaration of function 'cbi'
../main.c:228: error: 'RF_PORT_CS' undeclared (first use in this function)
../main.c:228: error: (Each undeclared identifier is reported only once
../main.c:228: error: for each function it appears in.)
../main.c:228: error: 'CS' undeclared (first use in this function)
../main.c:230: warning: implicit declaration of function 'sbi'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:257: warning: implicit declaration of function 'cbi'
../main.c:259: warning: implicit declaration of function 'sbi'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
./main.o: In function `main':
main.c:(.text+0x4a4): undefined reference to `cbi'
main.c:(.text+0x4b4): undefined reference to `sbi'
make: *** [rh10hp03-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3116 bytes (38.0% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:263: error: 'D4' undeclared (first use in this function)
../main.c:263: error: (Each undeclared identifier is reported only once
../main.c:263: error: for each function it appears in.)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3116 bytes (38.0% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3116 bytes (38.0% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3110 bytes (38.0% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3184 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:        271 bytes (26.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3184 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:        271 bytes (26.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3184 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:        271 bytes (26.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project netio ****

make -j4 all 
/bin/sh core/portio/cfgpp pinning/named_pin/default
Build meta files
sed -ne '/Ethersex META/{n;:loop p;n;/\*\//!bloop }' ethersex.c core/eeprom.c  core/util/fixedpoint.c core/util/string_parsing.c network.c core/debug.c core/periodic.c core/spi.c hardware/avr/dump_ecmd.c hardware/avr/fuse.c hardware/avr/hostname.c hardware/avr/reset_ecmd.c hardware/avr/bootloader_ecmd.c hardware/ethernet/ethernet_config.c hardware/ethernet/enc28j60.c hardware/ethernet/enc28j60_process.c hardware/ethernet/enc28j60_transmit.c hardware/radio/rfm12/rfm12.c hardware/radio/rfm12/process.c protocols/uip/uip.c protocols/uip/uip_multi.c protocols/uip/uip_router.c protocols/uip/uip_arp.c protocols/uip/check_cache.c protocols/uip/uip_rfm12.c protocols/dns/dns_net.c protocols/dns/resolv.c protocols/dns/dns_ecmd.c > meta.m4.tmp
m4 -I./pinning `scripts/m4-defines` pinning/internals/header.m4 pinning/controllers/atmega644p.m4 pinning/internals/hackery_atmega644p.m4 pinning/hardware/netio.m4 pinning/internals/footer.m4 > pinning.c
Copying to meta.m4
m4 `scripts/m4-defines` scripts/meta_magic.m4 meta.m4 > meta.c
m4 `scripts/m4-defines` scripts/meta_header_magic.m4 meta.m4 > meta.h
m4  ./control6/control6-header.m4 ./control6/control6.src > control6/control6.h
Build meta files
sed -ne '/Ethersex META/{n;:loop p;n;/\*\//!bloop }' ethersex.c core/eeprom.c  core/util/fixedpoint.c core/util/string_parsing.c network.c core/debug.c core/periodic.c core/spi.c hardware/avr/dump_ecmd.c hardware/avr/fuse.c hardware/avr/hostname.c hardware/avr/reset_ecmd.c hardware/avr/bootloader_ecmd.c hardware/ethernet/ethernet_config.c hardware/ethernet/enc28j60.c hardware/ethernet/enc28j60_process.c hardware/ethernet/enc28j60_transmit.c hardware/radio/rfm12/rfm12.c hardware/radio/rfm12/process.c protocols/uip/uip.c protocols/uip/uip_multi.c protocols/uip/uip_router.c protocols/uip/uip_arp.c protocols/uip/check_cache.c protocols/uip/uip_rfm12.c protocols/dns/dns_net.c protocols/dns/resolv.c protocols/dns/dns_ecmd.c > meta.m4.tmp
In file included from ./core/usart.h:90,
                 from core/debug.c:50:
./core/setbaud.h:213:4: warning: #warning "Baud rate achieved is higher than allowed"
hardware/radio/rfm12/rfm12.c: In function 'udpsend':
hardware/radio/rfm12/rfm12.c:253: warning: assignment discards qualifiers from pointer target type
hardware/radio/rfm12/rfm12.c: In function 'x':
hardware/radio/rfm12/rfm12.c:439: warning: passing argument 1 of 'uip_send' discards qualifiers from pointer target type
Copying to meta.m4
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o ethersex.o ethersex.c
meta.c: In function 'ethersex_meta_mainloop':
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o core/eeprom.o core/eeprom.c
meta.c:87: warning: implicit declaration of function 'rfm12_int_process'
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o core/util/fixedpoint.o core/util/fixedpoint.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o network.o network.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o core/debug.o core/debug.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o core/periodic.o core/periodic.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o core/spi.o core/spi.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/avr/dump_ecmd.o hardware/avr/dump_ecmd.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/avr/fuse.o hardware/avr/fuse.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/avr/hostname.o hardware/avr/hostname.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/avr/reset_ecmd.o hardware/avr/reset_ecmd.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/avr/bootloader_ecmd.o hardware/avr/bootloader_ecmd.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/ethernet/ethernet_config.o hardware/ethernet/ethernet_config.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/ethernet/enc28j60.o hardware/ethernet/enc28j60.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/ethernet/enc28j60_process.o hardware/ethernet/enc28j60_process.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/ethernet/enc28j60_transmit.o hardware/ethernet/enc28j60_transmit.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/radio/rfm12/rfm12.o hardware/radio/rfm12/rfm12.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/radio/rfm12/process.o hardware/radio/rfm12/process.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o protocols/uip/uip.o protocols/uip/uip.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o protocols/uip/uip_multi.o protocols/uip/uip_multi.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o protocols/uip/uip_router.o protocols/uip/uip_router.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o protocols/uip/uip_arp.o protocols/uip/uip_arp.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o protocols/uip/check_cache.o protocols/uip/check_cache.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o protocols/uip/uip_rfm12.o protocols/uip/uip_rfm12.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o protocols/dns/dns_net.o protocols/dns/dns_net.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o protocols/dns/resolv.o protocols/dns/resolv.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o protocols/dns/dns_ecmd.o protocols/dns/dns_ecmd.c
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o meta.o meta.c
avr-gcc -mmcu=atmega644p -Wl,--gc-sections -o ethersex ethersex.o core/eeprom.o core/util/fixedpoint.o core/util/string_parsing.o network.o core/debug.o core/periodic.o core/spi.o hardware/avr/dump_ecmd.o hardware/avr/fuse.o hardware/avr/hostname.o hardware/avr/reset_ecmd.o hardware/avr/bootloader_ecmd.o hardware/ethernet/ethernet_config.o hardware/ethernet/enc28j60.o hardware/ethernet/enc28j60_process.o hardware/ethernet/enc28j60_transmit.o hardware/radio/rfm12/rfm12.o hardware/radio/rfm12/process.o protocols/uip/uip.o protocols/uip/uip_multi.o protocols/uip/uip_router.o protocols/uip/uip_arp.o protocols/uip/check_cache.o protocols/uip/uip_rfm12.o protocols/dns/dns_net.o protocols/dns/resolv.o protocols/dns/dns_ecmd.o meta.o  -lc -lm # Pixie Dust!!! (Bug in avr-binutils)
avr-objcopy -O ihex -R .eeprom ethersex ethersex.hex
avr-objcopy -O binary -R .eeprom ethersex ethersex.bin
=======The ethersex project========
Compiled for: atmega644p at 16000000Hz
Imagesize: 17378/65536 bytes (26.52%)
  [=======-----------------------]

Program (.text + .data)	: 17378 bytes
Data (.data + .bss)	:  2197 bytes

===================================

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3154 bytes (38.5% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project netio ****

make -j4 all 
Build meta files
sed -ne '/Ethersex META/{n;:loop p;n;/\*\//!bloop }' ethersex.c core/eeprom.c  core/util/fixedpoint.c core/util/string_parsing.c network.c core/debug.c core/periodic.c core/spi.c hardware/avr/dump_ecmd.c hardware/avr/fuse.c hardware/avr/hostname.c hardware/avr/reset_ecmd.c hardware/avr/bootloader_ecmd.c hardware/ethernet/ethernet_config.c hardware/ethernet/enc28j60.c hardware/ethernet/enc28j60_process.c hardware/ethernet/enc28j60_transmit.c hardware/radio/rfm12/rfm12.c hardware/radio/rfm12/process.c protocols/uip/uip.c protocols/uip/uip_multi.c protocols/uip/uip_router.c protocols/uip/uip_arp.c protocols/uip/check_cache.c protocols/uip/uip_rfm12.c protocols/dns/dns_net.c protocols/dns/resolv.c protocols/dns/dns_ecmd.c > meta.m4.tmp
Copying to meta.m4
=======The ethersex project========
Compiled for: atmega644p at 16000000Hz
Imagesize: 17378/65536 bytes (26.52%)
  [=======-----------------------]

Program (.text + .data)	: 17378 bytes
Data (.data + .bss)	:  2197 bytes

===================================

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3154 bytes (38.5% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3154 bytes (38.5% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3154 bytes (38.5% Full)
(.text + .data + .bootloader)

Data:        259 bytes (25.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3184 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:        271 bytes (26.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3184 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:        271 bytes (26.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3200 bytes (39.1% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3196 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:        283 bytes (27.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3112 bytes (38.0% Full)
(.text + .data + .bootloader)

Data:        261 bytes (25.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3116 bytes (38.0% Full)
(.text + .data + .bootloader)

Data:        261 bytes (25.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3128 bytes (38.2% Full)
(.text + .data + .bootloader)

Data:        261 bytes (25.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3128 bytes (38.2% Full)
(.text + .data + .bootloader)

Data:        261 bytes (25.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3126 bytes (38.2% Full)
(.text + .data + .bootloader)

Data:        261 bytes (25.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3130 bytes (38.2% Full)
(.text + .data + .bootloader)

Data:        261 bytes (25.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3128 bytes (38.2% Full)
(.text + .data + .bootloader)

Data:        261 bytes (25.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:232: warning: implicit declaration of function 'cbi'
../main.c:232: error: 'RF_PORT_CS' undeclared (first use in this function)
../main.c:232: error: (Each undeclared identifier is reported only once
../main.c:232: error: for each function it appears in.)
../main.c:232: error: 'CS' undeclared (first use in this function)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3194 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:255: warning: integer overflow in expression
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3194 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3194 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3194 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3194 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3194 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3194 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3194 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3194 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3198 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3220 bytes (39.3% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3210 bytes (39.2% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: unused variable 'ptemp'
../main.c:114: warning: unused variable 'ttemp'
../main.c:113: warning: unused variable 'RHvalue'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3128 bytes (38.2% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: unused variable 'ptemp'
../main.c:114: warning: unused variable 'ttemp'
../main.c:113: warning: unused variable 'RHvalue'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3100 bytes (37.8% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: unused variable 'ptemp'
../main.c:114: warning: unused variable 'ttemp'
../main.c:113: warning: unused variable 'RHvalue'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3090 bytes (37.7% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3090 bytes (37.7% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:115: warning: unused variable 'ptemp'
../main.c:114: warning: unused variable 'ttemp'
../main.c:113: warning: unused variable 'RHvalue'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3088 bytes (37.7% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project netio ****

make -j4 all 
Build meta files
sed -ne '/Ethersex META/{n;:loop p;n;/\*\//!bloop }' ethersex.c core/eeprom.c  core/util/fixedpoint.c core/util/string_parsing.c network.c core/debug.c core/periodic.c core/spi.c hardware/avr/dump_ecmd.c hardware/avr/fuse.c hardware/avr/hostname.c hardware/avr/reset_ecmd.c hardware/avr/bootloader_ecmd.c hardware/ethernet/ethernet_config.c hardware/ethernet/enc28j60.c hardware/ethernet/enc28j60_process.c hardware/ethernet/enc28j60_transmit.c hardware/radio/rfm12/rfm12.c hardware/radio/rfm12/process.c protocols/uip/uip.c protocols/uip/uip_multi.c protocols/uip/uip_router.c protocols/uip/uip_arp.c protocols/uip/check_cache.c protocols/uip/uip_rfm12.c protocols/dns/dns_net.c protocols/dns/resolv.c protocols/dns/dns_ecmd.c > meta.m4.tmp
hardware/radio/rfm12/rfm12.c: In function 'udpsend':
Copying to meta.m4
hardware/radio/rfm12/rfm12.c:253: warning: assignment discards qualifiers from pointer target type
Build meta files
hardware/radio/rfm12/rfm12.c: In function 'x':
sed -ne '/Ethersex META/{n;:loop p;n;/\*\//!bloop }' ethersex.c core/eeprom.c  core/util/fixedpoint.c core/util/string_parsing.c network.c core/debug.c core/periodic.c core/spi.c hardware/avr/dump_ecmd.c hardware/avr/fuse.c hardware/avr/hostname.c hardware/avr/reset_ecmd.c hardware/avr/bootloader_ecmd.c hardware/ethernet/ethernet_config.c hardware/ethernet/enc28j60.c hardware/ethernet/enc28j60_process.c hardware/ethernet/enc28j60_transmit.c hardware/radio/rfm12/rfm12.c hardware/radio/rfm12/process.c protocols/uip/uip.c protocols/uip/uip_multi.c protocols/uip/uip_router.c protocols/uip/uip_arp.c protocols/uip/check_cache.c protocols/uip/uip_rfm12.c protocols/dns/dns_net.c protocols/dns/resolv.c protocols/dns/dns_ecmd.c > meta.m4.tmp
hardware/radio/rfm12/rfm12.c:442: warning: passing argument 1 of 'uip_send' discards qualifiers from pointer target type
Copying to meta.m4
avr-gcc -Wall -W -Wno-unused-parameter -Wno-sign-compare -Wno-char-subscripts  -g -Os -std=gnu99 -fdata-sections -ffunction-sections -fshort-enums -fno-strict-aliasing -Iprotocols/usb/usbdrv -Iprotocols/usb -DAVR_BUILD -DF_CPU=16000000UL -mmcu=atmega644p -I.  -c -o hardware/radio/rfm12/rfm12.o hardware/radio/rfm12/rfm12.c
avr-gcc -mmcu=atmega644p -Wl,--gc-sections -o ethersex ethersex.o core/eeprom.o core/util/fixedpoint.o core/util/string_parsing.o network.o core/debug.o core/periodic.o core/spi.o hardware/avr/dump_ecmd.o hardware/avr/fuse.o hardware/avr/hostname.o hardware/avr/reset_ecmd.o hardware/avr/bootloader_ecmd.o hardware/ethernet/ethernet_config.o hardware/ethernet/enc28j60.o hardware/ethernet/enc28j60_process.o hardware/ethernet/enc28j60_transmit.o hardware/radio/rfm12/rfm12.o hardware/radio/rfm12/process.o protocols/uip/uip.o protocols/uip/uip_multi.o protocols/uip/uip_router.o protocols/uip/uip_arp.o protocols/uip/check_cache.o protocols/uip/uip_rfm12.o protocols/dns/dns_net.o protocols/dns/resolv.o protocols/dns/dns_ecmd.o meta.o  -lc -lm # Pixie Dust!!! (Bug in avr-binutils)
avr-objcopy -O ihex -R .eeprom ethersex ethersex.hex
avr-objcopy -O binary -R .eeprom ethersex ethersex.bin
=======The ethersex project========
Compiled for: atmega644p at 16000000Hz
Imagesize: 17384/65536 bytes (26.53%)
  [=======-----------------------]

Program (.text + .data)	: 17384 bytes
Data (.data + .bss)	:  2197 bytes

===================================

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3168 bytes (38.7% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4696 bytes (57.3% Full)
(.text + .data + .bootloader)

Data:        291 bytes (28.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3168 bytes (38.7% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3096 bytes (37.8% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3150 bytes (38.5% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:130: warning: passing argument 2 of 'memcpy' discards qualifiers from pointer target type
../main.c:134: warning: passing argument 2 of 'memcpy' discards qualifiers from pointer target type
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3170 bytes (38.7% Full)
(.text + .data + .bootloader)

Data:        283 bytes (27.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:130: warning: passing argument 2 of 'memcpy' discards qualifiers from pointer target type
../main.c:134: warning: passing argument 2 of 'memcpy' discards qualifiers from pointer target type
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3132 bytes (38.2% Full)
(.text + .data + .bootloader)

Data:        283 bytes (27.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function '__vector_5':
../main.c:78: error: 'RHvalue' undeclared (first use in this function)
../main.c:78: error: (Each undeclared identifier is reported only once
../main.c:78: error: for each function it appears in.)
../main.c:84: error: 'freq' undeclared (first use in this function)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3356 bytes (41.0% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3096 bytes (37.8% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readHH10':
../main.c:99: warning: unused variable 'freq'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3106 bytes (37.9% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readHH10':
../main.c:99: warning: unused variable 'freq'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4632 bytes (56.5% Full)
(.text + .data + .bootloader)

Data:        277 bytes (27.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4632 bytes (56.5% Full)
(.text + .data + .bootloader)

Data:        277 bytes (27.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readHH10':
../main.c:101: warning: unused variable 'freq'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4660 bytes (56.9% Full)
(.text + .data + .bootloader)

Data:        287 bytes (28.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readHH10':
../main.c:99: warning: unused variable 'freq'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4638 bytes (56.6% Full)
(.text + .data + .bootloader)

Data:        285 bytes (27.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readHH10':
../main.c:99: warning: unused variable 'freq'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3110 bytes (38.0% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3100 bytes (37.8% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readHH10':
../main.c:99: warning: unused variable 'freq'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4654 bytes (56.8% Full)
(.text + .data + .bootloader)

Data:        291 bytes (28.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readHH10':
../main.c:106: warning: format '%d' expects type 'int', but argument 3 has type 'long int'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4664 bytes (56.9% Full)
(.text + .data + .bootloader)

Data:        291 bytes (28.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readHH10':
../main.c:106: warning: format '%d' expects type 'int', but argument 3 has type 'long int'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4678 bytes (57.1% Full)
(.text + .data + .bootloader)

Data:        295 bytes (28.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readHH10':
../main.c:108: warning: format '%d' expects type 'int', but argument 3 has type 'long int'
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4678 bytes (57.1% Full)
(.text + .data + .bootloader)

Data:        295 bytes (28.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readHH10':
../main.c:108: warning: unknown conversion type character 0x20 in format
../main.c:108: warning: format '%d' expects type 'int', but argument 3 has type 'long int'
../main.c:108: warning: too many arguments for format
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4678 bytes (57.1% Full)
(.text + .data + .bootloader)

Data:        295 bytes (28.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4644 bytes (56.7% Full)
(.text + .data + .bootloader)

Data:        291 bytes (28.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3170 bytes (38.7% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3172 bytes (38.7% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3172 bytes (38.7% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3172 bytes (38.7% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2690 bytes (32.8% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2686 bytes (32.8% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2688 bytes (32.8% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:181: error: 'SLEEP_MODE_POWER_DOWN' undeclared (first use in this function)
../main.c:181: error: (Each undeclared identifier is reported only once
../main.c:181: error: for each function it appears in.)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2690 bytes (32.8% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2700 bytes (33.0% Full)
(.text + .data + .bootloader)

Data:        145 bytes (14.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3236 bytes (39.5% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3220 bytes (39.3% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Debug for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.c:3:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
../main.c:28: warning: 'WDT_OVERFLOW_vect' appears to be a misspelled signal handler
../main.c: In function 'main':
../main.c:51: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:58: warning: implicit declaration of function 'set_sleep_mode'
../main.c:58: error: 'SLEEP_MODE_PWR_DOWN' undeclared (first use in this function)
../main.c:58: error: (Each undeclared identifier is reported only once
../main.c:58: error: for each function it appears in.)
../main.c:59: warning: implicit declaration of function 'sleep_enable'
../main.c:61: warning: implicit declaration of function 'sleep_cpu'
../main.c:62: warning: implicit declaration of function 'sleep_disable'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Debug for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.c:3:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
../main.c:28: warning: 'RESET_vect' appears to be a misspelled signal handler
../main.c:33: warning: 'WDT_OVERFLOW_vect' appears to be a misspelled signal handler
../main.c: In function 'main':
../main.c:56: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:63: warning: implicit declaration of function 'set_sleep_mode'
../main.c:63: error: 'SLEEP_MODE_PWR_DOWN' undeclared (first use in this function)
../main.c:63: error: (Each undeclared identifier is reported only once
../main.c:63: error: for each function it appears in.)
../main.c:64: warning: implicit declaration of function 'sleep_enable'
../main.c:66: warning: implicit declaration of function 'sleep_cpu'
../main.c:67: warning: implicit declaration of function 'sleep_disable'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Debug for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.c:3:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
../main.c:28: warning: 'SIG_WDT' appears to be a misspelled signal handler
../main.c: In function 'main':
../main.c:51: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:58: warning: implicit declaration of function 'set_sleep_mode'
../main.c:58: error: 'SLEEP_MODE_PWR_DOWN' undeclared (first use in this function)
../main.c:58: error: (Each undeclared identifier is reported only once
../main.c:58: error: for each function it appears in.)
../main.c:59: warning: implicit declaration of function 'sleep_enable'
../main.c:61: warning: implicit declaration of function 'sleep_cpu'
../main.c:62: warning: implicit declaration of function 'sleep_disable'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Debug for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c:31: warning: 'WDT_OVERFLOW_vect' appears to be a misspelled signal handler
../main.c: In function 'main':
../main.c:54: warning: left shift count >= width of type
../main.c:54: warning: left shift count >= width of type
Finished building: ../main.c
 
Building file: ../usiTwiSlave.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"usiTwiSlave.d" -MT"usiTwiSlave.d" -c -o "usiTwiSlave.o" "../usiTwiSlave.c"
../usiTwiSlave.c:119:4: error: #error "no USI-Slave definition for MCU available"
../usiTwiSlave.c: In function 'usiTwiSlaveInit':
../usiTwiSlave.c:214: error: 'DDR_USI' undeclared (first use in this function)
../usiTwiSlave.c:214: error: (Each undeclared identifier is reported only once
../usiTwiSlave.c:214: error: for each function it appears in.)
../usiTwiSlave.c:214: error: 'PORT_USI_SCL' undeclared (first use in this function)
../usiTwiSlave.c:214: error: 'PORT_USI_SDA' undeclared (first use in this function)
../usiTwiSlave.c:215: error: 'PORT_USI' undeclared (first use in this function)
../usiTwiSlave.c:218: error: 'USICR' undeclared (first use in this function)
../usiTwiSlave.c:219: error: 'USISIE' undeclared (first use in this function)
../usiTwiSlave.c:220: error: 'USIOIE' undeclared (first use in this function)
../usiTwiSlave.c:221: error: 'USIWM1' undeclared (first use in this function)
../usiTwiSlave.c:221: error: 'USIWM0' undeclared (first use in this function)
../usiTwiSlave.c:222: error: 'USICS1' undeclared (first use in this function)
../usiTwiSlave.c:222: error: 'USICS0' undeclared (first use in this function)
../usiTwiSlave.c:222: error: 'USICLK' undeclared (first use in this function)
../usiTwiSlave.c:223: error: 'USITC' undeclared (first use in this function)
../usiTwiSlave.c:224: error: 'USISR' undeclared (first use in this function)
../usiTwiSlave.c:224: error: 'USI_START_COND_INT' undeclared (first use in this function)
../usiTwiSlave.c:224: error: 'USIOIF' undeclared (first use in this function)
../usiTwiSlave.c:224: error: 'USIPF' undeclared (first use in this function)
../usiTwiSlave.c:224: error: 'USIDC' undeclared (first use in this function)
../usiTwiSlave.c: At top level:
../usiTwiSlave.c:229: warning: 'USI_START_VECTOR' appears to be a misspelled signal handler
../usiTwiSlave.c: In function 'USI_START_VECTOR':
../usiTwiSlave.c:232: error: 'DDR_USI' undeclared (first use in this function)
../usiTwiSlave.c:232: error: 'PORT_USI_SDA' undeclared (first use in this function)
../usiTwiSlave.c:240: error: 'PIN_USI' undeclared (first use in this function)
../usiTwiSlave.c:240: error: 'PIN_USI_SCL' undeclared (first use in this function)
../usiTwiSlave.c:240: error: 'PIN_USI_SDA' undeclared (first use in this function)
../usiTwiSlave.c:244: error: 'USICR' undeclared (first use in this function)
../usiTwiSlave.c:245: error: 'USISIE' undeclared (first use in this function)
../usiTwiSlave.c:246: error: 'USIOIE' undeclared (first use in this function)
../usiTwiSlave.c:247: error: 'USIWM1' undeclared (first use in this function)
../usiTwiSlave.c:247: error: 'USIWM0' undeclared (first use in this function)
../usiTwiSlave.c:248: error: 'USICS1' undeclared (first use in this function)
../usiTwiSlave.c:248: error: 'USICS0' undeclared (first use in this function)
../usiTwiSlave.c:248: error: 'USICLK' undeclared (first use in this function)
../usiTwiSlave.c:249: error: 'USITC' undeclared (first use in this function)
../usiTwiSlave.c:262: error: 'USISR' undeclared (first use in this function)
../usiTwiSlave.c:263: error: 'USI_START_COND_INT' undeclared (first use in this function)
../usiTwiSlave.c:263: error: 'USIOIF' undeclared (first use in this function)
../usiTwiSlave.c:264: error: 'USIPF' undeclared (first use in this function)
../usiTwiSlave.c:264: error: 'USIDC' undeclared (first use in this function)
../usiTwiSlave.c:265: error: 'USICNT0' undeclared (first use in this function)
../usiTwiSlave.c: At top level:
../usiTwiSlave.c:270: warning: 'USI_OVERFLOW_VECTOR' appears to be a misspelled signal handler
../usiTwiSlave.c: In function 'USI_OVERFLOW_VECTOR':
../usiTwiSlave.c:277: error: 'USIDR' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'DDR_USI' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'PORT_USI_SDA' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USISR' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USI_START_COND_INT' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USIOIF' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USIPF' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USIDC' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USICNT0' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USICR' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USISIE' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USIOIE' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USIWM1' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USIWM0' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USICS1' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USICS0' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USICLK' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USITC' undeclared (first use in this function)
make: *** [usiTwiSlave.o] Fehler 1

**** Build Finished ****

**** Build of configuration Debug for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.c:3:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
Finished building: ../main.c
 
../main.c:34: warning: 'WDT_OVERFLOW_vect' appears to be a misspelled signal handler
../main.c: In function 'main':
../main.c:57: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
../usiTwiSlave.c:119:4: error: #error "no USI-Slave definition for MCU available"
../usiTwiSlave.c: In function 'usiTwiSlaveInit':
../usiTwiSlave.c:214: error: 'DDR_USI' undeclared (first use in this function)
../usiTwiSlave.c:214: error: (Each undeclared identifier is reported only once
Building file: ../usiTwiSlave.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"usiTwiSlave.d" -MT"usiTwiSlave.d" -c -o "usiTwiSlave.o" "../usiTwiSlave.c"
../usiTwiSlave.c:214: error: for each function it appears in.)
../usiTwiSlave.c:214: error: 'PORT_USI_SCL' undeclared (first use in this function)
../usiTwiSlave.c:214: error: 'PORT_USI_SDA' undeclared (first use in this function)
../usiTwiSlave.c:215: error: 'PORT_USI' undeclared (first use in this function)
../usiTwiSlave.c:218: error: 'USICR' undeclared (first use in this function)
../usiTwiSlave.c:219: error: 'USISIE' undeclared (first use in this function)
../usiTwiSlave.c:220: error: 'USIOIE' undeclared (first use in this function)
../usiTwiSlave.c:221: error: 'USIWM1' undeclared (first use in this function)
../usiTwiSlave.c:221: error: 'USIWM0' undeclared (first use in this function)
../usiTwiSlave.c:222: error: 'USICS1' undeclared (first use in this function)
../usiTwiSlave.c:222: error: 'USICS0' undeclared (first use in this function)
../usiTwiSlave.c:222: error: 'USICLK' undeclared (first use in this function)
../usiTwiSlave.c:223: error: 'USITC' undeclared (first use in this function)
../usiTwiSlave.c:224: error: 'USISR' undeclared (first use in this function)
../usiTwiSlave.c:224: error: 'USI_START_COND_INT' undeclared (first use in this function)
../usiTwiSlave.c:224: error: 'USIOIF' undeclared (first use in this function)
../usiTwiSlave.c:224: error: 'USIPF' undeclared (first use in this function)
../usiTwiSlave.c:224: error: 'USIDC' undeclared (first use in this function)
../usiTwiSlave.c: At top level:
../usiTwiSlave.c:229: warning: 'USI_START_VECTOR' appears to be a misspelled signal handler
../usiTwiSlave.c: In function 'USI_START_VECTOR':
../usiTwiSlave.c:232: error: 'DDR_USI' undeclared (first use in this function)
../usiTwiSlave.c:232: error: 'PORT_USI_SDA' undeclared (first use in this function)
../usiTwiSlave.c:240: error: 'PIN_USI' undeclared (first use in this function)
../usiTwiSlave.c:240: error: 'PIN_USI_SCL' undeclared (first use in this function)
../usiTwiSlave.c:240: error: 'PIN_USI_SDA' undeclared (first use in this function)
../usiTwiSlave.c:244: error: 'USICR' undeclared (first use in this function)
../usiTwiSlave.c:245: error: 'USISIE' undeclared (first use in this function)
../usiTwiSlave.c:246: error: 'USIOIE' undeclared (first use in this function)
../usiTwiSlave.c:247: error: 'USIWM1' undeclared (first use in this function)
../usiTwiSlave.c:247: error: 'USIWM0' undeclared (first use in this function)
../usiTwiSlave.c:248: error: 'USICS1' undeclared (first use in this function)
../usiTwiSlave.c:248: error: 'USICS0' undeclared (first use in this function)
../usiTwiSlave.c:248: error: 'USICLK' undeclared (first use in this function)
../usiTwiSlave.c:249: error: 'USITC' undeclared (first use in this function)
../usiTwiSlave.c:262: error: 'USISR' undeclared (first use in this function)
../usiTwiSlave.c:263: error: 'USI_START_COND_INT' undeclared (first use in this function)
../usiTwiSlave.c:263: error: 'USIOIF' undeclared (first use in this function)
../usiTwiSlave.c:264: error: 'USIPF' undeclared (first use in this function)
../usiTwiSlave.c:264: error: 'USIDC' undeclared (first use in this function)
../usiTwiSlave.c:265: error: 'USICNT0' undeclared (first use in this function)
../usiTwiSlave.c: At top level:
../usiTwiSlave.c:270: warning: 'USI_OVERFLOW_VECTOR' appears to be a misspelled signal handler
../usiTwiSlave.c: In function 'USI_OVERFLOW_VECTOR':
../usiTwiSlave.c:277: error: 'USIDR' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'DDR_USI' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'PORT_USI_SDA' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USISR' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USI_START_COND_INT' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USIOIF' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USIPF' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USIDC' undeclared (first use in this function)
../usiTwiSlave.c:288: error: 'USICNT0' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USICR' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USISIE' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USIOIE' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USIWM1' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USIWM0' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USICS1' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USICS0' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USICLK' undeclared (first use in this function)
../usiTwiSlave.c:292: error: 'USITC' undeclared (first use in this function)
make: *** [usiTwiSlave.o] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Debug for project timer-tiny85 ****

make clean 
rm -rf  ./main.o ./usiTwiSlave.o  ./main.d ./usiTwiSlave.d  timer-tiny85.lss  sizedummy  timer-tiny85.elf
 

**** Build Finished ****

**** Build of configuration Debug for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.c:3:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
Finished building: ../main.c
 
../main.c:34: warning: 'WDT_OVERFLOW_vect' appears to be a misspelled signal handler
../main.c: In function 'main':
../main.c:57: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Building file: ../usiTwiSlave.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"usiTwiSlave.d" -MT"usiTwiSlave.d" -c -o "usiTwiSlave.o" "../usiTwiSlave.c"
Finished building: ../usiTwiSlave.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    1212 bytes (14.8% Full)
(.text + .data + .bootloader)

Data:         43 bytes (8.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c:34: warning: 'WDT_OVERFLOW_vect' appears to be a misspelled signal handler
../main.c: In function 'main':
../main.c:57: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building file: ../usiTwiSlave.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"usiTwiSlave.d" -MT"usiTwiSlave.d" -c -o "usiTwiSlave.o" "../usiTwiSlave.c"
Finished building: ../usiTwiSlave.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     706 bytes (8.6% Full)
(.text + .data + .bootloader)

Data:         43 bytes (8.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:57: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     706 bytes (8.6% Full)
(.text + .data + .bootloader)

Data:         43 bytes (8.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:64: warning: left shift count >= width of type
../main.c:64: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     798 bytes (9.7% Full)
(.text + .data + .bootloader)

Data:         43 bytes (8.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:65: warning: left shift count >= width of type
../main.c:65: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     902 bytes (11.0% Full)
(.text + .data + .bootloader)

Data:         43 bytes (8.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:70: warning: left shift count >= width of type
../main.c:70: warning: left shift count >= width of type
../main.c:76: warning: left shift count >= width of type
../main.c:76: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    1086 bytes (13.3% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:70: warning: left shift count >= width of type
../main.c:70: warning: left shift count >= width of type
../main.c:76: warning: left shift count >= width of type
../main.c:76: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    1092 bytes (13.3% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:73: warning: left shift count >= width of type
../main.c:73: warning: left shift count >= width of type
../main.c:79: warning: left shift count >= width of type
../main.c:79: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    1096 bytes (13.4% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:73: warning: left shift count >= width of type
../main.c:73: warning: left shift count >= width of type
../main.c:79: warning: left shift count >= width of type
../main.c:79: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    1096 bytes (13.4% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:72: warning: left shift count >= width of type
../main.c:72: warning: left shift count >= width of type
../main.c:78: warning: left shift count >= width of type
../main.c:78: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    1098 bytes (13.4% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:71: warning: left shift count >= width of type
../main.c:71: warning: left shift count >= width of type
../main.c:77: warning: left shift count >= width of type
../main.c:77: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    1078 bytes (13.2% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
../main.c: In function 'SleepLoop':
../main.c:63: warning: type of 'lMax' defaults to 'int'
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    1014 bytes (12.4% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    1008 bytes (12.3% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    1010 bytes (12.3% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:51: warning: left shift count >= width of type
../main.c:52: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
../main.c:58: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    1010 bytes (12.3% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:51: warning: left shift count >= width of type
../main.c:52: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
../main.c:58: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     928 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:51: warning: left shift count >= width of type
../main.c:52: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
../main.c:58: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     934 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     936 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     932 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     938 bytes (11.5% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     944 bytes (11.5% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     960 bytes (11.7% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     944 bytes (11.5% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     944 bytes (11.5% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     942 bytes (11.5% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     942 bytes (11.5% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     942 bytes (11.5% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'DoI2c':
../main.c:50: warning: left shift count >= width of type
../main.c:51: warning: left shift count >= width of type
../main.c:56: warning: left shift count >= width of type
../main.c:57: warning: left shift count >= width of type
Finished building: ../main.c
 
Building target: timer-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,timer-tiny85.map,--cref -mmcu=attiny85 -o "timer-tiny85.elf"  ./main.o ./usiTwiSlave.o   
Finished building target: timer-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S timer-tiny85.elf  >"timer-tiny85.lss"
Finished building: timer-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex timer-tiny85.elf  "timer-tiny85.hex"
Finished building: timer-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex timer-tiny85.elf  "timer-tiny85.eep"
Finished building: timer-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     942 bytes (11.5% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project timer-tiny85 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 timer-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     942 bytes (11.5% Full)
(.text + .data + .bootloader)

Data:         47 bytes (9.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2700 bytes (33.0% Full)
(.text + .data + .bootloader)

Data:        155 bytes (15.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2740 bytes (33.4% Full)
(.text + .data + .bootloader)

Data:        179 bytes (17.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2756 bytes (33.6% Full)
(.text + .data + .bootloader)

Data:        179 bytes (17.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3180 bytes (38.8% Full)
(.text + .data + .bootloader)

Data:        281 bytes (27.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4720 bytes (57.6% Full)
(.text + .data + .bootloader)

Data:        299 bytes (29.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4760 bytes (58.1% Full)
(.text + .data + .bootloader)

Data:        299 bytes (29.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4760 bytes (58.1% Full)
(.text + .data + .bootloader)

Data:        299 bytes (29.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rh10hp03-tiny2313.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,rh10hp03-tiny2313.map,--cref -mmcu=atmega8 -o "rh10hp03-tiny2313.elf"  ./main.o ./rf12.o ./twimaster.o ./uart.o   
Finished building target: rh10hp03-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rh10hp03-tiny2313.elf  >"rh10hp03-tiny2313.lss"
Finished building: rh10hp03-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.hex"
Finished building: rh10hp03-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rh10hp03-tiny2313.elf  "rh10hp03-tiny2313.eep"
Finished building: rh10hp03-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4760 bytes (58.1% Full)
(.text + .data + .bootloader)

Data:        299 bytes (29.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4760 bytes (58.1% Full)
(.text + .data + .bootloader)

Data:        299 bytes (29.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4760 bytes (58.1% Full)
(.text + .data + .bootloader)

Data:        299 bytes (29.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4760 bytes (58.1% Full)
(.text + .data + .bootloader)

Data:        299 bytes (29.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4760 bytes (58.1% Full)
(.text + .data + .bootloader)

Data:        299 bytes (29.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rh10hp03-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rh10hp03-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4760 bytes (58.1% Full)
(.text + .data + .bootloader)

Data:        299 bytes (29.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project ir-receiver-tiny85 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 ir-receiver-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3412 bytes (41.7% Full)
(.text + .data + .bootloader)

Data:         90 bytes (17.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../irmp.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"irmp.d" -MT"irmp.d" -c -o "irmp.o" "../irmp.c"
Finished building: ../irmp.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    2988 bytes (36.5% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3004 bytes (36.7% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3000 bytes (36.6% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3000 bytes (36.6% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3000 bytes (36.6% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3000 bytes (36.6% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3016 bytes (36.8% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:100: error: expected expression before 'void'
../main.c:100: error: too many arguments to function 'adc_read'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3064 bytes (37.4% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3068 bytes (37.5% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3134 bytes (38.3% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3188 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3194 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3168 bytes (38.7% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3180 bytes (38.8% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3180 bytes (38.8% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3180 bytes (38.8% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3180 bytes (38.8% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3186 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3186 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3186 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:133: warning: implicit declaration of function 'wdt_reset'
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
./main.o: In function `main':
main.c:(.text+0xf4): undefined reference to `wdt_reset'
make: *** [nachtlicht-tiny85.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3188 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3236 bytes (39.5% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3244 bytes (39.6% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:95: error: 'WDEN' undeclared (first use in this function)
../main.c:95: error: (Each undeclared identifier is reported only once
../main.c:95: error: for each function it appears in.)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3244 bytes (39.6% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3234 bytes (39.5% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3240 bytes (39.6% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3192 bytes (39.0% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3190 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3190 bytes (38.9% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3238 bytes (39.5% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3238 bytes (39.5% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:99: error: 'IRMP_DATA' undeclared (first use in this function)
../main.c:99: error: (Each undeclared identifier is reported only once
../main.c:99: error: for each function it appears in.)
../main.c:99: error: expected ';' before 'irmp_data'
../main.c:100: warning: implicit declaration of function 'irmp_init'
../main.c:101: warning: implicit declaration of function 'timer_init'
../main.c:113: warning: unused variable 'bOn'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:113: warning: unused variable 'bOn'
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:    3024 bytes (36.9% Full)
(.text + .data + .bootloader)

Data:         55 bytes (10.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../irmp.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"irmp.d" -MT"irmp.d" -c -o "irmp.o" "../irmp.c"
Finished building: ../irmp.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     312 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     312 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     312 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     312 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     312 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     312 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     312 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     312 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     330 bytes (4.0% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     348 bytes (4.2% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     346 bytes (4.2% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     346 bytes (4.2% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project nachtlicht-tiny85 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: nachtlicht-tiny85.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,nachtlicht-tiny85.map,--cref -mmcu=attiny85 -o "nachtlicht-tiny85.elf"  ./irmp.o ./main.o   
Finished building target: nachtlicht-tiny85.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S nachtlicht-tiny85.elf  >"nachtlicht-tiny85.lss"
Finished building: nachtlicht-tiny85.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.hex"
Finished building: nachtlicht-tiny85.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex nachtlicht-tiny85.elf  "nachtlicht-tiny85.eep"
Finished building: nachtlicht-tiny85.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 nachtlicht-tiny85.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     346 bytes (4.2% Full)
(.text + .data + .bootloader)

Data:          6 bytes (1.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Clean-only build of configuration Debug for project wordclock ****

make clean 
rm -rf  ./i2c-master.o ./i2c-rtc.o ./ldr.o ./main.o ./timer.o  ./i2c-master.d ./i2c-rtc.d ./ldr.d ./main.d ./timer.d  wordclock.lss  sizedummy  wordclock.elf
 

**** Build Finished ****

**** Build of configuration Debug for project wordclock ****

make all 
Building file: ../i2c-master.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"i2c-master.d" -MT"i2c-master.d" -c -o "i2c-master.o" "../i2c-master.c"
In file included from ../i2c-master.c:23:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
Finished building: ../i2c-master.c
 
Building file: ../i2c-rtc.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"i2c-rtc.d" -MT"i2c-rtc.d" -c -o "i2c-rtc.o" "../i2c-rtc.c"
In file included from ../i2c-rtc.c:19:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
Finished building: ../i2c-rtc.c
 
Building file: ../ldr.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"ldr.d" -MT"ldr.d" -c -o "ldr.o" "../ldr.c"
In file included from ../ldr.c:26:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
In file included from ../main.c:4:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
Finished building: ../ldr.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../timer.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"timer.d" -MT"timer.d" -c -o "timer.o" "../timer.c"
Finished building: ../timer.c
 
Building target: wordclock.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,wordclock.map,--cref -mmcu=atmega32 -o "wordclock.elf"  ./i2c-master.o ./i2c-rtc.o ./ldr.o ./main.o ./timer.o   
Finished building target: wordclock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S wordclock.elf  >"wordclock.lss"
Finished building: wordclock.lss
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 wordclock.elf
AVR Memory Usage
----------------
Device: atmega32

Program:   34516 bytes (105.3% Full)
(.text + .data + .bootloader)

Data:       1307 bytes (63.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Clean-only build of configuration Release for project wordclock ****

make clean 
rm -rf  ./i2c-master.o ./i2c-rtc.o ./ldr.o ./main.o ./timer.o  ./i2c-master.d ./i2c-rtc.d ./ldr.d ./main.d ./timer.d  wordclock.eep  wordclock.hex  wordclock.lss  avrdudedummy  sizedummy  wordclock.elf
 

**** Build Finished ****

**** Clean-only build of configuration Release for project wordclock ****

make clean 
rm -rf  ./i2c-master.o ./i2c-rtc.o ./ldr.o ./main.o ./timer.o  ./i2c-master.d ./i2c-rtc.d ./ldr.d ./main.d ./timer.d  wordclock.eep  wordclock.hex  wordclock.lss  avrdudedummy  sizedummy  wordclock.elf
 

**** Build Finished ****

**** Build of configuration Release for project wordclock ****

make all 
Building file: ../i2c-master.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"i2c-master.d" -MT"i2c-master.d" -c -o "i2c-master.o" "../i2c-master.c"
Finished building: ../i2c-master.c
 
Building file: ../i2c-rtc.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"i2c-rtc.d" -MT"i2c-rtc.d" -c -o "i2c-rtc.o" "../i2c-rtc.c"
Finished building: ../i2c-rtc.c
 
Building file: ../ldr.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"ldr.d" -MT"ldr.d" -c -o "ldr.o" "../ldr.c"
Finished building: ../ldr.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../timer.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"timer.d" -MT"timer.d" -c -o "timer.o" "../timer.c"
Finished building: ../timer.c
 
Building target: wordclock.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,wordclock.map,--cref -mmcu=atmega32 -o "wordclock.elf"  ./i2c-master.o ./i2c-rtc.o ./ldr.o ./main.o ./timer.o   
Finished building target: wordclock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S wordclock.elf  >"wordclock.lss"
Finished building: wordclock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex wordclock.elf  "wordclock.hex"
Finished building: wordclock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex wordclock.elf  "wordclock.eep"
Finished building: wordclock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 wordclock.elf
AVR Memory Usage
----------------
Device: atmega32

Program:   13618 bytes (41.6% Full)
(.text + .data + .bootloader)

Data:       1297 bytes (63.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm32 -cusbasp -u -Uflash:w:wordclock.hex:a -Ueeprom:w:wordclock.eep:a -Ulfuse:w:0xde:m -Uhfuse:w:0x99:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project wordclock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: wordclock.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,wordclock.map,--cref -mmcu=atmega32 -o "wordclock.elf"  ./i2c-master.o ./i2c-rtc.o ./ldr.o ./main.o ./timer.o   
Finished building target: wordclock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S wordclock.elf  >"wordclock.lss"
Finished building: wordclock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex wordclock.elf  "wordclock.hex"
Finished building: wordclock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex wordclock.elf  "wordclock.eep"
Finished building: wordclock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 wordclock.elf
AVR Memory Usage
----------------
Device: atmega32

Program:   13718 bytes (41.9% Full)
(.text + .data + .bootloader)

Data:       1303 bytes (63.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm32 -cusbasp -u -Uflash:w:wordclock.hex:a -Ueeprom:w:wordclock.eep:a -Ulfuse:w:0xde:m -Uhfuse:w:0x99:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project wordclock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I"C:\WinAVR-20100110\avr\include" -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:442: warning: pointer targets in passing argument 2 of 'read_byte' differ in signedness
Finished building: ../main.c
 
Building target: wordclock.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,wordclock.map,--cref -mmcu=atmega32 -o "wordclock.elf"  ./i2c-master.o ./i2c-rtc.o ./ldr.o ./main.o ./timer.o   
Finished building target: wordclock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S wordclock.elf  >"wordclock.lss"
Finished building: wordclock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex wordclock.elf  "wordclock.hex"
Finished building: wordclock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex wordclock.elf  "wordclock.eep"
Finished building: wordclock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 wordclock.elf
AVR Memory Usage
----------------
Device: atmega32

Program:   13758 bytes (42.0% Full)
(.text + .data + .bootloader)

Data:       1307 bytes (63.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm32 -cusbasp -u -Uflash:w:wordclock.hex:a -Ueeprom:w:wordclock.eep:a -Ulfuse:w:0xde:m -Uhfuse:w:0x99:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Debug for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.c:3:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/bin/ld: Schlafzimmer.elf section .text will not fit in region text
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/bin/ld: region text overflowed by 3248 bytes
make: *** [Schlafzimmer.elf] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project Schlafzimmer ****

make clean 
rm -rf  ./i2c-master.o ./i2c-rtc.o ./main.o  ./i2c-master.d ./i2c-rtc.d ./main.d  Schlafzimmer.eep  Schlafzimmer.hex  Schlafzimmer.lss  sizedummy  Schlafzimmer.elf
 

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../i2c-master.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-master.d" -MT"i2c-master.d" -c -o "i2c-master.o" "../i2c-master.c"
Finished building: ../i2c-master.c
 
Building file: ../i2c-rtc.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-rtc.d" -MT"i2c-rtc.d" -c -o "i2c-rtc.o" "../i2c-rtc.c"
Finished building: ../i2c-rtc.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4106 bytes (50.1% Full)
(.text + .data + .bootloader)

Data:         80 bytes (7.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4106 bytes (50.1% Full)
(.text + .data + .bootloader)

Data:         80 bytes (7.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4106 bytes (50.1% Full)
(.text + .data + .bootloader)

Data:         80 bytes (7.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4056 bytes (49.5% Full)
(.text + .data + .bootloader)

Data:         80 bytes (7.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4126 bytes (50.4% Full)
(.text + .data + .bootloader)

Data:         80 bytes (7.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4056 bytes (49.5% Full)
(.text + .data + .bootloader)

Data:         80 bytes (7.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4202 bytes (51.3% Full)
(.text + .data + .bootloader)

Data:         80 bytes (7.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4202 bytes (51.3% Full)
(.text + .data + .bootloader)

Data:         80 bytes (7.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4202 bytes (51.3% Full)
(.text + .data + .bootloader)

Data:         80 bytes (7.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (4202 bytes):

Writing | ################################################## | 100% 2.93s

avrdude: 4202 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 4202 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.16s

avrdude: verifying ...
avrdude: 4202 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4948 bytes (60.4% Full)
(.text + .data + .bootloader)

Data:        290 bytes (28.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5134 bytes (62.7% Full)
(.text + .data + .bootloader)

Data:        354 bytes (34.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5134 bytes (62.7% Full)
(.text + .data + .bootloader)

Data:        354 bytes (34.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5134 bytes):

Writing | ################################################## | 100% 3.57s

avrdude: 5134 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5134 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.63s

avrdude: verifying ...
avrdude: 5134 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5134 bytes (62.7% Full)
(.text + .data + .bootloader)

Data:        354 bytes (34.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5134 bytes):

Writing | ################################################## | 100% 3.58s

avrdude: 5134 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5134 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.63s

avrdude: verifying ...
avrdude: 5134 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
Finished building: avrdudedummy
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5022 bytes (61.3% Full)
(.text + .data + .bootloader)

Data:        340 bytes (33.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5022 bytes):

Writing | ################################################## | 100% 3.49s

avrdude: 5022 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5022 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.57s

avrdude: verifying ...
avrdude: 5022 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5240 bytes (64.0% Full)
(.text + .data + .bootloader)

Data:        396 bytes (38.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5240 bytes (64.0% Full)
(.text + .data + .bootloader)

Data:        396 bytes (38.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5240 bytes (64.0% Full)
(.text + .data + .bootloader)

Data:        396 bytes (38.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5240 bytes (64.0% Full)
(.text + .data + .bootloader)

Data:        396 bytes (38.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5240 bytes):

Writing | ################################################## | 100% 3.63s

avrdude: 5240 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5240 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.68s

avrdude: verifying ...
avrdude: 5240 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../i2c-master.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-master.d" -MT"i2c-master.d" -c -o "i2c-master.o" "../i2c-master.c"
Finished building: ../i2c-master.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5240 bytes (64.0% Full)
(.text + .data + .bootloader)

Data:        396 bytes (38.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../i2c-master.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-master.d" -MT"i2c-master.d" -c -o "i2c-master.o" "../i2c-master.c"
../i2c-master.c:175: error: conflicting types for 'i2c_master_start_wait'
../i2c-master.h:58: error: previous declaration of 'i2c_master_start_wait' was here
make: *** [i2c-master.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../i2c-master.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-master.d" -MT"i2c-master.d" -c -o "i2c-master.o" "../i2c-master.c"
Finished building: ../i2c-master.c
 
Building file: ../i2c-rtc.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-rtc.d" -MT"i2c-rtc.d" -c -o "i2c-rtc.o" "../i2c-rtc.c"
../i2c-rtc.c: In function 'i2c_rtc_sram_write':
../i2c-rtc.c:478: error: too few arguments to function 'i2c_master_start_wait'
../i2c-rtc.c: In function 'i2c_rtc_sram_read':
../i2c-rtc.c:519: error: too few arguments to function 'i2c_master_start_wait'
make: *** [i2c-rtc.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../i2c-rtc.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-rtc.d" -MT"i2c-rtc.d" -c -o "i2c-rtc.o" "../i2c-rtc.c"
Finished building: ../i2c-rtc.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'read_distance':
../main.c:95: error: too few arguments to function 'i2c_master_start_wait'
../main.c:109: error: too few arguments to function 'i2c_master_start_wait'
../main.c: In function 'main':
../main.c:268: error: too few arguments to function 'i2c_master_start_wait'
../main.c:278: error: too few arguments to function 'i2c_master_start_wait'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../i2c-master.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-master.d" -MT"i2c-master.d" -c -o "i2c-master.o" "../i2c-master.c"
../i2c-master.c:175: error: conflicting types for 'i2c_master_start_wait'
../i2c-master.h:58: error: previous declaration of 'i2c_master_start_wait' was here
make: *** [i2c-master.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../i2c-master.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-master.d" -MT"i2c-master.d" -c -o "i2c-master.o" "../i2c-master.c"
Finished building: ../i2c-master.c
 
Building file: ../i2c-rtc.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-rtc.d" -MT"i2c-rtc.d" -c -o "i2c-rtc.o" "../i2c-rtc.c"
Finished building: ../i2c-rtc.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:275: error: too few arguments to function 'i2c_master_start_wait'
../main.c:285: error: too few arguments to function 'i2c_master_start_wait'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:284: error: too few arguments to function 'i2c_master_start_wait'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5332 bytes (65.1% Full)
(.text + .data + .bootloader)

Data:        396 bytes (38.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../i2c-master.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-master.d" -MT"i2c-master.d" -c -o "i2c-master.o" "../i2c-master.c"
Finished building: ../i2c-master.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5340 bytes (65.2% Full)
(.text + .data + .bootloader)

Data:        396 bytes (38.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../i2c-master.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-master.d" -MT"i2c-master.d" -c -o "i2c-master.o" "../i2c-master.c"
Finished building: ../i2c-master.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5340 bytes (65.2% Full)
(.text + .data + .bootloader)

Data:        396 bytes (38.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../i2c-rtc.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-rtc.d" -MT"i2c-rtc.d" -c -o "i2c-rtc.o" "../i2c-rtc.c"
Finished building: ../i2c-rtc.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5348 bytes (65.3% Full)
(.text + .data + .bootloader)

Data:        396 bytes (38.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5410 bytes (66.0% Full)
(.text + .data + .bootloader)

Data:        418 bytes (40.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readIr':
../main.c:126: error: 'SLAVE_ADDR_IR' undeclared (first use in this function)
../main.c:126: error: (Each undeclared identifier is reported only once
../main.c:126: error: for each function it appears in.)
../main.c:144: error: 'uiLightPercent' undeclared (first use in this function)
../main.c:156: error: 'uiLight' undeclared (first use in this function)
../main.c:159: error: 'uiLightFunction' undeclared (first use in this function)
../main.c:165: error: 'uiR' undeclared (first use in this function)
../main.c:166: error: 'uiG' undeclared (first use in this function)
../main.c:167: error: 'uiB' undeclared (first use in this function)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readIr':
../main.c:126: error: 'SLAVE_ADDR_IR' undeclared (first use in this function)
../main.c:126: error: (Each undeclared identifier is reported only once
../main.c:126: error: for each function it appears in.)
../main.c:147: error: 'uiLightPercent' undeclared (first use in this function)
../main.c:159: error: 'uiLight' undeclared (first use in this function)
../main.c:162: error: 'uiLightFunction' undeclared (first use in this function)
../main.c:168: error: 'uiR' undeclared (first use in this function)
../main.c:169: error: 'uiG' undeclared (first use in this function)
../main.c:170: error: 'uiB' undeclared (first use in this function)
../main.c: At top level:
../main.c:210: error: expected identifier or '(' before '}' token
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readIr':
../main.c:151: error: 'uiLightPercent' undeclared (first use in this function)
../main.c:151: error: (Each undeclared identifier is reported only once
../main.c:151: error: for each function it appears in.)
../main.c:163: error: 'uiLight' undeclared (first use in this function)
../main.c:166: error: 'uiLightFunction' undeclared (first use in this function)
../main.c:172: error: 'uiR' undeclared (first use in this function)
../main.c:173: error: 'uiG' undeclared (first use in this function)
../main.c:174: error: 'uiB' undeclared (first use in this function)
../main.c: At top level:
../main.c:214: error: expected identifier or '(' before '}' token
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readIr':
../main.c:157: error: 'uiLightPercent' undeclared (first use in this function)
../main.c:157: error: (Each undeclared identifier is reported only once
../main.c:157: error: for each function it appears in.)
../main.c:163: error: 'uiLight' undeclared (first use in this function)
../main.c:166: error: 'uiLightFunction' undeclared (first use in this function)
../main.c:172: error: 'uiR' undeclared (first use in this function)
../main.c:173: error: 'uiG' undeclared (first use in this function)
../main.c:174: error: 'uiB' undeclared (first use in this function)
../main.c: At top level:
../main.c:214: error: expected identifier or '(' before '}' token
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readIr':
../main.c:158: error: 'uiLightPercent' undeclared (first use in this function)
../main.c:158: error: (Each undeclared identifier is reported only once
../main.c:158: error: for each function it appears in.)
../main.c:163: error: 'uiLight' undeclared (first use in this function)
../main.c:166: error: 'uiLightFunction' undeclared (first use in this function)
../main.c:172: error: 'uiR' undeclared (first use in this function)
../main.c:173: error: 'uiG' undeclared (first use in this function)
../main.c:174: error: 'uiB' undeclared (first use in this function)
../main.c: At top level:
../main.c:214: error: expected identifier or '(' before '}' token
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readIr':
../main.c:172: error: 'uiR' undeclared (first use in this function)
../main.c:172: error: (Each undeclared identifier is reported only once
../main.c:172: error: for each function it appears in.)
../main.c:173: error: 'uiG' undeclared (first use in this function)
../main.c:174: error: 'uiB' undeclared (first use in this function)
../main.c: At top level:
../main.c:214: error: expected identifier or '(' before '}' token
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readIr':
../main.c:214: warning: control reaches end of non-void function
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5364 bytes (65.5% Full)
(.text + .data + .bootloader)

Data:        468 bytes (45.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:362: warning: pointer targets in passing argument 1 of 'readIr' differ in signedness
../main.c:362: warning: pointer targets in passing argument 2 of 'readIr' differ in signedness
../main.c:362: warning: pointer targets in passing argument 3 of 'readIr' differ in signedness
../main.c:362: warning: pointer targets in passing argument 4 of 'readIr' differ in signedness
../main.c:362: warning: pointer targets in passing argument 5 of 'readIr' differ in signedness
../main.c:362: warning: pointer targets in passing argument 6 of 'readIr' differ in signedness
../main.c: In function 'readIr':
../main.c:214: warning: control reaches end of non-void function
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5652 bytes (69.0% Full)
(.text + .data + .bootloader)

Data:        468 bytes (45.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'readIr':
../main.c:135: warning: pointer targets in passing argument 2 of 'i2c_master_write' differ in signedness
../main.c:136: warning: pointer targets in passing argument 2 of 'i2c_master_rep_start' differ in signedness
../main.c:147: warning: pointer targets in passing argument 2 of 'i2c_master_write' differ in signedness
../main.c:148: warning: pointer targets in passing argument 2 of 'i2c_master_write' differ in signedness
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5658 bytes (69.1% Full)
(.text + .data + .bootloader)

Data:        468 bytes (45.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5658 bytes (69.1% Full)
(.text + .data + .bootloader)

Data:        468 bytes (45.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5718 bytes (69.8% Full)
(.text + .data + .bootloader)

Data:        476 bytes (46.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5742 bytes (70.1% Full)
(.text + .data + .bootloader)

Data:        476 bytes (46.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5824 bytes (71.1% Full)
(.text + .data + .bootloader)

Data:        476 bytes (46.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5886 bytes (71.9% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5886 bytes):

Writing | ################################################## | 100% 3.95s

avrdude: 5886 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5886 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.11s

avrdude: verifying ...
avrdude: verification error, first mismatch at byte 0x0000
         0x2a != 0x00
avrdude: verification error; content mismatch

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5886 bytes (71.9% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5886 bytes):

Writing | ################################################## | 100% 4.09s

avrdude: 5886 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5886 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.02s

avrdude: verifying ...
avrdude: 5886 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5886 bytes (71.9% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5886 bytes (71.9% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5886 bytes):

Writing | ################################################## | 100% 4.09s

avrdude: 5886 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5886 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.03s

avrdude: verifying ...
avrdude: 5886 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
 
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../i2c-master.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-master.d" -MT"i2c-master.d" -c -o "i2c-master.o" "../i2c-master.c"
Finished building: ../i2c-master.c
 
Building file: ../i2c-rtc.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"i2c-rtc.d" -MT"i2c-rtc.d" -c -o "i2c-rtc.o" "../i2c-rtc.c"
Finished building: ../i2c-rtc.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5884 bytes (71.8% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5884 bytes (71.8% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5884 bytes):

Writing | ################################################## | 100% 4.08s

avrdude: 5884 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5884 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.04s

avrdude: verifying ...
avrdude: 5884 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5884 bytes (71.8% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5884 bytes):

Writing | ################################################## | 100% 4.09s

avrdude: 5884 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5884 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.03s

avrdude: verifying ...
avrdude: 5884 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
Finished building: avrdudedummy
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5896 bytes (72.0% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5896 bytes):

Writing | ################################################## | 100% 4.12s

avrdude: 5896 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5896 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.03s

avrdude: verifying ...
avrdude: 5896 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5956 bytes (72.7% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5956 bytes):

Writing | ################################################## | 100% 4.15s

avrdude: 5956 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5956 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.07s

avrdude: verifying ...
avrdude: 5956 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5956 bytes (72.7% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5956 bytes):

Writing | ################################################## | 100% 4.15s

avrdude: 5956 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5956 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.06s

avrdude: verifying ...
avrdude: 5956 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5956 bytes (72.7% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5956 bytes):

Writing | ################################################## | 100% 4.14s

avrdude: 5956 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5956 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.06s

avrdude: verifying ...
avrdude: 5956 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
Finished building: avrdudedummy
avrdude: load data lfuse data from input file 0x3f:
 
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5956 bytes (72.7% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5956 bytes):

Writing | ################################################## | 100% 4.13s

avrdude: 5956 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5956 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.06s

avrdude: verifying ...
avrdude: 5956 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5956 bytes (72.7% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (5956 bytes):

Writing | ################################################## | 100% 4.15s

avrdude: 5956 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 5956 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.06s

avrdude: verifying ...
avrdude: 5956 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Finished building: avrdudedummy
 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    6078 bytes (74.2% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    6078 bytes (74.2% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (6078 bytes):

Writing | ################################################## | 100% 4.23s

avrdude: 6078 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 6078 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.13s

avrdude: verifying ...
avrdude: 6078 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
Finished building: avrdudedummy
 
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    6124 bytes (74.8% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (6124 bytes):

Writing | ################################################## | 100% 4.27s

avrdude: 6124 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 6124 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.14s

avrdude: verifying ...
avrdude: 6124 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
avrdude: reading on-chip lfuse data:
Finished building: avrdudedummy

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project Schlafzimmer ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Schlafzimmer.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Schlafzimmer.map -mmcu=atmega8 -o "Schlafzimmer.elf"  ./i2c-master.o ./i2c-rtc.o ./main.o   
Finished building target: Schlafzimmer.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Schlafzimmer.elf  >"Schlafzimmer.lss"
Finished building: Schlafzimmer.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex Schlafzimmer.elf  "Schlafzimmer.hex"
Finished building: Schlafzimmer.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Schlafzimmer.elf  "Schlafzimmer.eep"
Finished building: Schlafzimmer.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 Schlafzimmer.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    6124 bytes (74.8% Full)
(.text + .data + .bootloader)

Data:        524 bytes (51.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:Schlafzimmer.hex:a -Ulfuse:w:0x3f:m -Uhfuse:w:0xd1:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Schlafzimmer.hex"
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: writing flash (6124 bytes):

Writing | ################################################## | 100% 4.27s

avrdude: 6124 bytes of flash written
avrdude: verifying flash memory against Schlafzimmer.hex:
avrdude: load data flash data from input file Schlafzimmer.hex:
avrdude: input file Schlafzimmer.hex auto detected as Intel Hex
avrdude: input file Schlafzimmer.hex contains 6124 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.16s

avrdude: verifying ...
avrdude: 6124 bytes of flash verified
avrdude: reading input file "0x3f"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x3f:
avrdude: load data lfuse data from input file 0x3f:
avrdude: input file 0x3f contains 1 bytes
 
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd1"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd1:
avrdude: load data hfuse data from input file 0xd1:
avrdude: input file 0xd1 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Clean-only build of configuration Debug for project MiniWordClock ****

make clean 
rm -rf  ./main.o ./uart.o  ./main.d ./uart.d  MiniWordClock.lss  sizedummy  MiniWordClock.elf
 

**** Build Finished ****

**** Build of configuration Debug for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../uart.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"uart.d" -MT"uart.d" -c -o "uart.o" "../uart.c"
Finished building: ../uart.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5708 bytes (69.7% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Debug for project MiniWordClock ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5708 bytes (69.7% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Clean-only build of configuration Release for project MiniWordClock ****

make clean 
rm -rf  ./main.o ./uart.o  ./main.d ./uart.d  MiniWordClock.eep  MiniWordClock.hex  MiniWordClock.lss  sizedummy  MiniWordClock.elf
 

**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../uart.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"uart.d" -MT"uart.d" -c -o "uart.o" "../uart.c"
Finished building: ../uart.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex MiniWordClock.elf  "MiniWordClock.hex"
Finished building: MiniWordClock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex MiniWordClock.elf  "MiniWordClock.eep"
Finished building: MiniWordClock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3594 bytes (43.9% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "MiniWordClock.hex"
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: writing flash (3594 bytes):

Writing | ################################################## | 100% 2.51s

avrdude: 3594 bytes of flash written
avrdude: verifying flash memory against MiniWordClock.hex:
avrdude: load data flash data from input file MiniWordClock.hex:
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: input file MiniWordClock.hex contains 3594 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.85s

avrdude: verifying ...
avrdude: 3594 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xc9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xc9:
avrdude: load data hfuse data from input file 0xc9:
avrdude: input file 0xc9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex MiniWordClock.elf  "MiniWordClock.hex"
Finished building: MiniWordClock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex MiniWordClock.elf  "MiniWordClock.eep"
Finished building: MiniWordClock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3594 bytes (43.9% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "MiniWordClock.hex"
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: writing flash (3594 bytes):

Writing | ################################################## | 100% 2.52s

avrdude: 3594 bytes of flash written
avrdude: verifying flash memory against MiniWordClock.hex:
avrdude: load data flash data from input file MiniWordClock.hex:
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: input file MiniWordClock.hex contains 3594 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.85s

avrdude: verifying ...
avrdude: 3594 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):
Finished building: avrdudedummy

Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xc9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xc9:
avrdude: load data hfuse data from input file 0xc9:
avrdude: input file 0xc9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex MiniWordClock.elf  "MiniWordClock.hex"
Finished building: MiniWordClock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex MiniWordClock.elf  "MiniWordClock.eep"
Finished building: MiniWordClock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3594 bytes (43.9% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "MiniWordClock.hex"
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: writing flash (3594 bytes):

Writing | ################################################## | 100% 2.52s

avrdude: 3594 bytes of flash written
avrdude: verifying flash memory against MiniWordClock.hex:
avrdude: load data flash data from input file MiniWordClock.hex:
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: input file MiniWordClock.hex contains 3594 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.84s

avrdude: verifying ...
avrdude: 3594 bytes of flash verified
avrdude: reading input file "0xe4"
Finished building: avrdudedummy
avrdude: writing lfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xc9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xc9:
avrdude: load data hfuse data from input file 0xc9:
avrdude: input file 0xc9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:287: warning: unused variable 'e_SetupState'
Finished building: ../main.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex MiniWordClock.elf  "MiniWordClock.hex"
Finished building: MiniWordClock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex MiniWordClock.elf  "MiniWordClock.eep"
Finished building: MiniWordClock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3594 bytes (43.9% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'draw_time':
../main.c:158: error: 'time_setup' undeclared (first use in this function)
../main.c:158: error: (Each undeclared identifier is reported only once
../main.c:158: error: for each function it appears in.)
../main.c: In function 'main':
../main.c:299: warning: enumeration value 'StartHour' not handled in switch
../main.c:299: warning: enumeration value 'StartMinute' not handled in switch
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'draw_time':
../main.c:184: error: 'time_setup' undeclared (first use in this function)
../main.c:184: error: (Each undeclared identifier is reported only once
../main.c:184: error: for each function it appears in.)
../main.c: In function 'main':
../main.c:299: warning: enumeration value 'StartHour' not handled in switch
../main.c:299: warning: enumeration value 'StartMinute' not handled in switch
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:299: warning: enumeration value 'StartHour' not handled in switch
../main.c:299: warning: enumeration value 'StartMinute' not handled in switch
Finished building: ../main.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex MiniWordClock.elf  "MiniWordClock.hex"
Finished building: MiniWordClock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex MiniWordClock.elf  "MiniWordClock.eep"
Finished building: MiniWordClock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3652 bytes (44.6% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3652 bytes (44.6% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "MiniWordClock.hex"
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: writing flash (3652 bytes):

Writing | ################################################## | 100% 2.56s

avrdude: 3652 bytes of flash written
avrdude: verifying flash memory against MiniWordClock.hex:
avrdude: load data flash data from input file MiniWordClock.hex:
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: input file MiniWordClock.hex contains 3652 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.87s

avrdude: verifying ...
avrdude: 3652 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Finished building: avrdudedummy
 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xc9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xc9:
avrdude: load data hfuse data from input file 0xc9:
avrdude: input file 0xc9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:299: warning: enumeration value 'StartHour' not handled in switch
../main.c:299: warning: enumeration value 'StartMinute' not handled in switch
Finished building: ../main.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex MiniWordClock.elf  "MiniWordClock.hex"
Finished building: MiniWordClock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex MiniWordClock.elf  "MiniWordClock.eep"
Finished building: MiniWordClock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3652 bytes (44.6% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "MiniWordClock.hex"
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: writing flash (3652 bytes):

Writing | ################################################## | 100% 2.55s

avrdude: 3652 bytes of flash written
avrdude: verifying flash memory against MiniWordClock.hex:
avrdude: load data flash data from input file MiniWordClock.hex:
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: input file MiniWordClock.hex contains 3652 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.88s

avrdude: verifying ...
avrdude: 3652 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xc9"
avrdude: writing hfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xc9:
avrdude: load data hfuse data from input file 0xc9:
avrdude: input file 0xc9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex MiniWordClock.elf  "MiniWordClock.hex"
Finished building: MiniWordClock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex MiniWordClock.elf  "MiniWordClock.eep"
Finished building: MiniWordClock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3652 bytes (44.6% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "MiniWordClock.hex"
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: writing flash (3652 bytes):

Writing | ################################################## | 100% 2.55s

avrdude: 3652 bytes of flash written
avrdude: verifying flash memory against MiniWordClock.hex:
avrdude: load data flash data from input file MiniWordClock.hex:
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: input file MiniWordClock.hex contains 3652 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.88s

avrdude: verifying ...
avrdude: 3652 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xc9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xc9:
avrdude: load data hfuse data from input file 0xc9:
avrdude: input file 0xc9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex MiniWordClock.elf  "MiniWordClock.hex"
Finished building: MiniWordClock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex MiniWordClock.elf  "MiniWordClock.eep"
Finished building: MiniWordClock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3652 bytes (44.6% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "MiniWordClock.hex"
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: writing flash (3652 bytes):

Writing | ################################################## | 100% 2.56s

avrdude: 3652 bytes of flash written
avrdude: verifying flash memory against MiniWordClock.hex:
avrdude: load data flash data from input file MiniWordClock.hex:
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: input file MiniWordClock.hex contains 3652 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.89s

avrdude: verifying ...
avrdude: 3652 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xc9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xc9:
avrdude: load data hfuse data from input file 0xc9:
avrdude: input file 0xc9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex MiniWordClock.elf  "MiniWordClock.hex"
Finished building: MiniWordClock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex MiniWordClock.elf  "MiniWordClock.eep"
Finished building: MiniWordClock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3652 bytes (44.6% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "MiniWordClock.hex"
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: writing flash (3652 bytes):

Writing | ################################################## | 100% 2.55s

avrdude: 3652 bytes of flash written
avrdude: verifying flash memory against MiniWordClock.hex:
avrdude: load data flash data from input file MiniWordClock.hex:
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: input file MiniWordClock.hex contains 3652 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.87s

avrdude: verifying ...
avrdude: 3652 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xc9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xc9:
avrdude: load data hfuse data from input file 0xc9:
avrdude: input file 0xc9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Default for project TestJNI ****

make all 
make: *** Keine Regel, um »all« zu erstellen.  Schluss.

**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex MiniWordClock.elf  "MiniWordClock.hex"
Finished building: MiniWordClock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex MiniWordClock.elf  "MiniWordClock.eep"
Finished building: MiniWordClock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3642 bytes (44.5% Full)
(.text + .data + .bootloader)

Data:         79 bytes (7.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "MiniWordClock.hex"
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: writing flash (3642 bytes):

Writing | ################################################## | 100% 2.55s

avrdude: 3642 bytes of flash written
avrdude: verifying flash memory against MiniWordClock.hex:
avrdude: load data flash data from input file MiniWordClock.hex:
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: input file MiniWordClock.hex contains 3642 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.87s

avrdude: verifying ...
avrdude: 3642 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xc9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xc9:
avrdude: load data hfuse data from input file 0xc9:
avrdude: input file 0xc9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c:12:22: warning: inttypes.h: No such file or directory
../main.c:13:20: warning: avr/io.h: No such file or directory
../main.c:14:24: warning: avr/iotn85.h: No such file or directory
../main.c:15:20: warning: stdlib.h: No such file or directory
../main.c:16:20: warning: string.h: No such file or directory
../main.c:17:27: warning: avr/interrupt.h: No such file or directory
../main.c:18:23: warning: avr/sleep.h: No such file or directory
../main.c:19:26: warning: avr/pgmspace.h: No such file or directory
../main.c:20:24: warning: util/delay.h: No such file or directory
../main.c:24: error: expected ')' before 'ii'
../main.c: In function 'system_sleep':
../main.c:38: warning: implicit declaration of function 'set_sleep_mode'
../main.c:38: error: 'SLEEP_MODE_PWR_DOWN' undeclared (first use in this function)
../main.c:38: error: (Each undeclared identifier is reported only once
../main.c:38: error: for each function it appears in.)
../main.c:39: warning: implicit declaration of function 'sleep_mode'
../main.c: At top level:
../main.c:42: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'ucState'
../main.c:45: error: expected ')' before 'sec'
../main.c:75: warning: return type defaults to 'int'
../main.c: In function 'ISR':
../main.c:75: warning: type of 'WDT_vect' defaults to 'int'
../main.c: At top level:
../main.c:79: warning: return type defaults to 'int'
../main.c:79: error: redefinition of 'ISR'
../main.c:75: error: previous definition of 'ISR' was here
../main.c: In function 'ISR':
../main.c:79: warning: type of 'INT0_vect' defaults to 'int'
../main.c:81: error: 'ucState' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:94: error: 'MCUCR' undeclared (first use in this function)
../main.c:94: error: 'ISC00' undeclared (first use in this function)
../main.c:94: error: 'ISC01' undeclared (first use in this function)
../main.c:95: error: 'GIMSK' undeclared (first use in this function)
../main.c:95: error: 'INT0' undeclared (first use in this function)
../main.c:97: warning: implicit declaration of function 'sei'
../main.c:100: error: 'ucState' undeclared (first use in this function)
../main.c:102: warning: implicit declaration of function 'setup_watchdog'
../main.c:106: error: 'DDRB' undeclared (first use in this function)
../main.c:106: error: 'PB0' undeclared (first use in this function)
../main.c:106: error: 'PB1' undeclared (first use in this function)
../main.c:106: error: 'PB3' undeclared (first use in this function)
../main.c:106: error: 'PB4' undeclared (first use in this function)
../main.c:107: error: 'PORTB' undeclared (first use in this function)
../main.c:108: warning: implicit declaration of function '_delay_ms'
../main.c:112: warning: implicit declaration of function 'delay_seconds_by_watchdog'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c:12:22: warning: inttypes.h: No such file or directory
../main.c:13:20: warning: avr/io.h: No such file or directory
../main.c:14:24: warning: avr/iotn85.h: No such file or directory
../main.c:15:20: warning: stdlib.h: No such file or directory
../main.c:16:20: warning: string.h: No such file or directory
../main.c:17:27: warning: avr/interrupt.h: No such file or directory
../main.c:18:23: warning: avr/sleep.h: No such file or directory
../main.c:19:26: warning: avr/pgmspace.h: No such file or directory
../main.c:20:24: warning: util/delay.h: No such file or directory
../main.c:24: error: expected ')' before 'ii'
../main.c: In function 'system_sleep':
../main.c:38: warning: implicit declaration of function 'set_sleep_mode'
../main.c:38: error: 'SLEEP_MODE_PWR_DOWN' undeclared (first use in this function)
../main.c:38: error: (Each undeclared identifier is reported only once
../main.c:38: error: for each function it appears in.)
../main.c:39: warning: implicit declaration of function 'sleep_mode'
../main.c: At top level:
../main.c:42: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'ucState'
../main.c:45: error: expected ')' before 'sec'
../main.c:75: warning: return type defaults to 'int'
../main.c: In function 'ISR':
../main.c:75: warning: type of 'WDT_vect' defaults to 'int'
../main.c: At top level:
../main.c:79: warning: return type defaults to 'int'
../main.c:79: error: redefinition of 'ISR'
../main.c:75: error: previous definition of 'ISR' was here
../main.c: In function 'ISR':
../main.c:79: warning: type of 'INT0_vect' defaults to 'int'
../main.c:81: error: 'ucState' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:94: error: 'MCUCR' undeclared (first use in this function)
../main.c:94: error: 'ISC00' undeclared (first use in this function)
../main.c:94: error: 'ISC01' undeclared (first use in this function)
../main.c:95: error: 'GIMSK' undeclared (first use in this function)
../main.c:95: error: 'INT0' undeclared (first use in this function)
../main.c:97: warning: implicit declaration of function 'sei'
../main.c:100: error: 'ucState' undeclared (first use in this function)
../main.c:102: warning: implicit declaration of function 'setup_watchdog'
../main.c:106: error: 'DDRB' undeclared (first use in this function)
../main.c:106: error: 'PB0' undeclared (first use in this function)
../main.c:106: error: 'PB1' undeclared (first use in this function)
../main.c:106: error: 'PB3' undeclared (first use in this function)
../main.c:106: error: 'PB4' undeclared (first use in this function)
../main.c:107: error: 'PORTB' undeclared (first use in this function)
../main.c:108: warning: implicit declaration of function '_delay_ms'
../main.c:112: warning: implicit declaration of function 'delay_seconds_by_watchdog'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     502 bytes (6.1% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     528 bytes (6.4% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     512 bytes (6.2% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     532 bytes (6.5% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     542 bytes (6.6% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     536 bytes (6.5% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     544 bytes (6.6% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     540 bytes (6.6% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     506 bytes (6.2% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     522 bytes (6.4% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     522 bytes (6.4% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bicycle-rear-light ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny85 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bicycle-rear-light.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,bicycle-rear-light.map,--cref -mmcu=attiny85 -o "bicycle-rear-light.elf"  ./main.o   
Finished building target: bicycle-rear-light.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bicycle-rear-light.elf  >"bicycle-rear-light.lss"
Finished building: bicycle-rear-light.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bicycle-rear-light.elf  "bicycle-rear-light.hex"
Finished building: bicycle-rear-light.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bicycle-rear-light.elf  "bicycle-rear-light.eep"
Finished building: bicycle-rear-light.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny85 bicycle-rear-light.elf
AVR Memory Usage
----------------
Device: attiny85

Program:     528 bytes (6.4% Full)
(.text + .data + .bootloader)

Data:          1 bytes (0.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.h:21,
                 from ../main.c:10:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/avr/signal.h:36:2: warning: #warning "This header file is obsolete.  Use <avr/interrupt.h>."
In file included from ../main.c:10:
../main.h:33:19: error: 1wire.h: No such file or directory
../main.h:34:22: error: tempmeas.h: No such file or directory
../main.c:35: error: 'RxBW134' undeclared here (not in a function)
../main.c:36: error: 'LNA_6' undeclared here (not in a function)
../main.c:37: error: 'RSSI_79' undeclared here (not in a function)
../main.c: In function 'rf12_init':
../main.c:78: warning: implicit declaration of function 'rfm12_setfreq'
../main.c:79: warning: implicit declaration of function 'rfm12_setbandwidth'
../main.c:80: warning: implicit declaration of function 'rfm12_setbaud'
../main.c:81: warning: implicit declaration of function 'rfm12_setpower'
../main.c: At top level:
../main.c:85: warning: conflicting types for 'rfm12_setbandwidth'
../main.c:79: warning: previous implicit declaration of 'rfm12_setbandwidth' was here
../main.c:89: warning: conflicting types for 'rfm12_setfreq'
../main.c:78: warning: previous implicit declaration of 'rfm12_setfreq' was here
../main.c:97: warning: conflicting types for 'rfm12_setbaud'
../main.c:80: warning: previous implicit declaration of 'rfm12_setbaud' was here
../main.c:106: warning: conflicting types for 'rfm12_setpower'
../main.c:81: warning: previous implicit declaration of 'rfm12_setpower' was here
../main.c:110: error: conflicting types for 'rf12_ready'
../rf12.h:13: error: previous declaration of 'rf12_ready' was here
../main.c:169: error: conflicting types for 'rf12_rxdata'
../rf12.h:9: error: previous declaration of 'rf12_rxdata' was here
../main.c:214: error: expected '=', ',', ';', 'asm' or '__attribute__' before '*' token
../main.c: In function 'rfm12_int_process':
../main.c:220: warning: implicit declaration of function 'RFM12_DEBUG'
../main.c:221: warning: implicit declaration of function 'rfm12_init'
../main.c: In function 'x':
../main.c:324: warning: implicit declaration of function 'uip_send'
../main.c: At top level:
../main.c:329: warning: conflicting types for 'rfm12_init'
../main.c:221: warning: previous implicit declaration of 'rfm12_init' was here
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c:9:18: error: rf12.h: No such file or directory
In file included from ../main.h:21,
                 from ../main.c:10:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/avr/signal.h:36:2: warning: #warning "This header file is obsolete.  Use <avr/interrupt.h>."
In file included from ../main.c:10:
../main.h:33:19: error: 1wire.h: No such file or directory
../main.h:34:22: error: tempmeas.h: No such file or directory
../main.h:35:22: error: timebase.h: No such file or directory
../main.c:35: error: 'RxBW134' undeclared here (not in a function)
../main.c:36: error: 'LNA_6' undeclared here (not in a function)
../main.c:37: error: 'RSSI_79' undeclared here (not in a function)
../main.c: In function 'rf12_init':
../main.c:78: warning: implicit declaration of function 'rfm12_setfreq'
../main.c:79: warning: implicit declaration of function 'rfm12_setbandwidth'
../main.c:80: warning: implicit declaration of function 'rfm12_setbaud'
../main.c:81: warning: implicit declaration of function 'rfm12_setpower'
../main.c: At top level:
../main.c:85: warning: conflicting types for 'rfm12_setbandwidth'
../main.c:79: warning: previous implicit declaration of 'rfm12_setbandwidth' was here
../main.c:89: warning: conflicting types for 'rfm12_setfreq'
../main.c:78: warning: previous implicit declaration of 'rfm12_setfreq' was here
../main.c:97: warning: conflicting types for 'rfm12_setbaud'
../main.c:80: warning: previous implicit declaration of 'rfm12_setbaud' was here
../main.c:106: warning: conflicting types for 'rfm12_setpower'
../main.c:81: warning: previous implicit declaration of 'rfm12_setpower' was here
../main.c:214: error: expected '=', ',', ';', 'asm' or '__attribute__' before '*' token
../main.c: In function 'rfm12_int_process':
../main.c:220: warning: implicit declaration of function 'RFM12_DEBUG'
../main.c:221: warning: implicit declaration of function 'rfm12_init'
../main.c: In function 'x':
../main.c:324: warning: implicit declaration of function 'uip_send'
../main.c: At top level:
../main.c:329: warning: conflicting types for 'rfm12_init'
../main.c:221: warning: previous implicit declaration of 'rfm12_init' was here
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c:33: error: 'RxBW134' undeclared here (not in a function)
../main.c:34: error: 'LNA_6' undeclared here (not in a function)
../main.c:35: error: 'RSSI_79' undeclared here (not in a function)
../main.c: In function 'rf12_init':
../main.c:76: warning: implicit declaration of function 'rfm12_setfreq'
../main.c:77: warning: implicit declaration of function 'rfm12_setbandwidth'
../main.c:78: warning: implicit declaration of function 'rfm12_setbaud'
../main.c:79: warning: implicit declaration of function 'rfm12_setpower'
../main.c: At top level:
../main.c:83: warning: conflicting types for 'rfm12_setbandwidth'
../main.c:77: warning: previous implicit declaration of 'rfm12_setbandwidth' was here
../main.c:87: warning: conflicting types for 'rfm12_setfreq'
../main.c:76: warning: previous implicit declaration of 'rfm12_setfreq' was here
../main.c:95: warning: conflicting types for 'rfm12_setbaud'
../main.c:78: warning: previous implicit declaration of 'rfm12_setbaud' was here
../main.c:104: warning: conflicting types for 'rfm12_setpower'
../main.c:79: warning: previous implicit declaration of 'rfm12_setpower' was here
../main.c:212: error: expected '=', ',', ';', 'asm' or '__attribute__' before '*' token
../main.c: In function 'rfm12_int_process':
../main.c:218: warning: implicit declaration of function 'RFM12_DEBUG'
../main.c:219: warning: implicit declaration of function 'rfm12_init'
../main.c: In function 'x':
../main.c:322: warning: implicit declaration of function 'uip_send'
../main.c: At top level:
../main.c:327: warning: conflicting types for 'rfm12_init'
../main.c:219: warning: previous implicit declaration of 'rfm12_init' was here
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rf12_init':
../main.c:76: warning: implicit declaration of function 'rfm12_setfreq'
../main.c:77: warning: implicit declaration of function 'rfm12_setbandwidth'
../main.c:78: warning: implicit declaration of function 'rfm12_setbaud'
../main.c:79: warning: implicit declaration of function 'rfm12_setpower'
../main.c: At top level:
../main.c:83: warning: conflicting types for 'rfm12_setbandwidth'
../main.c:77: warning: previous implicit declaration of 'rfm12_setbandwidth' was here
../main.c:87: warning: conflicting types for 'rfm12_setfreq'
../main.c:76: warning: previous implicit declaration of 'rfm12_setfreq' was here
../main.c:95: warning: conflicting types for 'rfm12_setbaud'
../main.c:78: warning: previous implicit declaration of 'rfm12_setbaud' was here
../main.c:104: warning: conflicting types for 'rfm12_setpower'
../main.c:79: warning: previous implicit declaration of 'rfm12_setpower' was here
../main.c:212: error: expected '=', ',', ';', 'asm' or '__attribute__' before '*' token
../main.c: In function 'rfm12_int_process':
../main.c:218: warning: implicit declaration of function 'RFM12_DEBUG'
../main.c:219: warning: implicit declaration of function 'rfm12_init'
../main.c: In function 'x':
../main.c:322: warning: implicit declaration of function 'uip_send'
../main.c: At top level:
../main.c:327: warning: conflicting types for 'rfm12_init'
../main.c:219: warning: previous implicit declaration of 'rfm12_init' was here
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c:212: error: expected '=', ',', ';', 'asm' or '__attribute__' before '*' token
../main.c: In function 'rfm12_int_process':
../main.c:218: warning: implicit declaration of function 'RFM12_DEBUG'
../main.c:219: warning: implicit declaration of function 'rfm12_init'
../main.c: In function 'x':
../main.c:322: warning: implicit declaration of function 'uip_send'
../main.c: At top level:
../main.c:327: warning: conflicting types for 'rfm12_init'
../main.c:219: warning: previous implicit declaration of 'rfm12_init' was here
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rfm12_int_process':
../main.c:218: warning: implicit declaration of function 'RFM12_DEBUG'
../main.c:219: warning: implicit declaration of function 'rfm12_init'
../main.c: In function 'x':
../main.c:320: error: 'g_len' undeclared (first use in this function)
../main.c:320: error: (Each undeclared identifier is reported only once
../main.c:320: error: for each function it appears in.)
../main.c:322: warning: implicit declaration of function 'uip_send'
../main.c:322: error: 'g_buf' undeclared (first use in this function)
../main.c: At top level:
../main.c:327: warning: conflicting types for 'rfm12_init'
../main.c:219: warning: previous implicit declaration of 'rfm12_init' was here
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rfm12_init':
../main.c:38: warning: implicit declaration of function 'rf12_init'
../main.c: At top level:
../main.c:88: warning: conflicting types for 'rf12_init'
../main.c:38: warning: previous implicit declaration of 'rf12_init' was here
../main.c: In function 'rfm12_int_process':
../main.c:222: warning: implicit declaration of function 'RFM12_DEBUG'
../main.c: In function 'x':
../main.c:324: error: 'g_len' undeclared (first use in this function)
../main.c:324: error: (Each undeclared identifier is reported only once
../main.c:324: error: for each function it appears in.)
../main.c:326: warning: implicit declaration of function 'uip_send'
../main.c:326: error: 'g_buf' undeclared (first use in this function)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rfm12_int_process':
../main.c:222: warning: implicit declaration of function 'RFM12_DEBUG'
../main.c: In function 'x':
../main.c:324: error: 'g_len' undeclared (first use in this function)
../main.c:324: error: (Each undeclared identifier is reported only once
../main.c:324: error: for each function it appears in.)
../main.c:326: warning: implicit declaration of function 'uip_send'
../main.c:326: error: 'g_buf' undeclared (first use in this function)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rfm12_int_process':
../main.c:226: warning: implicit declaration of function 'RFM12_DEBUG'
../main.c:328:33: error: macro "UART_BAUD_SELECT" requires 2 arguments, but only 1 given
../main.c: In function 'main':
../main.c:328: error: 'UART_BAUD_SELECT' undeclared (first use in this function)
../main.c:328: error: (Each undeclared identifier is reported only once
../main.c:328: error: for each function it appears in.)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rfm12_int_process':
../main.c:226: warning: implicit declaration of function 'RFM12_DEBUG'
Finished building: ../main.c
 
Building file: ../uart.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"uart.d" -MT"uart.d" -c -o "uart.o" "../uart.c"
Finished building: ../uart.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=attiny2313 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
./main.o: In function `rfm12_int_process':
main.c:(.text+0x2b6): undefined reference to `RFM12_DEBUG'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=attiny2313 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1508 bytes (73.6% Full)
(.text + .data + .bootloader)

Data:        123 bytes (96.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=attiny2313 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1550 bytes (75.7% Full)
(.text + .data + .bootloader)

Data:        123 bytes (96.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=attiny2313 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1550 bytes (75.7% Full)
(.text + .data + .bootloader)

Data:        123 bytes (96.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1550 bytes):

Writing | ################################################## | 100% 1.20s

avrdude: 1550 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1550 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1550 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=attiny2313 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1550 bytes (75.7% Full)
(.text + .data + .bootloader)

Data:        123 bytes (96.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1550 bytes):

Writing | ################################################## | 100% 1.20s

avrdude: 1550 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1550 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.80s

avrdude: verifying ...
avrdude: 1550 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
Finished building: avrdudedummy
avrdude: reading on-chip lfuse data:
 

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=attiny2313 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1520 bytes (74.2% Full)
(.text + .data + .bootloader)

Data:        115 bytes (89.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1520 bytes):

Writing | ################################################## | 100% 1.18s

avrdude: 1520 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1520 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.79s

avrdude: verifying ...
avrdude: 1520 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=attiny2313 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1558 bytes (76.1% Full)
(.text + .data + .bootloader)

Data:        115 bytes (89.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1558 bytes):

Writing | ################################################## | 100% 1.21s

avrdude: 1558 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1558 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1558 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
 
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=attiny2313 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1540 bytes (75.2% Full)
(.text + .data + .bootloader)

Data:        115 bytes (89.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1540 bytes):

Writing | ################################################## | 100% 1.20s

avrdude: 1540 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1540 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.80s

avrdude: verifying ...
avrdude: 1540 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: verifying ...
 
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=attiny2313 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1540 bytes (75.2% Full)
(.text + .data + .bootloader)

Data:        115 bytes (89.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1540 bytes):

Writing | ################################################## | 100% 1.20s

avrdude: 1540 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1540 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.80s

avrdude: verifying ...
avrdude: 1540 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=attiny2313 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1538 bytes (75.1% Full)
(.text + .data + .bootloader)

Data:        115 bytes (89.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1538 bytes):

Writing | ################################################## | 100% 1.20s

avrdude: 1538 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1538 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.80s

avrdude: verifying ...
avrdude: 1538 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Clean-only build of configuration Release for project rfm12-usb-receiver ****

make clean 
rm -rf  ./main.o ./uart.o  ./main.d ./uart.d  rfm12-tiny2313.eep  rfm12-tiny2313.hex  rfm12-tiny2313.lss  avrdudedummy  sizedummy  rfm12-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../uart.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"uart.d" -MT"uart.d" -c -o "uart.o" "../uart.c"
Finished building: ../uart.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1540 bytes (18.8% Full)
(.text + .data + .bootloader)

Data:        115 bytes (11.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1540 bytes):

Writing | ################################################## | 100% 1.07s

avrdude: 1540 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1540 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.80s

avrdude: verifying ...
avrdude: 1540 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: verifying ...
 
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1540 bytes (18.8% Full)
(.text + .data + .bootloader)

Data:        115 bytes (11.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1540 bytes):

Writing | ################################################## | 100% 1.06s

avrdude: 1540 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1540 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.80s

avrdude: verifying ...
avrdude: 1540 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../uart.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=8000000UL -MMD -MP -MF"uart.d" -MT"uart.d" -c -o "uart.o" "../uart.c"
Finished building: ../uart.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1540 bytes (18.8% Full)
(.text + .data + .bootloader)

Data:        115 bytes (11.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1540 bytes):

Writing | ################################################## | 100% 1.06s

avrdude: 1540 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1540 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.80s

avrdude: verifying ...
avrdude: 1540 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
 
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Clean-only build of configuration Release for project rfm12-usb-receiver ****

make clean 
rm -rf  ./main.o ./uart.o  ./main.d ./uart.d  rfm12-tiny2313.eep  rfm12-tiny2313.hex  rfm12-tiny2313.lss  avrdudedummy  sizedummy  rfm12-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../uart.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"uart.d" -MT"uart.d" -c -o "uart.o" "../uart.c"
Finished building: ../uart.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1540 bytes (18.8% Full)
(.text + .data + .bootloader)

Data:        115 bytes (11.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1540 bytes (18.8% Full)
(.text + .data + .bootloader)

Data:        115 bytes (11.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1540 bytes):

Writing | ################################################## | 100% 1.06s

avrdude: 1540 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1540 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.80s

avrdude: verifying ...
avrdude: 1540 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1540 bytes (18.8% Full)
(.text + .data + .bootloader)

Data:        115 bytes (11.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1540 bytes):

Writing | ################################################## | 100% 1.06s

avrdude: 1540 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1540 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.80s

avrdude: verifying ...
avrdude: 1540 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1578 bytes (19.3% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1578 bytes):

Writing | ################################################## | 100% 1.09s

avrdude: 1578 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1578 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1578 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
Finished building: avrdudedummy
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1578 bytes (19.3% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1578 bytes):

Writing | ################################################## | 100% 1.08s

avrdude: 1578 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1578 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1578 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
Finished building: avrdudedummy
 
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1578 bytes (19.3% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1578 bytes):

Writing | ################################################## | 100% 1.10s

avrdude: 1578 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1578 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.82s

avrdude: verifying ...
avrdude: 1578 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1632 bytes (19.9% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.13s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

avrdude: 1 bytes of lfuse written
 
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1632 bytes (19.9% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.13s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.84s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1632 bytes (19.9% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.13s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.84s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
Finished building: avrdudedummy
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1632 bytes (19.9% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.13s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:
Finished building: avrdudedummy

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1632 bytes (19.9% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.13s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1632 bytes (19.9% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1632 bytes (19.9% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1632 bytes (19.9% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1632 bytes (19.9% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.c:1:
../uart.h:84:2: error: #error "size of UART_RX_BUFFER_SIZE + UART_TX_BUFFER_SIZE larger than size of SRAM"
../main.c: In function 'rf12_trans':
../main.c:39: warning: implicit declaration of function '_SFR_BYTE'
../main.c:39: error: 'PORTC' undeclared (first use in this function)
../main.c:39: error: (Each undeclared identifier is reported only once
../main.c:39: error: for each function it appears in.)
../main.c:39: warning: implicit declaration of function '_BV'
../main.c:39: error: lvalue required as left operand of assignment
../main.c:42: error: lvalue required as left operand of assignment
../main.c:44: error: lvalue required as left operand of assignment
../main.c:46: error: 'PINC' undeclared (first use in this function)
../main.c:48: error: lvalue required as left operand of assignment
../main.c:51: error: lvalue required as left operand of assignment
../main.c:52: error: lvalue required as left operand of assignment
../main.c: In function 'rf12_init':
../main.c:84: error: 'DDRC' undeclared (first use in this function)
../main.c:86: error: 'PORTC' undeclared (first use in this function)
../main.c:86: error: lvalue required as left operand of assignment
../main.c:87: error: lvalue required as left operand of assignment
../main.c: In function 'rf12_ready':
../main.c:114: error: 'PORTC' undeclared (first use in this function)
../main.c:114: error: lvalue required as left operand of assignment
../main.c:115: error: lvalue required as left operand of assignment
../main.c:117: error: 'PINC' undeclared (first use in this function)
../main.c:122: error: 'PORTB' undeclared (first use in this function)
../main.c:122: error: lvalue required as left operand of assignment
../main.c: In function 'rf12_data':
../main.c:134: error: 'PORTC' undeclared (first use in this function)
../main.c:134: error: lvalue required as left operand of assignment
../main.c:135: error: lvalue required as left operand of assignment
../main.c:137: error: 'PINC' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:321: error: 'DDRD' undeclared (first use in this function)
../main.c:321: error: 'PD2' undeclared (first use in this function)
../main.c:321: error: 'PD3' undeclared (first use in this function)
../main.c:324: error: 'PORTD' undeclared (first use in this function)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rf12_trans':
../main.c:49: warning: implicit declaration of function '_delay_us'
../main.c: In function 'rf12_init':
../main.c:89: warning: implicit declaration of function '_delay_ms'
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
./main.o: In function `main':
main.c:(.text+0x30): undefined reference to `_delay_ms'
main.c:(.text+0x3a): undefined reference to `_delay_ms'
main.c:(.text+0x5c): undefined reference to `_delay_ms'
main.c:(.text+0x66): undefined reference to `_delay_ms'
./main.o: In function `rf12_ready':
main.c:(.text+0x88): undefined reference to `_delay_us'
./main.o: In function `rf12_trans':
main.c:(.text+0xd4): undefined reference to `_delay_us'
./main.o: In function `enable_rx':
main.c:(.text+0x14c): undefined reference to `_delay_ms'
main.c:(.text+0x158): undefined reference to `_delay_ms'
main.c:(.text+0x164): undefined reference to `_delay_ms'
./main.o: In function `rf12_init':
main.c:(.text+0x290): undefined reference to `_delay_ms'
./main.o: In function `rfm12_int_process':
main.c:(.text+0x376): undefined reference to `_delay_ms'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1632 bytes (19.9% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1632 bytes (19.9% Full)
(.text + .data + .bootloader)

Data:        151 bytes (14.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.13s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.84s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
 
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:338: error: 'UART0_CONTROL' undeclared (first use in this function)
../main.c:338: error: (Each undeclared identifier is reported only once
../main.c:338: error: for each function it appears in.)
../main.c:344: error: 'UART0_DATA' undeclared (first use in this function)
../main.c:332: warning: unused variable 'c'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:351: error: 'UART0_DATA' undeclared (first use in this function)
../main.c:351: error: (Each undeclared identifier is reported only once
../main.c:351: error: for each function it appears in.)
../main.c:332: warning: unused variable 'c'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:332: warning: unused variable 'c'
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1598 bytes (19.5% Full)
(.text + .data + .bootloader)

Data:        115 bytes (11.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1598 bytes):

Writing | ################################################## | 100% 1.10s

avrdude: 1598 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1598 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.83s

avrdude: verifying ...
avrdude: 1598 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c:319:5: error: invalid suffix "uart_putc" on integer constant
../main.c:319: error: expected identifier or '(' before numeric constant
../main.c:330:6: error: invalid suffix "uart_puts" on integer constant
../main.c:330: error: expected identifier or '(' before numeric constant
../main.c:334:9: error: invalid suffix "uart_putc" on integer constant
../main.c:363:2: error: invalid suffix "uart_puts" on integer constant
../main.c:369:3: error: invalid suffix "uart_puts" on integer constant
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1708 bytes (20.8% Full)
(.text + .data + .bootloader)

Data:        157 bytes (15.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1708 bytes):

Writing | ################################################## | 100% 1.18s

avrdude: 1708 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1708 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.89s

avrdude: verifying ...
avrdude: 1708 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
Finished building: avrdudedummy
 
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./uart.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1652 bytes (20.2% Full)
(.text + .data + .bootloader)

Data:        157 bytes (15.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1652 bytes):

Writing | ################################################## | 100% 1.14s

avrdude: 1652 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1652 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1652 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
Finished building: avrdudedummy
 
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rfm12_int_process':
../main.c:238: warning: implicit declaration of function 'uart_puts'
../main.c: In function 'main':
../main.c:342: warning: implicit declaration of function 'UART_BAUD_SELECT'
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
./main.o: In function `main':
main.c:(.text+0x2b4): undefined reference to `UART_BAUD_SELECT'
./main.o: In function `rfm12_int_process':
main.c:(.text+0x34c): undefined reference to `uart_puts'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rfm12_int_process':
../main.c:238: warning: implicit declaration of function 'uart_puts'
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
./main.o: In function `rfm12_int_process':
main.c:(.text+0x33c): undefined reference to `uart_puts'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1270 bytes (15.5% Full)
(.text + .data + .bootloader)

Data:         66 bytes (6.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1270 bytes):

Writing | ################################################## | 100% 0.88s

avrdude: 1270 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1270 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.65s

avrdude: verifying ...
avrdude: 1270 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
 
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1234 bytes (15.1% Full)
(.text + .data + .bootloader)

Data:         62 bytes (6.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1234 bytes):

Writing | ################################################## | 100% 0.86s

avrdude: 1234 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1234 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.64s

avrdude: verifying ...
avrdude: 1234 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1278 bytes (15.6% Full)
(.text + .data + .bootloader)

Data:         66 bytes (6.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1278 bytes):

Writing | ################################################## | 100% 0.88s

avrdude: 1278 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1278 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.66s

avrdude: verifying ...
avrdude: 1278 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: verifying ...
 
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1256 bytes (15.3% Full)
(.text + .data + .bootloader)

Data:         64 bytes (6.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1256 bytes):

Writing | ################################################## | 100% 0.87s

avrdude: 1256 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1256 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.65s

avrdude: verifying ...
avrdude: 1256 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1300 bytes (15.9% Full)
(.text + .data + .bootloader)

Data:         66 bytes (6.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1300 bytes):

Writing | ################################################## | 100% 0.90s

avrdude: 1300 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1300 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.67s

avrdude: verifying ...
avrdude: 1300 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
Finished building: avrdudedummy
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):
 

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:364: error: lvalue required as left operand of assignment
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1396 bytes (17.0% Full)
(.text + .data + .bootloader)

Data:         68 bytes (6.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1396 bytes):

Writing | ################################################## | 100% 0.97s

avrdude: 1396 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1396 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.72s

avrdude: verifying ...
avrdude: 1396 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1384 bytes (16.9% Full)
(.text + .data + .bootloader)

Data:         66 bytes (6.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1384 bytes):

Writing | ################################################## | 100% 0.95s

avrdude: 1384 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1384 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.71s

avrdude: verifying ...
avrdude: 1384 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1358 bytes (16.6% Full)
(.text + .data + .bootloader)

Data:         64 bytes (6.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1358 bytes):

Writing | ################################################## | 100% 0.93s

avrdude: 1358 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1358 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.70s

avrdude: verifying ...
avrdude: 1358 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
 
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1322 bytes (16.1% Full)
(.text + .data + .bootloader)

Data:         60 bytes (5.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1322 bytes):

Writing | ################################################## | 100% 0.91s

avrdude: 1322 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1322 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.68s

avrdude: verifying ...
avrdude: 1322 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1358 bytes (16.6% Full)
(.text + .data + .bootloader)

Data:         64 bytes (6.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1358 bytes):

Writing | ################################################## | 100% 0.94s

avrdude: 1358 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1358 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.70s

avrdude: verifying ...
avrdude: 1358 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1358 bytes (16.6% Full)
(.text + .data + .bootloader)

Data:         64 bytes (6.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1358 bytes):

Writing | ################################################## | 100% 0.94s

avrdude: 1358 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1358 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.71s

avrdude: verifying ...
avrdude: 1358 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rfm12_int_process':
../main.c:303: warning: implicit declaration of function 'itoa'
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1562 bytes (19.1% Full)
(.text + .data + .bootloader)

Data:         64 bytes (6.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1562 bytes):

Writing | ################################################## | 100% 1.08s

avrdude: 1562 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1562 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1562 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rfm12_int_process':
../main.c:303: warning: implicit declaration of function '_itoa'
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
./main.o: In function `rfm12_int_process':
main.c:(.text+0x386): undefined reference to `_itoa'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1542 bytes (18.8% Full)
(.text + .data + .bootloader)

Data:         64 bytes (6.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1542 bytes):

Writing | ################################################## | 100% 1.07s

avrdude: 1542 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1542 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.80s

avrdude: verifying ...
avrdude: 1542 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'rfm12_int_process':
../main.c:305: warning: passing argument 1 of 'uuart_puts' makes pointer from integer without a cast
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1438 bytes (17.6% Full)
(.text + .data + .bootloader)

Data:         64 bytes (6.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1438 bytes):

Writing | ################################################## | 100% 0.99s

avrdude: 1438 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1438 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.75s

avrdude: verifying ...
avrdude: 1438 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1412 bytes (17.2% Full)
(.text + .data + .bootloader)

Data:         64 bytes (6.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1412 bytes):

Writing | ################################################## | 100% 0.98s

avrdude: 1412 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1412 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.73s

Finished building: avrdudedummy
avrdude: verifying ...
avrdude: 1412 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1358 bytes (16.6% Full)
(.text + .data + .bootloader)

Data:         74 bytes (7.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1358 bytes):

Writing | ################################################## | 100% 0.94s

avrdude: 1358 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1358 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.70s

avrdude: verifying ...
avrdude: 1358 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

avrdude: 1 bytes of lfuse written
 
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1422 bytes (17.4% Full)
(.text + .data + .bootloader)

Data:         76 bytes (7.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1422 bytes):

Writing | ################################################## | 100% 0.99s

avrdude: 1422 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1422 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.74s

avrdude: verifying ...
avrdude: 1422 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1386 bytes (16.9% Full)
(.text + .data + .bootloader)

Data:         76 bytes (7.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1386 bytes):

Writing | ################################################## | 100% 0.96s

avrdude: 1386 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1386 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.71s

avrdude: verifying ...
avrdude: 1386 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
 
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1380 bytes (16.8% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1380 bytes):

Writing | ################################################## | 100% 0.95s

avrdude: 1380 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1380 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.71s

avrdude: verifying ...
avrdude: 1380 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

 
avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1380 bytes (16.8% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1380 bytes):

Writing | ################################################## | 100% 0.95s

avrdude: 1380 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1380 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.71s

avrdude: verifying ...
avrdude: 1380 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):
Finished building: avrdudedummy

Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1550 bytes (18.9% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1550 bytes):

Writing | ################################################## | 100% 1.08s

avrdude: 1550 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1550 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.80s

avrdude: verifying ...
avrdude: 1550 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
 
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1550 bytes (18.9% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1550 bytes):

Writing | ################################################## | 100% 1.07s

avrdude: 1550 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1550 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1550 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1568 bytes (19.1% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1568 bytes):

Writing | ################################################## | 100% 1.09s

avrdude: 1568 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1568 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1568 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy
 

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1576 bytes (19.2% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1576 bytes):

Writing | ################################################## | 100% 1.10s

avrdude: 1576 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1576 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1576 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
Finished building: avrdudedummy

 
avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1576 bytes (19.2% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project rfm12-usb-receiver ****

make clean 
rm -rf  ./main.o  ./main.d  rfm12-tiny2313.eep  rfm12-tiny2313.hex  rfm12-tiny2313.lss  avrdudedummy  sizedummy  rfm12-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1576 bytes (19.2% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1576 bytes (19.2% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
avrdude: AVR device initialized and ready to accept instructions
avrdude: Device signature = 0x000000
avrdude: Yikes!  Invalid device signature.
avrdude: Expected signature for ATMEGA8 is 1E 93 07
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1576 bytes (19.2% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1576 bytes):

Writing | ################################################## | 100% 1.10s

avrdude: 1576 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1576 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1576 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
Finished building: avrdudedummy
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:354: warning: integer overflow in expression
../main.c:354: warning: integer overflow in expression
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1576 bytes (19.2% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1576 bytes):

Writing | ################################################## | 100% 1.09s

avrdude: 1576 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1576 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1576 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:354: warning: integer overflow in expression
../main.c:354: warning: integer overflow in expression
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1576 bytes (19.2% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1576 bytes):

Writing | ################################################## | 100% 1.10s

avrdude: 1576 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1576 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.82s

avrdude: verifying ...
avrdude: 1576 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1576 bytes (19.2% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1576 bytes):

Writing | ################################################## | 100% 1.08s

avrdude: 1576 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1576 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.82s

avrdude: verifying ...
avrdude: 1576 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy
 

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1578 bytes (19.3% Full)
(.text + .data + .bootloader)

Data:         70 bytes (6.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1578 bytes):

Writing | ################################################## | 100% 1.09s

avrdude: 1578 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 1578 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.82s

avrdude: verifying ...
avrdude: 1578 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
 
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:380: warning: no return statement in function returning non-void
In file included from ../main.c:403:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
In file included from ../main.c:404:
../usbdrv.h:13:23: error: usbconfig.h: No such file or directory
../usbdrv.h:514:2: warning: #warning "You should define USB_CFG_VENDOR_ID and USB_CFG_DEVICE_ID in usbconfig.h"
../usbdrv.h:537:2: error: #error "You must define USB_CFG_IOPORTNAME in usbconfig.h, see usbconfig-prototype.h"
../main.c: At top level:
../main.c:433: error: 'USB_CFG_MAX_BUS_POWER' undeclared here (not in a function)
../main.c:440: error: 'USB_CFG_HAVE_INTRIN_ENDPOINT' undeclared here (not in a function)
../main.c:441: error: 'USB_CFG_INTERFACE_CLASS' undeclared here (not in a function)
../main.c:442: error: 'USB_CFG_INTERFACE_SUBCLASS' undeclared here (not in a function)
../main.c:443: error: 'USB_CFG_INTERFACE_PROTOCOL' undeclared here (not in a function)
../main.c:475: error: 'USB_CFG_INTR_POLL_INTERVAL' undeclared here (not in a function)
../main.c:523: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'baud'
../main.c: In function 'resetUart':
../main.c:528: warning: implicit declaration of function 'uartInit'
../main.c:528: error: 'baud' undeclared (first use in this function)
../main.c:528: error: (Each undeclared identifier is reported only once
../main.c:528: error: for each function it appears in.)
../main.c:528: error: request for member 'dword' in something not a structure or union
../main.c:529: error: 'irptr' undeclared (first use in this function)
../main.c:529: warning: statement with no effect
../main.c:530: error: 'iwptr' undeclared (first use in this function)
../main.c:530: warning: statement with no effect
../main.c:531: error: 'urptr' undeclared (first use in this function)
../main.c:531: warning: statement with no effect
../main.c:532: error: 'uwptr' undeclared (first use in this function)
../main.c:532: warning: statement with no effect
../main.c: In function 'usbFunctionSetup':
../main.c:551: error: 'UART_CTRL_PORT' undeclared (first use in this function)
../main.c:551: error: 'UART_CTRL_DTR' undeclared (first use in this function)
../main.c:551: error: invalid operands to binary << (have 'int' and 'char *')
../main.c:551: error: wrong type argument to bit-complement
../main.c:551: error: invalid operands to binary & (have 'char *' and 'char *')
../main.c:551: error: invalid operands to binary << (have 'unsigned int' and 'char *')
../main.c:551: error: invalid operands to binary | (have 'char *' and 'char *')
../main.c:551: warning: statement with no effect
../main.c: In function 'usbFunctionRead':
../main.c:579: error: 'baud' undeclared (first use in this function)
../main.c:579: error: request for member 'bytes' in something not a structure or union
../main.c:580: error: request for member 'bytes' in something not a structure or union
../main.c:581: error: request for member 'bytes' in something not a structure or union
../main.c:582: error: request for member 'bytes' in something not a structure or union
../main.c: In function 'usbFunctionWrite':
../main.c:599: error: 'baud' undeclared (first use in this function)
../main.c:599: error: request for member 'bytes' in something not a structure or union
../main.c:600: error: request for member 'bytes' in something not a structure or union
../main.c:601: error: request for member 'bytes' in something not a structure or union
../main.c:602: error: request for member 'bytes' in something not a structure or union
../main.c: In function 'usbFunctionWriteOut':
../main.c:626: error: 'uwptr' undeclared (first use in this function)
../main.c:626: error: 'TX_MASK' undeclared (first use in this function)
../main.c:626: error: invalid operands to binary & (have 'char *' and 'char *')
../main.c:626: warning: assignment makes integer from pointer without a cast
../main.c:627: error: 'irptr' undeclared (first use in this function)
../main.c:627: warning: comparison between pointer and integer
../main.c:628: error: 'tx_buf' undeclared (first use in this function)
../main.c:628: error: array subscript is not an integer
../main.c:628: warning: statement with no effect
../main.c:629: warning: statement with no effect
../main.c:634: warning: implicit declaration of function 'uartTxBytesFree'
../main.c:634: error: 'HW_CDC_BULK_OUT_SIZE' undeclared (first use in this function)
../main.c:634: warning: comparison between pointer and integer
../main.c:635: warning: implicit declaration of function 'usbDisableAllRequests'
../main.c: In function 'hardwareInit':
../main.c:643: error: 'PORTUSB_CFG_IOPORTNAME' undeclared (first use in this function)
../main.c:643: error: 'USB_CFG_DMINUS_BIT' undeclared (first use in this function)
../main.c:643: error: invalid operands to binary << (have 'int' and 'char *')
../main.c:643: error: 'USB_CFG_DPLUS_BIT' undeclared (first use in this function)
../main.c:643: error: invalid operands to binary << (have 'int' and 'char *')
../main.c:643: error: invalid operands to binary | (have 'char *' and 'char *')
../main.c:643: error: wrong type argument to bit-complement
../main.c:643: warning: cast from pointer to integer of different size
../main.c:643: warning: statement with no effect
../main.c:649: error: 'DDRUSB_CFG_IOPORTNAME' undeclared (first use in this function)
../main.c:649: error: invalid operands to binary << (have 'int' and 'char *')
../main.c:649: error: invalid operands to binary << (have 'int' and 'char *')
../main.c:649: error: invalid operands to binary | (have 'char *' and 'char *')
../main.c:649: warning: statement with no effect
../main.c:659: warning: statement with no effect
../main.c:663: error: 'baud' undeclared (first use in this function)
../main.c:663: error: request for member 'dword' in something not a structure or union
../main.c:663: error: 'UART_DEFAULT_BPS' undeclared (first use in this function)
../main.c:663: warning: statement with no effect
../main.c: In function 'main':
../main.c:686: warning: implicit declaration of function 'uartPoll'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:380: warning: no return statement in function returning non-void
In file included from ../main.c:403:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
../main.c: At top level:
../main.c:524: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'baud'
../main.c: In function 'resetUart':
../main.c:529: warning: implicit declaration of function 'uartInit'
../main.c:529: error: 'baud' undeclared (first use in this function)
../main.c:529: error: (Each undeclared identifier is reported only once
../main.c:529: error: for each function it appears in.)
../main.c:530: error: 'irptr' undeclared (first use in this function)
../main.c:531: error: 'iwptr' undeclared (first use in this function)
../main.c:532: error: 'urptr' undeclared (first use in this function)
../main.c:533: error: 'uwptr' undeclared (first use in this function)
../main.c: In function 'usbFunctionSetup':
../main.c:552: error: 'UART_CTRL_PORT' undeclared (first use in this function)
../main.c:552: error: 'UART_CTRL_DTR' undeclared (first use in this function)
../main.c: In function 'usbFunctionRead':
../main.c:580: error: 'baud' undeclared (first use in this function)
../main.c: In function 'usbFunctionWrite':
../main.c:600: error: 'baud' undeclared (first use in this function)
../main.c: In function 'usbFunctionWriteOut':
../main.c:627: error: 'uwptr' undeclared (first use in this function)
../main.c:627: error: 'TX_MASK' undeclared (first use in this function)
../main.c:628: error: 'irptr' undeclared (first use in this function)
../main.c:629: error: 'tx_buf' undeclared (first use in this function)
../main.c:635: warning: implicit declaration of function 'uartTxBytesFree'
../main.c:635: error: 'HW_CDC_BULK_OUT_SIZE' undeclared (first use in this function)
../main.c: In function 'hardwareInit':
../main.c:664: error: 'baud' undeclared (first use in this function)
../main.c:664: error: 'UART_DEFAULT_BPS' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:687: warning: implicit declaration of function 'uartPoll'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:380: warning: no return statement in function returning non-void
In file included from ../main.c:403:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
../main.c: At top level:
../main.c:524: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'baud'
../main.c: In function 'usbFunctionSetup':
../main.c:551: error: 'UART_CTRL_PORT' undeclared (first use in this function)
../main.c:551: error: (Each undeclared identifier is reported only once
../main.c:551: error: for each function it appears in.)
../main.c:551: error: 'UART_CTRL_DTR' undeclared (first use in this function)
../main.c: In function 'usbFunctionRead':
../main.c:579: error: 'baud' undeclared (first use in this function)
../main.c: In function 'usbFunctionWrite':
../main.c:599: error: 'baud' undeclared (first use in this function)
../main.c: In function 'usbFunctionWriteOut':
../main.c:626: error: 'uwptr' undeclared (first use in this function)
../main.c:626: error: 'TX_MASK' undeclared (first use in this function)
../main.c:627: error: 'irptr' undeclared (first use in this function)
../main.c:628: error: 'tx_buf' undeclared (first use in this function)
../main.c:634: warning: implicit declaration of function 'uartTxBytesFree'
../main.c:634: error: 'HW_CDC_BULK_OUT_SIZE' undeclared (first use in this function)
../main.c: In function 'hardwareInit':
../main.c:663: error: 'baud' undeclared (first use in this function)
../main.c:663: error: 'UART_DEFAULT_BPS' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:686: warning: implicit declaration of function 'uartPoll'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:380: warning: no return statement in function returning non-void
In file included from ../main.c:403:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
../main.c: At top level:
../main.c:520: error: expected specifier-qualifier-list before 'ulong'
../main.c: In function 'usbFunctionSetup':
../main.c:555: error: 'UART_CTRL_PORT' undeclared (first use in this function)
../main.c:555: error: (Each undeclared identifier is reported only once
../main.c:555: error: for each function it appears in.)
../main.c:555: error: 'UART_CTRL_DTR' undeclared (first use in this function)
../main.c: In function 'usbFunctionRead':
../main.c:583: error: 'usbDWord_t' has no member named 'bytes'
../main.c:584: error: 'usbDWord_t' has no member named 'bytes'
../main.c:585: error: 'usbDWord_t' has no member named 'bytes'
../main.c:586: error: 'usbDWord_t' has no member named 'bytes'
../main.c: In function 'usbFunctionWrite':
../main.c:603: error: 'usbDWord_t' has no member named 'bytes'
../main.c:604: error: 'usbDWord_t' has no member named 'bytes'
../main.c:605: error: 'usbDWord_t' has no member named 'bytes'
../main.c:606: error: 'usbDWord_t' has no member named 'bytes'
../main.c: In function 'usbFunctionWriteOut':
../main.c:630: error: 'uwptr' undeclared (first use in this function)
../main.c:630: error: 'TX_MASK' undeclared (first use in this function)
../main.c:631: error: 'irptr' undeclared (first use in this function)
../main.c:632: error: 'tx_buf' undeclared (first use in this function)
../main.c:638: warning: implicit declaration of function 'uartTxBytesFree'
../main.c:638: error: 'HW_CDC_BULK_OUT_SIZE' undeclared (first use in this function)
../main.c: In function 'hardwareInit':
../main.c:667: error: 'usbDWord_t' has no member named 'dword'
../main.c:667: error: 'UART_DEFAULT_BPS' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:690: warning: implicit declaration of function 'uartPoll'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:380: warning: no return statement in function returning non-void
In file included from ../main.c:403:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
../main.c: In function 'usbFunctionSetup':
../main.c:558: error: 'UART_CTRL_PORT' undeclared (first use in this function)
../main.c:558: error: (Each undeclared identifier is reported only once
../main.c:558: error: for each function it appears in.)
../main.c:558: error: 'UART_CTRL_DTR' undeclared (first use in this function)
../main.c: In function 'usbFunctionWriteOut':
../main.c:633: error: 'uwptr' undeclared (first use in this function)
../main.c:633: error: 'TX_MASK' undeclared (first use in this function)
../main.c:634: error: 'irptr' undeclared (first use in this function)
../main.c:635: error: 'tx_buf' undeclared (first use in this function)
../main.c:641: warning: implicit declaration of function 'uartTxBytesFree'
../main.c:641: error: 'HW_CDC_BULK_OUT_SIZE' undeclared (first use in this function)
../main.c: In function 'hardwareInit':
../main.c:670: error: 'UART_DEFAULT_BPS' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:693: warning: implicit declaration of function 'uartPoll'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:380: warning: no return statement in function returning non-void
In file included from ../main.c:403:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
../main.c: In function 'usbFunctionWriteOut':
../main.c:633: error: 'uwptr' undeclared (first use in this function)
../main.c:633: error: (Each undeclared identifier is reported only once
../main.c:633: error: for each function it appears in.)
../main.c:633: error: 'TX_MASK' undeclared (first use in this function)
../main.c:634: error: 'irptr' undeclared (first use in this function)
../main.c:635: error: 'tx_buf' undeclared (first use in this function)
../main.c:641: warning: implicit declaration of function 'uartTxBytesFree'
../main.c:641: error: 'HW_CDC_BULK_OUT_SIZE' undeclared (first use in this function)
../main.c: In function 'hardwareInit':
../main.c:670: error: 'UART_DEFAULT_BPS' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:693: warning: implicit declaration of function 'uartPoll'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:380: warning: no return statement in function returning non-void
In file included from ../main.c:403:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
../main.c: In function 'usbFunctionWriteOut':
../main.c:633: error: 'uwptr' undeclared (first use in this function)
../main.c:633: error: (Each undeclared identifier is reported only once
../main.c:633: error: for each function it appears in.)
../main.c:633: error: 'TX_MASK' undeclared (first use in this function)
../main.c:634: error: 'irptr' undeclared (first use in this function)
../main.c:635: error: 'tx_buf' undeclared (first use in this function)
../main.c:641: warning: implicit declaration of function 'uartTxBytesFree'
../main.c:641: error: 'HW_CDC_BULK_OUT_SIZE' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:693: warning: implicit declaration of function 'uartPoll'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:380: warning: no return statement in function returning non-void
In file included from ../main.c:403:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
../main.c: In function 'usbFunctionWriteOut':
../main.c:633: error: 'uwptr' undeclared (first use in this function)
../main.c:633: error: (Each undeclared identifier is reported only once
../main.c:633: error: for each function it appears in.)
../main.c:633: error: 'TX_MASK' undeclared (first use in this function)
../main.c:634: error: 'irptr' undeclared (first use in this function)
../main.c:635: error: 'tx_buf' undeclared (first use in this function)
../main.c:641: warning: implicit declaration of function 'uartTxBytesFree'
../main.c: In function 'main':
../main.c:693: warning: implicit declaration of function 'uartPoll'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:380: warning: no return statement in function returning non-void
In file included from ../main.c:403:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
../main.c: In function 'main':
../main.c:693: warning: implicit declaration of function 'uartPoll'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
../main.c:380: warning: no return statement in function returning non-void
In file included from ../main.c:403:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
../main.c: In function 'usbFunctionWrite':
../main.c:620: warning: implicit declaration of function 'resetUart'
../main.c: In function 'main':
../main.c:693: warning: implicit declaration of function 'uartPoll'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:353: warning: integer overflow in expression
../main.c:353: warning: integer overflow in expression
In file included from ../main.c:404:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
../main.c: In function 'hardwareInit':
../main.c:675: warning: implicit declaration of function 'resetUart'
../main.c: In function 'uartPoll':
../main.c:683: error: 'UCSR0A' undeclared (first use in this function)
../main.c:683: error: (Each undeclared identifier is reported only once
../main.c:683: error: for each function it appears in.)
../main.c:683: error: 'UDRE0' undeclared (first use in this function)
../main.c:683: error: 'uwptr' undeclared (first use in this function)
../main.c:683: error: 'irptr' undeclared (first use in this function)
../main.c:683: error: 'UART_CTRL_PIN' undeclared (first use in this function)
../main.c:683: error: 'UART_CTRL_CTS' undeclared (first use in this function)
../main.c:684: error: 'UDR0' undeclared (first use in this function)
../main.c:684: error: 'tx_buf' undeclared (first use in this function)
../main.c:685: error: 'TX_MASK' undeclared (first use in this function)
../main.c:687: warning: implicit declaration of function 'uartTxBytesFree'
../main.c:687: error: 'HW_CDC_BULK_OUT_SIZE' undeclared (first use in this function)
../main.c:693: error: 'RXC0' undeclared (first use in this function)
../main.c:694: error: 'iwptr' undeclared (first use in this function)
../main.c:694: error: 'RX_MASK' undeclared (first use in this function)
../main.c:695: error: 'urptr' undeclared (first use in this function)
../main.c:700: error: 'FE0' undeclared (first use in this function)
../main.c:700: error: 'DOR0' undeclared (first use in this function)
../main.c:700: error: 'UPE0' undeclared (first use in this function)
../main.c:702: error: 'rx_buf' undeclared (first use in this function)
../main.c:707: error: 'UART_CTRL_PORT' undeclared (first use in this function)
../main.c:707: error: 'UART_CTRL_RTS' undeclared (first use in this function)
../main.c:717: error: 'HW_CDC_BULK_IN_SIZE' undeclared (first use in this function)
../main.c:720: error: 'RX_SIZE' undeclared (first use in this function)
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
In file included from ../main.c:402:
../oddebug.h:32:28: error: usbportability.h: No such file or directory
../main.c: In function 'uartPoll':
../main.c:664: warning: unused variable 'next'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
In file included from ../main.c:403:
../usbdrv.h:14:28: error: usbportability.h: No such file or directory
../main.c: In function 'uartPoll':
../main.c:664: warning: unused variable 'next'
../main.c: In function 'main':
../main.c:721: warning: implicit declaration of function 'odDebugInit'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
../main.c: In function 'uartPoll':
../main.c:664: warning: unused variable 'next'
../main.c: In function 'main':
../main.c:721: warning: implicit declaration of function 'odDebugInit'
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./main.o: In function `main':
main.c:(.text+0x38c): undefined reference to `odDebugInit'
./usbdrv.o: In function `usbSetInterrupt3':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbSetInterrupt':
usbdrv.c:(.text+0x9a): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0x2b6): undefined reference to `usbCrc16Append'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project rfm12-usb-receiver ****

make clean 
rm -rf  ./main.o ./oddebug.o ./usbdrv.o  ./main.d ./oddebug.d ./usbdrv.d  rfm12-tiny2313.eep  rfm12-tiny2313.hex  rfm12-tiny2313.lss  avrdudedummy  sizedummy  rfm12-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
../main.c: In function 'uartPoll':
../main.c:664: warning: unused variable 'next'
../main.c: In function 'main':
../main.c:721: warning: implicit declaration of function 'odDebugInit'
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./main.o: In function `main':
main.c:(.text+0x38c): undefined reference to `odDebugInit'
./usbdrv.o: In function `usbSetInterrupt3':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbSetInterrupt':
usbdrv.c:(.text+0x9a): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0x2b6): undefined reference to `usbCrc16Append'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./usbdrv.o: In function `usbSetInterrupt3':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbSetInterrupt':
usbdrv.c:(.text+0x9a): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0x2b6): undefined reference to `usbCrc16Append'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./usbdrv.o: In function `usbSetInterrupt3':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbSetInterrupt':
usbdrv.c:(.text+0x9a): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0x2b6): undefined reference to `usbCrc16Append'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project rfm12-usb-receiver ****

make clean 
rm -rf  ./main.o ./oddebug.o ./usbdrv.o  ./main.d ./oddebug.d ./usbdrv.d  rfm12-tiny2313.eep  rfm12-tiny2313.hex  rfm12-tiny2313.lss  avrdudedummy  sizedummy  rfm12-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./usbdrv.o: In function `usbSetInterrupt3':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbSetInterrupt':
usbdrv.c:(.text+0x9a): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0x2b6): undefined reference to `usbCrc16Append'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./usbdrv.o: In function `usbSetInterrupt3':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbSetInterrupt':
usbdrv.c:(.text+0x9a): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0x2b6): undefined reference to `usbCrc16Append'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project rfm12-usb-receiver ****

make clean 
rm -rf  ./main.o ./oddebug.o ./usbdrv.o  ./main.d ./oddebug.d ./usbdrv.d  rfm12-tiny2313.eep  rfm12-tiny2313.hex  rfm12-tiny2313.lss  avrdudedummy  sizedummy  rfm12-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./usbdrv.o: In function `usbSetInterrupt3':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbSetInterrupt':
usbdrv.c:(.text+0x9a): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0x2b6): undefined reference to `usbCrc16Append'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./usbdrv.o: In function `usbSetInterrupt3':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbSetInterrupt':
usbdrv.c:(.text+0x9a): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0x2b6): undefined reference to `usbCrc16Append'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project rfm12-usb-receiver ****

make clean 
rm -rf  ./main.o ./oddebug.o ./usbdrv.o  ./main.d ./oddebug.d ./usbdrv.d  rfm12-tiny2313.eep  rfm12-tiny2313.hex  rfm12-tiny2313.lss  avrdudedummy  sizedummy  rfm12-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./usbdrv.o: In function `usbSetInterrupt3':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbSetInterrupt':
usbdrv.c:(.text+0x9a): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0x2b6): undefined reference to `usbCrc16Append'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
../usbdrv.c: In function 'usbGenericSetInterrupt':
../usbdrv.c:242: warning: implicit declaration of function 'DBG2'
../usbdrv.c: In function 'usbPoll':
../usbdrv.c:600: warning: implicit declaration of function 'DBG1'
Finished building: ../usbdrv.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./usbdrv.o: In function `usbGenericSetInterrupt':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
usbdrv.c:(.text+0x7e): undefined reference to `DBG2'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0xce): undefined reference to `DBG2'
usbdrv.c:(.text+0x2c4): undefined reference to `usbCrc16Append'
usbdrv.c:(.text+0x2f0): undefined reference to `DBG2'
usbdrv.c:(.text+0x312): undefined reference to `DBG1'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
Finished building: ../main.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./usbdrv.o: In function `usbSetInterrupt3':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbSetInterrupt':
usbdrv.c:(.text+0x9a): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0x2b6): undefined reference to `usbCrc16Append'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project rfm12-usb-receiver ****

make clean 
rm -rf  ./main.o ./oddebug.o ./usbdrv.o  ./main.d ./oddebug.d ./usbdrv.d  rfm12-tiny2313.eep  rfm12-tiny2313.hex  rfm12-tiny2313.lss  avrdudedummy  sizedummy  rfm12-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o   
./usbdrv.o: In function `usbSetInterrupt3':
usbdrv.c:(.text+0x58): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbSetInterrupt':
usbdrv.c:(.text+0x9a): undefined reference to `usbCrc16Append'
./usbdrv.o: In function `usbPoll':
usbdrv.c:(.text+0x2b6): undefined reference to `usbCrc16Append'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
../usbdrvasm.S:391:9: error: #error "USB_CFG_CLOCK_KHZ is not one of the supported non-crc-rates!"
make: *** [usbdrvasm.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
../usbdrvasm.S:392:9: error: #error "USB_CFG_CLOCK_KHZ is not one of the supported non-crc-rates!"
make: *** [usbdrvasm.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
../usbdrvasm.S:393:9: error: #error "USB_CFG_CLOCK_KHZ is not one of the supported non-crc-rates!"
make: *** [usbdrvasm.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
Finished building: ../main.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
../usbdrvasm.S:381:34: error: usbdrvasm12.inc: No such file or directory
make: *** [usbdrvasm.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
In file included from ../usbdrvasm.S:381:
../usbdrvasm12.inc:266:25: error: asmcommon.inc: No such file or directory
make: *** [usbdrvasm.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3502 bytes (42.7% Full)
(.text + .data + .bootloader)

Data:        148 bytes (14.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3502 bytes (42.7% Full)
(.text + .data + .bootloader)

Data:        148 bytes (14.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3502 bytes):

Writing | ################################################## | 100% 2.41s

avrdude: 3502 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3502 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.80s

avrdude: verifying ...
avrdude: 3502 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
../main.c: In function 'main':
../main.c:735: warning: implicit declaration of function 'sprintf'
../main.c:735: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:736: warning: pointer targets in passing argument 1 of 'usbSetInterrupt' differ in signedness
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5056 bytes (61.7% Full)
(.text + .data + .bootloader)

Data:        156 bytes (15.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (5056 bytes):

Writing | ################################################## | 100% 3.47s

avrdude: 5056 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 5056 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.61s

avrdude: verifying ...
avrdude: 5056 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
../main.c: In function 'main':
../main.c:735: warning: implicit declaration of function 'sprintf'
../main.c:735: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:735: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c:736: warning: pointer targets in passing argument 1 of 'strlen' differ in signedness
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5056 bytes (61.7% Full)
(.text + .data + .bootloader)

Data:        156 bytes (15.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (5056 bytes):

Writing | ################################################## | 100% 3.45s

avrdude: 5056 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 5056 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.61s

avrdude: verifying ...
avrdude: 5056 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: verifying ...
 
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main1':
../main.c:352: warning: integer overflow in expression
../main.c:352: warning: integer overflow in expression
../main.c: In function 'main':
../main.c:735: warning: implicit declaration of function 'sprintf'
../main.c:735: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:735: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5046 bytes (61.6% Full)
(.text + .data + .bootloader)

Data:        160 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (5046 bytes):

Writing | ################################################## | 100% 3.46s

avrdude: 5046 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 5046 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.61s

avrdude: verifying ...
avrdude: 5046 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.

 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main2':
../main.c:701: warning: implicit declaration of function 'sprintf'
../main.c:701: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:701: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c: In function 'main1':
../main.c:727: warning: integer overflow in expression
../main.c:727: warning: integer overflow in expression
../main.c:763: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:763: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c:764: warning: passing argument 1 of 'usbSetInterrupt' makes pointer from integer without a cast
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o: In function `__bad_interrupt':
../../../../crt1/gcrt1.S:195: undefined reference to `main'
make: *** [rfm12-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main2':
../main.c:701: warning: implicit declaration of function 'sprintf'
../main.c:701: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:701: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c: In function 'main':
../main.c:727: warning: integer overflow in expression
../main.c:727: warning: integer overflow in expression
../main.c:763: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:763: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c:764: warning: passing argument 1 of 'usbSetInterrupt' makes pointer from integer without a cast
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5234 bytes (63.9% Full)
(.text + .data + .bootloader)

Data:        156 bytes (15.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (5234 bytes):

Writing | ################################################## | 100% 3.59s

avrdude: 5234 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 5234 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.71s

avrdude: verifying ...
avrdude: 5234 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy
 

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main2':
../main.c:699: warning: implicit declaration of function 'sprintf'
../main.c:699: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:699: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c: In function 'main':
../main.c:725: warning: integer overflow in expression
../main.c:725: warning: integer overflow in expression
../main.c:761: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:761: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c:762: warning: passing argument 1 of 'usbSetInterrupt' makes pointer from integer without a cast
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5290 bytes (64.6% Full)
(.text + .data + .bootloader)

Data:        166 bytes (16.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5290 bytes (64.6% Full)
(.text + .data + .bootloader)

Data:        166 bytes (16.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5290 bytes (64.6% Full)
(.text + .data + .bootloader)

Data:        166 bytes (16.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (5290 bytes):

Writing | ################################################## | 100% 3.66s

avrdude: 5290 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 5290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.70s

avrdude: verifying ...
avrdude: 5290 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main2':
../main.c:701: warning: implicit declaration of function 'sprintf'
../main.c:701: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:701: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c: In function 'main':
../main.c:728: warning: integer overflow in expression
../main.c:728: warning: integer overflow in expression
../main.c:764: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:764: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c:765: warning: passing argument 1 of 'usbSetInterrupt' makes pointer from integer without a cast
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5296 bytes (64.6% Full)
(.text + .data + .bootloader)

Data:        166 bytes (16.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5296 bytes (64.6% Full)
(.text + .data + .bootloader)

Data:        166 bytes (16.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (5296 bytes):

Writing | ################################################## | 100% 3.67s

avrdude: 5296 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 5296 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.71s

avrdude: verifying ...
avrdude: 5296 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main2':
../main.c:701: warning: implicit declaration of function 'sprintf'
../main.c:701: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:701: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c: In function 'main':
../main.c:728: warning: integer overflow in expression
../main.c:728: warning: integer overflow in expression
../main.c:766: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:766: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c:767: warning: passing argument 1 of 'usbSetInterrupt' makes pointer from integer without a cast
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5304 bytes (64.7% Full)
(.text + .data + .bootloader)

Data:        166 bytes (16.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5304 bytes (64.7% Full)
(.text + .data + .bootloader)

Data:        166 bytes (16.2% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (5304 bytes):

Writing | ################################################## | 100% 3.69s

avrdude: 5304 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 5304 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.77s

avrdude: verifying ...
avrdude: 5304 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0xff:
 
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'usbSend':
../main.c:736: error: 'uiLen' undeclared (first use in this function)
../main.c:736: error: (Each undeclared identifier is reported only once
../main.c:736: error: for each function it appears in.)
../main.c:735: warning: unused variable 'uilen'
../main.c: In function 'main':
../main.c:764: warning: integer overflow in expression
../main.c:764: warning: integer overflow in expression
../main.c:801: warning: implicit declaration of function 'sprintf'
../main.c:801: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:801: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c:801: warning: too few arguments for format
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'usbSend':
../main.c:736: error: 'uiLen' undeclared (first use in this function)
../main.c:736: error: (Each undeclared identifier is reported only once
../main.c:736: error: for each function it appears in.)
../main.c:735: warning: unused variable 'uilen'
../main.c: In function 'main':
../main.c:764: warning: integer overflow in expression
../main.c:764: warning: integer overflow in expression
../main.c:801: warning: implicit declaration of function 'sprintf'
../main.c:801: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:801: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c:801: warning: too few arguments for format
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:764: warning: integer overflow in expression
../main.c:764: warning: integer overflow in expression
../main.c:801: warning: implicit declaration of function 'sprintf'
../main.c:801: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:801: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c:801: warning: too few arguments for format
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5120 bytes (62.5% Full)
(.text + .data + .bootloader)

Data:        269 bytes (26.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (5120 bytes):

Writing | ################################################## | 100% 3.54s

avrdude: 5120 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 5120 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.62s

avrdude: verifying ...
avrdude: 5120 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0xff:
 
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:764: warning: integer overflow in expression
../main.c:764: warning: integer overflow in expression
../main.c:801: warning: implicit declaration of function 'sprintf'
../main.c:801: warning: incompatible implicit declaration of built-in function 'sprintf'
../main.c:801: warning: pointer targets in passing argument 1 of 'sprintf' differ in signedness
../main.c:801: warning: too few arguments for format
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    5120 bytes (62.5% Full)
(.text + .data + .bootloader)

Data:        269 bytes (26.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'report_interrupt':
../main.c:758: error: 'INTR_MIN' undeclared (first use in this function)
../main.c:758: error: (Each undeclared identifier is reported only once
../main.c:758: error: for each function it appears in.)
../main.c:758: error: 'INTR_MAX' undeclared (first use in this function)
../main.c:760: error: 'intr_flag' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:781: warning: integer overflow in expression
../main.c:781: warning: integer overflow in expression
../main.c:805: warning: unused variable 'x'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'report_interrupt':
../main.c:760: error: 'intr_flag' undeclared (first use in this function)
../main.c:760: error: (Each undeclared identifier is reported only once
../main.c:760: error: for each function it appears in.)
../main.c: In function 'main':
../main.c:781: warning: integer overflow in expression
../main.c:781: warning: integer overflow in expression
../main.c:805: warning: unused variable 'x'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:807: warning: integer overflow in expression
../main.c:807: warning: integer overflow in expression
../main.c:831: warning: unused variable 'x'
../main.c: At top level:
../main.c:727: warning: 'tos' defined but not used
../main.c:727: warning: 'val' defined but not used
../main.c:727: warning: 'val2' defined but not used
../main.c:728: warning: 'rcnt' defined but not used
../main.c:729: warning: 'rbuf' defined but not used
../main.c:739: warning: 'h2u' defined but not used
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4370 bytes (53.3% Full)
(.text + .data + .bootloader)

Data:        414 bytes (40.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (4370 bytes):

Writing | ################################################## | 100% 3.05s

avrdude: 4370 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 4370 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.24s

avrdude: verifying ...
avrdude: 4370 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
Finished building: avrdudedummy
 
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'usbFunctionWriteOut':
../main.c:585: warning: implicit declaration of function 'report_interrupt'
../main.c: At top level:
../main.c:785: warning: conflicting types for 'report_interrupt'
../main.c:785: error: static declaration of 'report_interrupt' follows non-static declaration
../main.c:585: error: previous implicit declaration of 'report_interrupt' was here
../main.c: In function 'main':
../main.c:812: warning: integer overflow in expression
../main.c:812: warning: integer overflow in expression
../main.c:836: warning: unused variable 'x'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:814: warning: integer overflow in expression
../main.c:814: warning: integer overflow in expression
../main.c:838: warning: unused variable 'x'
../main.c: At top level:
../main.c:734: warning: 'tos' defined but not used
../main.c:734: warning: 'val' defined but not used
../main.c:734: warning: 'val2' defined but not used
../main.c:735: warning: 'rcnt' defined but not used
../main.c:736: warning: 'rbuf' defined but not used
../main.c:746: warning: 'h2u' defined but not used
Finished building: ../main.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    4354 bytes (53.1% Full)
(.text + .data + .bootloader)

Data:        414 bytes (40.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (4354 bytes):

Writing | ################################################## | 100% 3.03s

avrdude: 4354 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 4354 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 2.23s

avrdude: verifying ...
avrdude: 4354 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
Finished building: avrdudedummy
 
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:52: error: 'USBATTR_BUSPOWER' undeclared here (not in a function)
make: *** [main2.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:53: error: 'USBATTR_BUSPOWER' undeclared here (not in a function)
make: *** [main2.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:53: error: 'USBATTR_BUSPOWER' undeclared here (not in a function)
make: *** [main2.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:54: error: 'USBATTR_BUSPOWER' undeclared here (not in a function)
make: *** [main2.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:54: error: 'USBATTR_BUSPOWER' undeclared here (not in a function)
make: *** [main2.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3514 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3514 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3514 bytes):

Writing | ################################################## | 100% 2.43s

avrdude: 3514 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3514 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.80s

avrdude: verifying ...
avrdude: 3514 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0xff:
 
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3514 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3514 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3514 bytes):

Writing | ################################################## | 100% 2.42s

avrdude: 3514 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3514 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.80s

avrdude: verifying ...
avrdude: 3514 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
Finished building: avrdudedummy
 
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3544 bytes (43.3% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3544 bytes (43.3% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3544 bytes):

Writing | ################################################## | 100% 2.46s

avrdude: 3544 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3544 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3544 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
 
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3544 bytes (43.3% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3544 bytes):

Writing | ################################################## | 100% 2.47s

avrdude: 3544 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3544 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3544 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
 
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:403: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3330 bytes (40.6% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3330 bytes):

Writing | ################################################## | 100% 2.33s

avrdude: 3330 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3330 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.71s

avrdude: verifying ...
avrdude: 3330 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
Finished building: avrdudedummy
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:402: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3224 bytes (39.4% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3224 bytes):

Writing | ################################################## | 100% 2.26s

avrdude: 3224 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3224 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.65s

avrdude: verifying ...
avrdude: 3224 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3432 bytes (41.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3432 bytes):

Writing | ################################################## | 100% 2.39s

avrdude: 3432 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3432 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.76s

avrdude: verifying ...
avrdude: 3432 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
 
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3516 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3516 bytes):

Writing | ################################################## | 100% 2.45s

avrdude: 3516 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3516 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.81s

avrdude: verifying ...
avrdude: 3516 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
Finished building: avrdudedummy
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:
 

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3544 bytes (43.3% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3544 bytes):

Writing | ################################################## | 100% 2.46s

avrdude: 3544 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3544 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.81s

avrdude: verifying ...
avrdude: 3544 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
Finished building: avrdudedummy
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
 
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3552 bytes (43.4% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3552 bytes):

Writing | ################################################## | 100% 2.47s

avrdude: 3552 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3552 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3552 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:
Finished building: avrdudedummy

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
 
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3516 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3516 bytes):

Writing | ################################################## | 100% 2.46s

avrdude: 3516 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3516 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3516 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
Finished building: avrdudedummy
 
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3544 bytes (43.3% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3544 bytes):

Writing | ################################################## | 100% 2.48s

avrdude: 3544 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3544 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.81s

avrdude: verifying ...
avrdude: 3544 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
Finished building: avrdudedummy
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
 
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:402: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3330 bytes (40.6% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3330 bytes):

Writing | ################################################## | 100% 2.32s

avrdude: 3330 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3330 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.70s

avrdude: verifying ...
avrdude: 3330 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Finished building: avrdudedummy
 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:402: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3162 bytes (38.6% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3162 bytes):

Writing | ################################################## | 100% 2.21s

avrdude: 3162 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3162 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.61s

avrdude: verifying ...
avrdude: 3162 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
 
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:204: warning: 'tbuf' defined but not used
../main2.c:402: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3058 bytes (37.3% Full)
(.text + .data + .bootloader)

Data:        106 bytes (10.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3058 bytes):

Writing | ################################################## | 100% 2.13s

avrdude: 3058 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3058 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.57s

avrdude: verifying ...
avrdude: 3058 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:402: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3150 bytes (38.5% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3150 bytes):

Writing | ################################################## | 100% 2.20s

avrdude: 3150 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3150 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.61s

avrdude: verifying ...
avrdude: 3150 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c:402: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3318 bytes (40.5% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3318 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3318 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3318 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.70s

avrdude: verifying ...
avrdude: 3318 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
 
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3532 bytes (43.1% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3532 bytes):

Writing | ################################################## | 100% 2.47s

avrdude: 3532 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3532 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.81s

avrdude: verifying ...
avrdude: 3532 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
Finished building: avrdudedummy
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c: In function 'usbFunctionWriteOut':
../main2.c:254: warning: unused variable 'ptr'
../main2.c: At top level:
../main2.c:405: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3310 bytes (40.4% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3310 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3310 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3310 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.69s

avrdude: verifying ...
avrdude: 3310 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
 
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c: In function 'usbFunctionWriteOut':
../main2.c:253: warning: unused variable 'ptr'
../main2.c: At top level:
../main2.c:404: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
../usbdrvasm.S:393:9: error: #error "USB_CFG_CLOCK_KHZ is not one of the supported non-crc-rates!"
make: *** [usbdrvasm.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c: In function 'usbFunctionWriteOut':
../main2.c:253: warning: unused variable 'ptr'
../main2.c: At top level:
../main2.c:404: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3310 bytes (40.4% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3310 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3310 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3310 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.69s

avrdude: verifying ...
avrdude: 3310 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Clean-only build of configuration Release for project rfm12-usb-receiver ****

make clean 
rm -rf  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o  ./main.d ./main2.d ./oddebug.d ./usbdrv.d  rfm12-tiny2313.eep  rfm12-tiny2313.hex  rfm12-tiny2313.lss  avrdudedummy  sizedummy  ./usbdrvasm.d  rfm12-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c: In function 'usbFunctionWriteOut':
../main2.c:253: warning: unused variable 'ptr'
../main2.c: At top level:
../main2.c:404: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3310 bytes (40.4% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xde:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3310 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3310 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3310 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.70s

avrdude: verifying ...
avrdude: 3310 bytes of flash verified
avrdude: reading input file "0xde"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xde:
avrdude: load data lfuse data from input file 0xde:
avrdude: input file 0xde contains 1 bytes
avrdude: reading on-chip lfuse data:
Finished building: avrdudedummy

Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c: In function 'usbFunctionWriteOut':
../main2.c:253: warning: unused variable 'ptr'
../main2.c: At top level:
../main2.c:404: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3322 bytes (40.6% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xde:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3322 bytes):

Writing | ################################################## | 100% 2.32s

avrdude: 3322 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3322 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.70s

avrdude: verifying ...
avrdude: 3322 bytes of flash verified
avrdude: reading input file "0xde"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0xde:
 
avrdude: load data lfuse data from input file 0xde:
avrdude: input file 0xde contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
../main2.c: In function 'usbFunctionWriteOut':
../main2.c:252: warning: unused variable 'ptr'
../main2.c: At top level:
../main2.c:403: warning: 'report_interrupt' defined but not used
Finished building: ../main2.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3322 bytes (40.6% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xde:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3322 bytes):

Writing | ################################################## | 100% 2.32s

avrdude: 3322 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3322 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.70s

avrdude: verifying ...
avrdude: 3322 bytes of flash verified
avrdude: reading input file "0xde"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xde:
avrdude: load data lfuse data from input file 0xde:
avrdude: input file 0xde contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3518 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xde:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3518 bytes):

Writing | ################################################## | 100% 2.46s

avrdude: 3518 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3518 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.80s

avrdude: verifying ...
avrdude: 3518 bytes of flash verified
avrdude: reading input file "0xde"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xde:
Finished building: avrdudedummy
avrdude: load data lfuse data from input file 0xde:
 
avrdude: input file 0xde contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Clean-only build of configuration Release for project rfm12-usb-receiver ****

make clean 
rm -rf  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o  ./main.d ./main2.d ./oddebug.d ./usbdrv.d  rfm12-tiny2313.eep  rfm12-tiny2313.hex  rfm12-tiny2313.lss  avrdudedummy  sizedummy  ./usbdrvasm.d  rfm12-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../main2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main2.d" -MT"main2.d" -c -o "main2.o" "../main2.c"
Finished building: ../main2.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: rfm12-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,rfm12-tiny2313.map -mmcu=atmega8 -o "rfm12-tiny2313.elf"  ./main.o ./main2.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: rfm12-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S rfm12-tiny2313.elf  >"rfm12-tiny2313.lss"
Finished building: rfm12-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.hex"
Finished building: rfm12-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex rfm12-tiny2313.elf  "rfm12-tiny2313.eep"
Finished building: rfm12-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3518 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xde:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3518 bytes):

Writing | ################################################## | 100% 2.45s

avrdude: 3518 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3518 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.80s

avrdude: verifying ...
avrdude: 3518 bytes of flash verified
avrdude: reading input file "0xde"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xde:
avrdude: load data lfuse data from input file 0xde:
avrdude: input file 0xde contains 1 bytes
Finished building: avrdudedummy
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-usb-receiver ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 rfm12-tiny2313.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3518 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -F -u -Uflash:w:rfm12-tiny2313.hex:a -Ulfuse:w:0xde:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "rfm12-tiny2313.hex"
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (3518 bytes):

Writing | ################################################## | 100% 2.45s

avrdude: 3518 bytes of flash written
avrdude: verifying flash memory against rfm12-tiny2313.hex:
avrdude: load data flash data from input file rfm12-tiny2313.hex:
avrdude: input file rfm12-tiny2313.hex auto detected as Intel Hex
avrdude: input file rfm12-tiny2313.hex contains 3518 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.80s

avrdude: verifying ...
avrdude: 3518 bytes of flash verified
avrdude: reading input file "0xde"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0xde:
avrdude: load data lfuse data from input file 0xde:
avrdude: input file 0xde contains 1 bytes
 
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
../usbdrvasm.S:303:9: error: #error "USB_CFG_CLOCK_KHZ is not one of the supported non-crc-rates!"
make: *** [usbdrvasm.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
In file included from ../usbdrvasm.S:291:
../usbdrvasm12.inc:266:25: error: asmcommon.inc: No such file or directory
make: *** [usbdrvasm.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3514 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Clean-only build of configuration Release for project usb-cdc ****

make clean 
rm -rf  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o  ./main.d ./oddebug.d ./usbdrv.d  usb-cdc.eep  usb-cdc.hex  usb-cdc.lss  ./usbdrvasm.d  ./usbdrvasm.d  sizedummy  usb-cdc.elf
 

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3514 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -Uflash:w:usb-cdc.hex:a

avrdude: no programmer has been specified on the command line or the config file
         Specify a programmer using the -c option and try again

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project usb-cdc ****

make clean 
rm -rf  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o  ./main.d ./oddebug.d ./usbdrv.d  usb-cdc.eep  usb-cdc.hex  usb-cdc.lss  ./usbdrvasm.d  ./usbdrvasm.d  avrdudedummy  sizedummy  usb-cdc.elf
 

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3514 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (3514 bytes):

Writing | ################################################## | 100% 2.50s

avrdude: 3514 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 3514 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.88s

avrdude: verifying ...
avrdude: 3514 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
Finished building: avrdudedummy
avrdude: input file 0xdf contains 1 bytes
 
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Clean-only build of configuration Release for project usb-cdc ****

make clean 
rm -rf  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o  ./main.d ./oddebug.d ./usbdrv.d  usb-cdc.eep  usb-cdc.hex  usb-cdc.lss  ./usbdrvasm.d  ./usbdrvasm.d  avrdudedummy  sizedummy  usb-cdc.elf
 

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3518 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (3518 bytes):

Writing | ################################################## | 100% 2.49s

avrdude: 3518 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 3518 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.89s

avrdude: verifying ...
avrdude: 3518 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
 
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3518 bytes (42.9% Full)
(.text + .data + .bootloader)

Data:        362 bytes (35.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (3518 bytes):

Writing | ################################################## | 100% 2.48s

avrdude: 3518 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 3518 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.89s

avrdude: verifying ...
avrdude: 3518 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
 
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Clean-only build of configuration Release for project usb-cdc ****

make clean 
rm -rf  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o  ./main.d ./oddebug.d ./usbdrv.d  usb-cdc.eep  usb-cdc.hex  usb-cdc.lss  ./usbdrvasm.d  ./usbdrvasm.d  avrdudedummy  sizedummy  usb-cdc.elf
 

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
../usbdrvasm.S:303:9: error: #error "USB_CFG_CLOCK_KHZ is not one of the supported non-crc-rates!"
make: *** [usbdrvasm.o] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project usb-cdc ****

make clean 
rm -rf  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o  ./main.d ./oddebug.d ./usbdrv.d  usb-cdc.eep  usb-cdc.hex  usb-cdc.lss  ./usbdrvasm.d  ./usbdrvasm.d  avrdudedummy  sizedummy  usb-cdc.elf
 

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=attiny2313 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
../usbdrvasm.S:303:9: error: #error "USB_CFG_CLOCK_KHZ is not one of the supported non-crc-rates!"
make: *** [usbdrvasm.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=attiny2313 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=attiny2313 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 usb-cdc.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2050 bytes (100.1% Full)
(.text + .data + .bootloader)

Data:         81 bytes (63.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: ERROR: address 0x0802 out of range at line 129 of usb-cdc.hex
avrdude: write to file 'usb-cdc.hex' failed

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=attiny2313 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 usb-cdc.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2044 bytes (99.8% Full)
(.text + .data + .bootloader)

Data:         81 bytes (63.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (2044 bytes):

Writing | ################################################## | 100% 1.56s

avrdude: 2044 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 2044 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.04s

avrdude: verifying ...
avrdude: 2044 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy
 

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=attiny2313 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=attiny2313 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 usb-cdc.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1874 bytes (91.5% Full)
(.text + .data + .bootloader)

Data:        113 bytes (88.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project usb-cdc ****

make clean 
rm -rf  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o  ./main.d ./oddebug.d ./receiver.d ./usbdrv.d  usb-cdc.eep  usb-cdc.hex  usb-cdc.lss  ./usbdrvasm.d  ./usbdrvasm.d  avrdudedummy  sizedummy  usb-cdc.elf
 

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
Finished building: ../receiver.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1878 bytes (22.9% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1878 bytes (22.9% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project usb-cdc ****

make clean 
rm -rf  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o  ./main.d ./oddebug.d ./receiver.d ./usbdrv.d  usb-cdc.eep  usb-cdc.hex  usb-cdc.lss  ./usbdrvasm.d  ./usbdrvasm.d  avrdudedummy  sizedummy  usb-cdc.elf
 

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../oddebug.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"oddebug.d" -MT"oddebug.d" -c -o "oddebug.o" "../oddebug.c"
Finished building: ../oddebug.c
 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
Finished building: ../receiver.c
 
Building file: ../usbdrv.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv.d" -MT"usbdrv.d" -c -o "usbdrv.o" "../usbdrv.c"
Finished building: ../usbdrv.c
 
Building file: ../usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=atmega8 -MMD -MP -MF"usbdrvasm.d" -MT"usbdrvasm.d" -c -o "usbdrvasm.o" "../usbdrvasm.S"
Finished building: ../usbdrvasm.S
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1878 bytes (22.9% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1878 bytes (22.9% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1878 bytes):

Writing | ################################################## | 100% 1.32s

avrdude: 1878 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1878 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.01s

avrdude: verifying ...
avrdude: 1878 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:93: warning: unused variable 'crc'
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1840 bytes (22.5% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1840 bytes):

Writing | ################################################## | 100% 1.30s

avrdude: 1840 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1840 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.99s

avrdude: verifying ...
avrdude: 1840 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
Finished building: avrdudedummy
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.

 

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:93: warning: unused variable 'crc'
../receiver.c: In function 'main':
../receiver.c:212: warning: pointer targets in passing argument 1 of 'fifoWrite' differ in signedness
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2126 bytes (26.0% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (2126 bytes):

Writing | ################################################## | 100% 1.50s

avrdude: 2126 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 2126 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.14s

avrdude: verifying ...
avrdude: 2126 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
Finished building: avrdudedummy
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:
 

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:93: warning: unused variable 'crc'
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1916 bytes (23.4% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1916 bytes):

Writing | ################################################## | 100% 1.36s

avrdude: 1916 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1916 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.03s

avrdude: verifying ...
avrdude: 1916 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
Finished building: avrdudedummy
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:93: warning: unused variable 'crc'
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1924 bytes (23.5% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1924 bytes):

Writing | ################################################## | 100% 1.36s

avrdude: 1924 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1924 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.03s

avrdude: verifying ...
avrdude: 1924 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
Finished building: avrdudedummy
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:93: warning: unused variable 'crc'
../receiver.c: In function 'main':
../receiver.c:212: warning: pointer targets in passing argument 1 of 'fifoWrite' differ in signedness
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2134 bytes (26.0% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (2134 bytes):

Writing | ################################################## | 100% 1.52s

avrdude: 2134 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 2134 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.14s

avrdude: verifying ...
avrdude: 2134 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
 
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:93: warning: unused variable 'crc'
../receiver.c: In function 'main':
../receiver.c:212: warning: pointer targets in passing argument 1 of 'fifoWrite' differ in signedness
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2134 bytes (26.0% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (2134 bytes):

Writing | ################################################## | 100% 1.51s

avrdude: 2134 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 2134 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.14s

avrdude: verifying ...
avrdude: 2134 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:93: warning: unused variable 'crc'
../receiver.c: In function 'main':
../receiver.c:212: warning: pointer targets in passing argument 1 of 'fifoWrite' differ in signedness
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    2196 bytes (26.8% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (2196 bytes):

Writing | ################################################## | 100% 1.55s

avrdude: 2196 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 2196 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.19s

avrdude: verifying ...
avrdude: 2196 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:
Finished building: avrdudedummy

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:93: warning: unused variable 'crc'
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1840 bytes (22.5% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1840 bytes):

Writing | ################################################## | 100% 1.30s

avrdude: 1840 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1840 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.99s

avrdude: verifying ...
avrdude: 1840 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
Finished building: avrdudedummy
 
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:93: warning: unused variable 'crc'
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1842 bytes (22.5% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1842 bytes):

Writing | ################################################## | 100% 1.30s

avrdude: 1842 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1842 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.99s

avrdude: verifying ...
avrdude: 1842 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
Finished building: avrdudedummy
 
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:93: warning: unused variable 'crc'
../receiver.c: In function 'main':
../receiver.c:179: warning: implicit declaration of function '_delay_ms'
../receiver.c:166: warning: unused variable 'i'
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
./receiver.o: In function `main':
receiver.c:(.text+0xc6): undefined reference to `_delay_ms'
make: *** [usb-cdc.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:94: warning: unused variable 'crc'
../receiver.c: In function 'main':
../receiver.c:167: warning: unused variable 'i'
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1860 bytes (22.7% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1860 bytes):

Writing | ################################################## | 100% 1.31s

avrdude: 1860 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1860 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.00s

avrdude: verifying ...
avrdude: 1860 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1860 bytes (22.7% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1860 bytes):

Writing | ################################################## | 100% 1.32s

avrdude: 1860 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1860 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.00s

avrdude: verifying ...
avrdude: 1860 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
Finished building: avrdudedummy
 
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:94: warning: unused variable 'crc'
../receiver.c: In function 'main':
../receiver.c:158: warning: unused variable 'i'
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1820 bytes (22.2% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1820 bytes):

Writing | ################################################## | 100% 1.29s

avrdude: 1820 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1820 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.98s

avrdude: verifying ...
avrdude: 1820 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0xcf:
 
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1820 bytes (22.2% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1820 bytes):

Writing | ################################################## | 100% 1.28s

avrdude: 1820 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1820 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.98s

avrdude: verifying ...
avrdude: 1820 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
Finished building: avrdudedummy
 
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c: In function 'usartPoll':
../receiver.c:94: warning: unused variable 'crc'
../receiver.c: In function 'main':
../receiver.c:159: warning: unused variable 'i'
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1832 bytes (22.4% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1832 bytes):

Writing | ################################################## | 100% 1.30s

avrdude: 1832 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1832 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.98s

avrdude: verifying ...
avrdude: 1832 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
avrdude: input file 0xcf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy
 

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project usb-cdc ****

make all 
Building file: ../receiver.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=12000000UL -MMD -MP -MF"receiver.d" -MT"receiver.d" -c -o "receiver.o" "../receiver.c"
../receiver.c:80: warning: 'usartTimeout' defined but not used
Finished building: ../receiver.c
 
Building target: usb-cdc.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,usb-cdc.map,--cref -mmcu=atmega8 -o "usb-cdc.elf"  ./main.o ./oddebug.o ./receiver.o ./usbdrv.o ./usbdrvasm.o   
Finished building target: usb-cdc.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S usb-cdc.elf  >"usb-cdc.lss"
Finished building: usb-cdc.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex usb-cdc.elf  "usb-cdc.hex"
Finished building: usb-cdc.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex usb-cdc.elf  "usb-cdc.eep"
Finished building: usb-cdc.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 usb-cdc.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    1828 bytes (22.3% Full)
(.text + .data + .bootloader)

Data:        113 bytes (11.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:usb-cdc.hex:a -Ulfuse:w:0xcf:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "usb-cdc.hex"
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: writing flash (1828 bytes):

Writing | ################################################## | 100% 1.30s

avrdude: 1828 bytes of flash written
avrdude: verifying flash memory against usb-cdc.hex:
avrdude: load data flash data from input file usb-cdc.hex:
avrdude: input file usb-cdc.hex auto detected as Intel Hex
avrdude: input file usb-cdc.hex contains 1828 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.98s

avrdude: verifying ...
avrdude: 1828 bytes of flash verified
avrdude: reading input file "0xcf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcf:
avrdude: load data lfuse data from input file 0xcf:
Finished building: avrdudedummy
avrdude: input file 0xcf contains 1 bytes
 
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project rfm12-m8u2 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=16000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c:37:31: error: Arduino-usbserial.h: No such file or directory
../main.c:40: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'USBtoUSART_Buffer'
../main.c:43: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'USARTtoUSB_Buffer'
../main.c:48: error: expected specifier-qualifier-list before 'uint8_t'
../main.c:57: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'VirtualSerial_CDC_Interface'
../main.c: In function 'main':
../main.c:82: warning: implicit declaration of function 'SetupHardware'
../main.c:84: warning: implicit declaration of function 'RingBuffer_InitBuffer'
../main.c:84: error: 'USBtoUSART_Buffer' undeclared (first use in this function)
../main.c:84: error: (Each undeclared identifier is reported only once
../main.c:84: error: for each function it appears in.)
../main.c:85: error: 'USARTtoUSB_Buffer' undeclared (first use in this function)
../main.c:87: warning: implicit declaration of function 'sei'
../main.c:92: warning: implicit declaration of function 'RingBuffer_IsFull'
../main.c:94: error: 'int16_t' undeclared (first use in this function)
../main.c:94: error: expected ';' before 'ReceivedByte'
../main.c:97: error: 'ReceivedByte' undeclared (first use in this function)
../main.c:98: warning: implicit declaration of function 'RingBuffer_Insert'
../main.c:102: error: 'RingBuff_Count_t' undeclared (first use in this function)
../main.c:102: error: expected ';' before 'BufferCount'
../main.c:103: error: 'TIFR0' undeclared (first use in this function)
../main.c:103: error: 'TOV0' undeclared (first use in this function)
../main.c:103: error: 'BufferCount' undeclared (first use in this function)
../main.c:103: error: 'BUFFER_NEARLY_FULL' undeclared (first use in this function)
../main.c:108: warning: implicit declaration of function 'LEDs_TurnOnLEDs'
../main.c:108: error: 'LEDMASK_TX' undeclared (first use in this function)
../main.c:109: error: 'volatile struct <anonymous>' has no member named 'TxLEDPulse'
../main.c:109: error: 'TX_RX_LED_PULSE_MS' undeclared (first use in this function)
../main.c:114: warning: implicit declaration of function 'CDC_Device_SendByte'
../main.c:114: error: 'VirtualSerial_CDC_Interface' undeclared (first use in this function)
../main.c:114: warning: implicit declaration of function 'RingBuffer_Remove'
../main.c:117: error: 'volatile struct <anonymous>' has no member named 'TxLEDPulse'
../main.c:117: error: 'volatile struct <anonymous>' has no member named 'TxLEDPulse'
../main.c:118: warning: implicit declaration of function 'LEDs_TurnOffLEDs'
../main.c:121: error: 'volatile struct <anonymous>' has no member named 'RxLEDPulse'
../main.c:121: error: 'volatile struct <anonymous>' has no member named 'RxLEDPulse'
../main.c:122: error: 'LEDMASK_RX' undeclared (first use in this function)
../main.c:126: warning: implicit declaration of function 'RingBuffer_IsEmpty'
../main.c:127: warning: implicit declaration of function 'Serial_TxByte'
../main.c:130: error: 'volatile struct <anonymous>' has no member named 'RxLEDPulse'
../main.c:133: warning: implicit declaration of function 'CDC_Device_USBTask'
../main.c:134: warning: implicit declaration of function 'USB_USBTask'
../main.c: At top level:
../main.c:139: warning: conflicting types for 'SetupHardware'
../main.c:82: warning: previous implicit declaration of 'SetupHardware' was here
../main.c: In function 'SetupHardware':
../main.c:142: error: 'MCUSR' undeclared (first use in this function)
../main.c:142: error: 'WDRF' undeclared (first use in this function)
../main.c:143: warning: implicit declaration of function 'wdt_disable'
../main.c:146: warning: implicit declaration of function 'Serial_Init'
../main.c:146: error: 'false' undeclared (first use in this function)
../main.c:147: warning: implicit declaration of function 'LEDs_Init'
../main.c:148: warning: implicit declaration of function 'USB_Init'
../main.c:151: error: 'TCCR0B' undeclared (first use in this function)
../main.c:151: error: 'CS02' undeclared (first use in this function)
../main.c:154: error: 'AVR_RESET_LINE_PORT' undeclared (first use in this function)
../main.c:154: error: 'AVR_RESET_LINE_MASK' undeclared (first use in this function)
../main.c:155: error: 'AVR_RESET_LINE_DDR' undeclared (first use in this function)
../main.c: In function 'EVENT_USB_Device_ConfigurationChanged':
../main.c:161: warning: implicit declaration of function 'CDC_Device_ConfigureEndpoints'
../main.c:161: error: 'VirtualSerial_CDC_Interface' undeclared (first use in this function)
../main.c: In function 'EVENT_USB_Device_UnhandledControlRequest':
../main.c:167: warning: implicit declaration of function 'CDC_Device_ProcessControlRequest'
../main.c:167: error: 'VirtualSerial_CDC_Interface' undeclared (first use in this function)
../main.c: At top level:
../main.c:174: error: expected ')' before '*' token
../main.c:223: warning: return type defaults to 'int'
../main.c: In function 'ISR':
../main.c:223: warning: type of 'USART1_RX_vect' defaults to 'int'
../main.c:223: warning: type of 'ISR_BLOCK' defaults to 'int'
../main.c:224: error: 'uint8_t' undeclared (first use in this function)
../main.c:224: error: expected ';' before 'ReceivedByte'
../main.c:226: error: 'USB_DeviceState' undeclared (first use in this function)
../main.c:226: error: 'DEVICE_STATE_Configured' undeclared (first use in this function)
../main.c:227: error: 'USARTtoUSB_Buffer' undeclared (first use in this function)
../main.c:227: error: 'ReceivedByte' undeclared (first use in this function)
../main.c: At top level:
../main.c:234: error: expected ')' before '*' token
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-m8u2 ****

make all 
Building file: ../Arduino-usbserial.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=16000000UL -MMD -MP -MF"Arduino-usbserial.d" -MT"Arduino-usbserial.d" -c -o "Arduino-usbserial.o" "../Arduino-usbserial.c"
In file included from ../Arduino-usbserial.h:45,
                 from ../Arduino-usbserial.c:37:
../Descriptors.h:42:36: warning: LUFA/Drivers/USB/USB.h: No such file or directory
../Descriptors.h:43:42: warning: LUFA/Drivers/USB/Class/CDC.h: No such file or directory
In file included from ../Arduino-usbserial.h:45,
                 from ../Arduino-usbserial.c:37:
../Descriptors.h:72: error: expected specifier-qualifier-list before 'USB_Descriptor_Configuration_Header_t'
../Descriptors.h: In function 'CALLBACK_USB_GetDescriptor':
../Descriptors.h:86: error: expected declaration specifiers before 'ATTR_WARN_UNUSED_RESULT'
In file included from ../Arduino-usbserial.c:37:
../Arduino-usbserial.h:47:39: error: Lib/LightweightRingBuff.h: No such file or directory
../Arduino-usbserial.h:49:28: warning: LUFA/Version.h: No such file or directory
../Arduino-usbserial.h:50:39: warning: LUFA/Drivers/Board/LEDs.h: No such file or directory
../Arduino-usbserial.h:51:46: warning: LUFA/Drivers/Peripheral/Serial.h: No such file or directory
In file included from ../Arduino-usbserial.c:37:
../Arduino-usbserial.h:76: error: expected ')' before '*' token
../Arduino-usbserial.h:77: error: expected ')' before '*' token
../Arduino-usbserial.c:40: error: expected declaration specifiers before 'RingBuff_t'
../Arduino-usbserial.c:43: error: expected declaration specifiers before 'RingBuff_t'
../Arduino-usbserial.c:57: error: expected declaration specifiers before 'USB_ClassInfo_CDC_Device_t'
../Arduino-usbserial.c:75: error: expected declaration specifiers before ';' token
../Arduino-usbserial.c:81: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:140: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:160: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:166: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:174: error: expected ')' before '*' token
../Arduino-usbserial.c:222: warning: 'signal' attribute only applies to functions
../Arduino-usbserial.c:222: warning: 'used' attribute ignored
../Arduino-usbserial.c:222: warning: 'externally_visible' attribute ignored
../Arduino-usbserial.c:223: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:234: error: expected ')' before '*' token
../Arduino-usbserial.c:242: error: old-style parameter declarations in prototyped function definition
../Arduino-usbserial.c:242: error: expected '{' at end of input
../Arduino-usbserial.c:242: warning: no return statement in function returning non-void
make: *** [Arduino-usbserial.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-m8u2 ****

make all 
Building file: ../Arduino-usbserial.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=16000000UL -MMD -MP -MF"Arduino-usbserial.d" -MT"Arduino-usbserial.d" -c -o "Arduino-usbserial.o" "../Arduino-usbserial.c"
In file included from ../Arduino-usbserial.h:45,
                 from ../Arduino-usbserial.c:37:
../Descriptors.h:42:36: warning: LUFA/Drivers/USB/USB.h: No such file or directory
../Descriptors.h:43:42: warning: LUFA/Drivers/USB/Class/CDC.h: No such file or directory
In file included from ../Arduino-usbserial.h:45,
                 from ../Arduino-usbserial.c:37:
../Descriptors.h:72: error: expected specifier-qualifier-list before 'USB_Descriptor_Configuration_Header_t'
../Descriptors.h: In function 'CALLBACK_USB_GetDescriptor':
../Descriptors.h:86: error: expected declaration specifiers before 'ATTR_WARN_UNUSED_RESULT'
In file included from ../Lib/LightweightRingBuff.h:40,
                 from ../Arduino-usbserial.h:47,
                 from ../Arduino-usbserial.c:37:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/atomic.h:43: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/atomic.h:49: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/atomic.h:55: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/atomic.h:62: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/atomic.h:69: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
In file included from ../Arduino-usbserial.h:47,
                 from ../Arduino-usbserial.c:37:
../Lib/LightweightRingBuff.h:76: error: storage class specified for parameter 'RingBuff_t'
../Lib/LightweightRingBuff.h:85: error: expected ')' before '*' token
../Lib/LightweightRingBuff.h:107: error: expected ')' before '*' token
../Lib/LightweightRingBuff.h:127: error: expected ')' before '*' token
../Lib/LightweightRingBuff.h:144: error: expected ')' before '*' token
../Lib/LightweightRingBuff.h:158: error: expected ')' before '*' token
../Lib/LightweightRingBuff.h:182: error: expected ')' before '*' token
In file included from ../Arduino-usbserial.c:37:
../Arduino-usbserial.h:49:28: warning: LUFA/Version.h: No such file or directory
../Arduino-usbserial.h:50:39: warning: LUFA/Drivers/Board/LEDs.h: No such file or directory
../Arduino-usbserial.h:51:46: warning: LUFA/Drivers/Peripheral/Serial.h: No such file or directory
In file included from ../Arduino-usbserial.c:37:
../Arduino-usbserial.h:76: error: expected ')' before '*' token
../Arduino-usbserial.h:77: error: expected ')' before '*' token
../Arduino-usbserial.c:40: error: expected declaration specifiers before 'RingBuff_t'
../Arduino-usbserial.c:43: error: expected declaration specifiers before 'RingBuff_t'
../Arduino-usbserial.c:57: error: expected declaration specifiers before 'USB_ClassInfo_CDC_Device_t'
../Arduino-usbserial.c:75: error: expected declaration specifiers before ';' token
../Arduino-usbserial.c:81: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:140: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:160: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:166: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:174: error: expected ')' before '*' token
../Arduino-usbserial.c:222: warning: 'signal' attribute only applies to functions
../Arduino-usbserial.c:222: warning: 'used' attribute ignored
../Arduino-usbserial.c:222: warning: 'externally_visible' attribute ignored
../Arduino-usbserial.c:223: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:234: error: expected ')' before '*' token
../Arduino-usbserial.c:242: error: old-style parameter declarations in prototyped function definition
../Arduino-usbserial.c:242: error: expected '{' at end of input
../Arduino-usbserial.c:242: warning: no return statement in function returning non-void
make: *** [Arduino-usbserial.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project rfm12-m8u2 ****

make all 
Building file: ../Arduino-usbserial.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=16000000UL -MMD -MP -MF"Arduino-usbserial.d" -MT"Arduino-usbserial.d" -c -o "Arduino-usbserial.o" "../Arduino-usbserial.c"
In file included from ../Arduino-usbserial.h:45,
                 from ../Arduino-usbserial.c:37:
../Descriptors.h:42:36: warning: LUFA/Drivers/USB/USB.h: No such file or directory
../Descriptors.h:43:42: warning: LUFA/Drivers/USB/Class/CDC.h: No such file or directory
In file included from ../Arduino-usbserial.h:45,
                 from ../Arduino-usbserial.c:37:
../Descriptors.h:72: error: expected specifier-qualifier-list before 'USB_Descriptor_Configuration_Header_t'
../Descriptors.h: In function 'CALLBACK_USB_GetDescriptor':
../Descriptors.h:86: error: expected declaration specifiers before 'ATTR_WARN_UNUSED_RESULT'
In file included from ../Lib/LightweightRingBuff.h:40,
                 from ../Arduino-usbserial.h:47,
                 from ../Arduino-usbserial.c:37:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/atomic.h:43: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/atomic.h:49: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/atomic.h:55: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/atomic.h:62: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/atomic.h:69: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
In file included from ../Arduino-usbserial.h:47,
                 from ../Arduino-usbserial.c:37:
../Lib/LightweightRingBuff.h:76: error: storage class specified for parameter 'RingBuff_t'
../Lib/LightweightRingBuff.h:85: error: expected ')' before '*' token
../Lib/LightweightRingBuff.h:107: error: expected ')' before '*' token
../Lib/LightweightRingBuff.h:127: error: expected ')' before '*' token
../Lib/LightweightRingBuff.h:144: error: expected ')' before '*' token
../Lib/LightweightRingBuff.h:158: error: expected ')' before '*' token
../Lib/LightweightRingBuff.h:182: error: expected ')' before '*' token
In file included from ../Arduino-usbserial.c:37:
../Arduino-usbserial.h:49:28: warning: LUFA/Version.h: No such file or directory
../Arduino-usbserial.h:50:39: warning: LUFA/Drivers/Board/LEDs.h: No such file or directory
../Arduino-usbserial.h:51:46: warning: LUFA/Drivers/Peripheral/Serial.h: No such file or directory
In file included from ../Arduino-usbserial.c:37:
../Arduino-usbserial.h:76: error: expected ')' before '*' token
../Arduino-usbserial.h:77: error: expected ')' before '*' token
../Arduino-usbserial.c:40: error: expected declaration specifiers before 'RingBuff_t'
../Arduino-usbserial.c:43: error: expected declaration specifiers before 'RingBuff_t'
../Arduino-usbserial.c:57: error: expected declaration specifiers before 'USB_ClassInfo_CDC_Device_t'
../Arduino-usbserial.c:75: error: expected declaration specifiers before ';' token
../Arduino-usbserial.c:81: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:140: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:160: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:166: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:174: error: expected ')' before '*' token
../Arduino-usbserial.c:222: warning: 'signal' attribute only applies to functions
../Arduino-usbserial.c:222: warning: 'used' attribute ignored
../Arduino-usbserial.c:222: warning: 'externally_visible' attribute ignored
../Arduino-usbserial.c:223: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
../Arduino-usbserial.c:234: error: expected ')' before '*' token
../Arduino-usbserial.c:242: error: old-style parameter declarations in prototyped function definition
../Arduino-usbserial.c:242: error: expected '{' at end of input
../Arduino-usbserial.c:242: warning: no return statement in function returning non-void
make: *** [Arduino-usbserial.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega8 -DF_CPU=32768UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: MiniWordClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,MiniWordClock.map -mmcu=atmega8 -o "MiniWordClock.elf"  ./main.o ./uart.o   
Finished building target: MiniWordClock.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S MiniWordClock.elf  >"MiniWordClock.lss"
Finished building: MiniWordClock.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex MiniWordClock.elf  "MiniWordClock.hex"
Finished building: MiniWordClock.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex MiniWordClock.elf  "MiniWordClock.eep"
Finished building: MiniWordClock.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3700 bytes (45.2% Full)
(.text + .data + .bootloader)

Data:         81 bytes (7.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project MiniWordClock ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega8 MiniWordClock.elf
AVR Memory Usage
----------------
Device: atmega8

Program:    3700 bytes (45.2% Full)
(.text + .data + .bootloader)

Data:         81 bytes (7.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pm8 -cusbasp -u -Uflash:w:MiniWordClock.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xc9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9307
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "MiniWordClock.hex"
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: writing flash (3700 bytes):

Writing | ################################################## | 100% 2.57s

avrdude: 3700 bytes of flash written
avrdude: verifying flash memory against MiniWordClock.hex:
avrdude: load data flash data from input file MiniWordClock.hex:
avrdude: input file MiniWordClock.hex auto detected as Intel Hex
avrdude: input file MiniWordClock.hex contains 3700 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.90s

avrdude: verifying ...
avrdude: 3700 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):
Finished building: avrdudedummy

Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xc9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xc9:
avrdude: load data hfuse data from input file 0xc9:
avrdude: input file 0xc9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Debug for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
In file included from ../bma.c:11:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
Finished building: ../bma.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.h:20,
                 from ../main.c:12:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/avr/signal.h:36:2: warning: #warning "This header file is obsolete.  Use <avr/interrupt.h>."
In file included from ../main.h:23,
                 from ../main.c:12:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/util/delay.h:94:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
Finished building: ../main.c
../main.c:151:1: warning: "c_State_Idle" redefined
../main.c:147:1: warning: this is the location of the previous definition
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/bin/ld: bma020-tiny2313.elf section .text will not fit in region text
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/bin/ld: region text overflowed by 1262 bytes
make: *** [bma020-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Clean-only build of configuration Release for project bma020-tiny2313 ****

make clean 
rm -rf  ./bma.o ./main.o ./rf12.o  ./bma.d ./main.d ./rf12.d  bma020-tiny2313.eep  bma020-tiny2313.hex  bma020-tiny2313.lss  sizedummy  bma020-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
Finished building: ../bma.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.h:20,
                 from ../main.c:12:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/avr/signal.h:36:2: warning: #warning "This header file is obsolete.  Use <avr/interrupt.h>."
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2296 bytes (112.1% Full)
(.text + .data + .bootloader)

Data:         26 bytes (20.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
Finished building: ../bma.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.h:20,
                 from ../main.c:12:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/avr/signal.h:36:2: warning: #warning "This header file is obsolete.  Use <avr/interrupt.h>."
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2272 bytes (110.9% Full)
(.text + .data + .bootloader)

Data:         26 bytes (20.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.h:20,
                 from ../main.c:12:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/avr/signal.h:36:2: warning: #warning "This header file is obsolete.  Use <avr/interrupt.h>."
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2270 bytes (110.8% Full)
(.text + .data + .bootloader)

Data:         26 bytes (20.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
In file included from ../main.h:20,
                 from ../main.c:12:
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/include/avr/signal.h:36:2: warning: #warning "This header file is obsolete.  Use <avr/interrupt.h>."
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2206 bytes (107.7% Full)
(.text + .data + .bootloader)

Data:         26 bytes (20.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2206 bytes (107.7% Full)
(.text + .data + .bootloader)

Data:         26 bytes (20.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2206 bytes (107.7% Full)
(.text + .data + .bootloader)

Data:         26 bytes (20.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
./rf12.o: In function `rf12_txdata':
rf12.c:(.text+0x1fa): undefined reference to `rf12_txdata_end'
make: *** [bma020-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2136 bytes (104.3% Full)
(.text + .data + .bootloader)

Data:         26 bytes (20.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
./rf12.o: In function `rf12_readytrans':
rf12.c:(.text+0x11c): undefined reference to `rf12_ready'
make: *** [bma020-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:102: error: too many arguments to function 'rf12_setfreq'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:102: error: too many arguments to function 'rf12_setfreq'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:102: error: too many arguments to function 'rf12_setfreq'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:102: error: too many arguments to function 'rf12_setfreq'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:102: error: too many arguments to function 'rf12_setfreq'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2186 bytes (106.7% Full)
(.text + .data + .bootloader)

Data:         26 bytes (20.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1446 bytes (70.6% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:53: error: 'x' undeclared (first use in this function)
../main.c:53: error: (Each undeclared identifier is reported only once
../main.c:53: error: for each function it appears in.)
../main.c:54: error: 'y' undeclared (first use in this function)
../main.c:55: error: 'z' undeclared (first use in this function)
../main.c: In function 'send':
../main.c:88: error: 'x' undeclared (first use in this function)
../main.c:89: error: 'y' undeclared (first use in this function)
../main.c:90: error: 'z' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:188: error: too few arguments to function 'send'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:92: error: 'x' undeclared (first use in this function)
../main.c:92: error: (Each undeclared identifier is reported only once
../main.c:92: error: for each function it appears in.)
../main.c:93: error: 'y' undeclared (first use in this function)
../main.c:94: error: 'z' undeclared (first use in this function)
../main.c: In function 'main':
../main.c:192: error: too few arguments to function 'send'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:192: error: too few arguments to function 'send'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2288 bytes (111.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2104 bytes (102.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1996 bytes (97.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1620 bytes (79.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1584 bytes (77.3% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
Finished building: ../bma.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1620 bytes (79.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1628 bytes (79.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1628 bytes (79.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cstk500 -PCOM34 -b57600 -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: ser_open(): can't open device "COM34": No such file or directory

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1628 bytes (79.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: error: usbasp_transmit: Broken pipe
avrdude: error: wrong responds size
avrdude: erasing chip
avrdude: error: usbasp_transmit: Broken pipe
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: Broken pipe
avrdude: error: usbasp_transmit: Broken pipe
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: usbasp_transmit: Broken pipe
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: programm enable: target doesn't answer. 0 
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1628 bytes):

Writing | avrdude: error: usbasp_transmit: No such device or address
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong count at writing ffffffff
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
# | 100% 1.37s

avrdude: 1628 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1628 bytes
avrdude: reading on-chip flash data:

Reading | avrdude: error: usbasp_transmit: No such device or address
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong reading bytes ffffffff
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
#avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
avrdude: error: usbasp_transmit: No such device or address
avrdude: error: wrong responds size
# | 100% 2.22s

avrdude: verifying ...
avrdude: verification error, first mismatch at byte 0x0000
         0x12 != 0x00
avrdude: verification error; content mismatch
avrdude: error: usbasp_transmit: No such device or address

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1628 bytes (79.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1628 bytes (79.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1628 bytes (79.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1628 bytes (79.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1628 bytes (79.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1628 bytes (79.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xe4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1628 bytes):

Writing | ################################################## | 100% 1.29s

avrdude: 1628 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1628 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.86s

avrdude: verifying ...
avrdude: 1628 bytes of flash verified
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
Finished building: ../bma.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1610 bytes (78.6% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1610 bytes (78.6% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1610 bytes):

Writing | ################################################## | 100% 1.28s

avrdude: 1610 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1610 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1610 bytes of flash verified
avrdude: reading input file "0xec"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xec:
avrdude: load data lfuse data from input file 0xec:
avrdude: input file 0xec contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy
 

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1690 bytes (82.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1690 bytes (82.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1690 bytes):

Writing | ################################################## | 100% 1.33s

avrdude: 1690 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1690 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.89s

avrdude: verifying ...
avrdude: 1690 bytes of flash verified
avrdude: reading input file "0xec"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xec:
avrdude: load data lfuse data from input file 0xec:
avrdude: input file 0xec contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1686 bytes (82.3% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1686 bytes (82.3% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1686 bytes):

Writing | ################################################## | 100% 1.33s

avrdude: 1686 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1686 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.88s

avrdude: verifying ...
avrdude: 1686 bytes of flash verified
avrdude: reading input file "0xec"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xec:
avrdude: load data lfuse data from input file 0xec:
avrdude: input file 0xec contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1694 bytes (82.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1694 bytes (82.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1694 bytes):

Writing | ################################################## | 100% 1.35s

avrdude: 1694 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1694 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.88s

avrdude: verifying ...
avrdude: 1694 bytes of flash verified
avrdude: reading input file "0xec"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xec:
avrdude: load data lfuse data from input file 0xec:
Finished building: avrdudedummy
 
avrdude: input file 0xec contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1708 bytes (83.4% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1708 bytes (83.4% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1708 bytes (83.4% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1708 bytes):

Writing | ################################################## | 100% 1.35s

avrdude: 1708 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1708 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.89s

avrdude: verifying ...
avrdude: 1708 bytes of flash verified
avrdude: reading input file "0xec"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xec:
avrdude: load data lfuse data from input file 0xec:
avrdude: input file 0xec contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: verifying ...
 
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1636 bytes (79.9% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1636 bytes (79.9% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1636 bytes):

Writing | ################################################## | 100% 1.30s

avrdude: 1636 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1636 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.86s

avrdude: verifying ...
avrdude: 1636 bytes of flash verified
avrdude: reading input file "0xec"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xec:
avrdude: load data lfuse data from input file 0xec:
Finished building: avrdudedummy
avrdude: input file 0xec contains 1 bytes
avrdude: reading on-chip lfuse data:
 

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1636 bytes (79.9% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1636 bytes):

Writing | ################################################## | 100% 1.30s

avrdude: 1636 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1636 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1636 bytes of flash verified
avrdude: reading input file "0xec"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0xec:
 
avrdude: load data lfuse data from input file 0xec:
avrdude: input file 0xec contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1656 bytes (80.9% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1656 bytes):

Writing | ################################################## | 100% 1.31s

avrdude: 1656 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1656 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1656 bytes of flash verified
avrdude: reading input file "0xec"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xec:
avrdude: load data lfuse data from input file 0xec:
avrdude: input file 0xec contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1656 bytes (80.9% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1656 bytes):

Writing | ################################################## | 100% 1.33s

avrdude: 1656 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1656 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.88s

avrdude: verifying ...
avrdude: 1656 bytes of flash verified
avrdude: reading input file "0xec"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xec:
avrdude: load data lfuse data from input file 0xec:
avrdude: input file 0xec contains 1 bytes
Finished building: avrdudedummy
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
 

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1656 bytes (80.9% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1656 bytes):

Writing | ################################################## | 100% 1.30s

avrdude: 1656 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1656 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.86s

avrdude: verifying ...
avrdude: 1656 bytes of flash verified
avrdude: reading input file "0xec"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

avrdude: 1 bytes of lfuse written
 
avrdude: verifying lfuse memory against 0xec:
avrdude: load data lfuse data from input file 0xec:
avrdude: input file 0xec contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1656 bytes (80.9% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xec:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1656 bytes):

Writing | ################################################## | 100% 1.31s

avrdude: 1656 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1656 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.86s

avrdude: verifying ...
avrdude: 1656 bytes of flash verified
avrdude: reading input file "0xec"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xec:
Finished building: avrdudedummy
avrdude: load data lfuse data from input file 0xec:
avrdude: input file 0xec contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1656 bytes (80.9% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xfd:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1656 bytes):

Writing | ################################################## | 100% 1.31s

avrdude: 1656 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1656 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.86s

avrdude: verifying ...
avrdude: 1656 bytes of flash verified
avrdude: reading input file "0xfd"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xfd:
avrdude: load data lfuse data from input file 0xfd:
avrdude: input file 0xfd contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
Finished building: avrdudedummy
 
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1632 bytes (79.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xfd:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.28s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xfd"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xfd:
avrdude: load data lfuse data from input file 0xfd:
avrdude: input file 0xfd contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: verifying ...
 
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1632 bytes (79.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbd:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.29s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xbd"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbd:
avrdude: load data lfuse data from input file 0xbd:
avrdude: input file 0xbd contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1632 bytes (79.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbd:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
avrdude: AVR device initialized and ready to accept instructions
avrdude: Device signature = 0x000000
avrdude: Yikes!  Invalid device signature.
avrdude: Expected signature for ATtiny2313 is 1E 91 0A
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1632 bytes (79.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbd:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
avrdude: AVR device initialized and ready to accept instructions
avrdude: Device signature = 0x000000
avrdude: Yikes!  Invalid device signature.
avrdude: Expected signature for ATtiny2313 is 1E 91 0A
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1632 bytes (79.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbd:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: programm enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
avrdude: AVR device initialized and ready to accept instructions
avrdude: Device signature = 0x000000
avrdude: Yikes!  Invalid device signature.
avrdude: Expected signature for ATtiny2313 is 1E 91 0A
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1632 bytes (79.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbd:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.29s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.86s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xbd"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbd:
avrdude: load data lfuse data from input file 0xbd:
avrdude: input file 0xbd contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1632 bytes (79.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbd:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.27s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xbd"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbd:
avrdude: load data lfuse data from input file 0xbd:
avrdude: input file 0xbd contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1632 bytes (79.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.28s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xbf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbf:
avrdude: load data lfuse data from input file 0xbf:
avrdude: input file 0xbf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
 
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Clean-only build of configuration Release for project bma020-tiny2313 ****

make clean 
rm -rf  ./bma.o ./main.o ./rf12.o  ./bma.d ./main.d ./rf12.d  bma020-tiny2313.eep  bma020-tiny2313.hex  bma020-tiny2313.lss  avrdudedummy  sizedummy  bma020-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
Finished building: ../bma.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1632 bytes (79.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1632 bytes):

Writing | ################################################## | 100% 1.28s

avrdude: 1632 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1632 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.84s

avrdude: verifying ...
avrdude: 1632 bytes of flash verified
avrdude: reading input file "0xbf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbf:
avrdude: load data lfuse data from input file 0xbf:
Finished building: avrdudedummy
avrdude: input file 0xbf contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1668 bytes (81.4% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1668 bytes):

Writing | ################################################## | 100% 1.32s

avrdude: 1668 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1668 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.87s

avrdude: verifying ...
avrdude: 1668 bytes of flash verified
avrdude: reading input file "0xbf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbf:
avrdude: load data lfuse data from input file 0xbf:
avrdude: input file 0xbf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
Finished building: avrdudedummy
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1782 bytes (87.0% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1782 bytes):

Writing | ################################################## | 100% 1.39s

avrdude: 1782 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1782 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.92s

avrdude: verifying ...
avrdude: 1782 bytes of flash verified
avrdude: reading input file "0xbf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbf:
avrdude: load data lfuse data from input file 0xbf:
Finished building: avrdudedummy
 
avrdude: input file 0xbf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1764 bytes (86.1% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1764 bytes):

Writing | ################################################## | 100% 1.39s

avrdude: 1764 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1764 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.92s

avrdude: verifying ...
avrdude: 1764 bytes of flash verified
avrdude: reading input file "0xbf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
Finished building: avrdudedummy
avrdude: verifying lfuse memory against 0xbf:
avrdude: load data lfuse data from input file 0xbf:
avrdude: input file 0xbf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
 

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1812 bytes (88.5% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1812 bytes):

Writing | ################################################## | 100% 1.43s

avrdude: 1812 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1812 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.95s

avrdude: verifying ...
avrdude: 1812 bytes of flash verified
avrdude: reading input file "0xbf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbf:
Finished building: avrdudedummy
 
avrdude: load data lfuse data from input file 0xbf:
avrdude: input file 0xbf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:64: warning: implicit declaration of function 'TransmitByte'
../main.c: At top level:
../main.c:116: warning: conflicting types for 'TransmitByte'
../main.c:64: warning: previous implicit declaration of 'TransmitByte' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1858 bytes (90.7% Full)
(.text + .data + .bootloader)

Data:         14 bytes (10.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1858 bytes):

Writing | ################################################## | 100% 1.46s

avrdude: 1858 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1858 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.97s

avrdude: verifying ...
avrdude: 1858 bytes of flash verified
avrdude: reading input file "0xbf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbf:
avrdude: load data lfuse data from input file 0xbf:
avrdude: input file 0xbf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:64: warning: implicit declaration of function 'TransmitByte'
../main.c: At top level:
../main.c:116: warning: conflicting types for 'TransmitByte'
../main.c:64: warning: previous implicit declaration of 'TransmitByte' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1838 bytes (89.7% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1838 bytes):

Writing | ################################################## | 100% 1.44s

avrdude: 1838 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1838 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.96s

avrdude: verifying ...
avrdude: 1838 bytes of flash verified
avrdude: reading input file "0xbf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbf:
avrdude: load data lfuse data from input file 0xbf:
avrdude: input file 0xbf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:64: warning: implicit declaration of function 'TransmitByte'
../main.c: At top level:
../main.c:116: warning: conflicting types for 'TransmitByte'
../main.c:64: warning: previous implicit declaration of 'TransmitByte' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1838 bytes (89.7% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1838 bytes):

Writing | ################################################## | 100% 1.45s

avrdude: 1838 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1838 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.96s

avrdude: verifying ...
avrdude: 1838 bytes of flash verified
avrdude: reading input file "0xbf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbf:
avrdude: load data lfuse data from input file 0xbf:
avrdude: input file 0xbf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'send':
../main.c:64: warning: implicit declaration of function 'TransmitByte'
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
./main.o: In function `send':
main.c:(.text+0x92): undefined reference to `TransmitByte'
main.c:(.text+0xae): undefined reference to `TransmitByte'
main.c:(.text+0xbc): undefined reference to `TransmitByte'
make: *** [bma020-tiny2313.elf] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1610 bytes (78.6% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xbf:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1610 bytes):

Writing | ################################################## | 100% 1.27s

avrdude: 1610 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1610 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.84s

avrdude: verifying ...
avrdude: 1610 bytes of flash verified
avrdude: reading input file "0xbf"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xbf:
avrdude: load data lfuse data from input file 0xbf:
avrdude: input file 0xbf contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
 
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1610 bytes (78.6% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0x4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1610 bytes):

Writing | ################################################## | 100% 1.27s

avrdude: 1610 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1610 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.84s

avrdude: verifying ...
avrdude: 1610 bytes of flash verified
avrdude: reading input file "0x4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x4:
avrdude: load data lfuse data from input file 0x4:
avrdude: input file 0x4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=1000000UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
Finished building: ../bma.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:133: error: too many arguments to function 'BMA_uninit'
../main.c:157: error: too many arguments to function 'BMA_uninit'
make: *** [main.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1618 bytes (79.0% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0x4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1618 bytes):

Writing | ################################################## | 100% 1.26s

avrdude: 1618 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1618 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1618 bytes of flash verified
avrdude: reading input file "0x4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0x4:
avrdude: load data lfuse data from input file 0x4:
avrdude: input file 0x4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1908 bytes (93.2% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1908 bytes):

Writing | ################################################## | 100% 1.49s

avrdude: 1908 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1908 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.99s

avrdude: verifying ...
avrdude: 1908 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
Finished building: avrdudedummy
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1854 bytes (90.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1854 bytes):

Writing | ################################################## | 100% 1.45s

avrdude: 1854 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1854 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.97s

avrdude: verifying ...
avrdude: 1854 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1854 bytes (90.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1854 bytes):

Writing | ################################################## | 100% 1.46s

avrdude: 1854 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1854 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.96s

avrdude: verifying ...
avrdude: 1854 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:34: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:134: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:34: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1872 bytes (91.4% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1872 bytes):

Writing | ################################################## | 100% 1.48s

avrdude: 1872 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1872 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.97s

avrdude: verifying ...
avrdude: 1872 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Finished building: avrdudedummy
 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:34: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:136: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:34: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1928 bytes (94.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1928 bytes):

Writing | ################################################## | 100% 1.52s

avrdude: 1928 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1928 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.01s

avrdude: verifying ...
avrdude: 1928 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Finished building: avrdudedummy
 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Clean-only build of configuration Release for project bma020-tiny2313 ****

make clean 
rm -rf  ./bma.o ./main.o ./rf12.o  ./bma.d ./main.d ./rf12.d  bma020-tiny2313.eep  bma020-tiny2313.hex  bma020-tiny2313.lss  avrdudedummy  sizedummy  bma020-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
Finished building: ../bma.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:34: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:136: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:34: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1928 bytes (94.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xc4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1928 bytes (94.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xc4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1928 bytes):

Writing | ################################################## | 100% 1.50s

avrdude: 1928 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1928 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.99s

avrdude: verifying ...
avrdude: 1928 bytes of flash verified
avrdude: reading input file "0xc4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xc4:
avrdude: load data lfuse data from input file 0xc4:
avrdude: input file 0xc4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy
 

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:34: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:136: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:34: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1928 bytes (94.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xc4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1928 bytes (94.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xc4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1928 bytes (94.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xc4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1928 bytes):

Writing | ################################################## | 100% 1.50s

avrdude: 1928 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1928 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.99s

avrdude: verifying ...
avrdude: 1928 bytes of flash verified
avrdude: reading input file "0xc4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy
 

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xc4:
avrdude: load data lfuse data from input file 0xc4:
avrdude: input file 0xc4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:34: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:136: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:34: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1928 bytes (94.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xc4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1928 bytes (94.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xc4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1928 bytes):

Writing | ################################################## | 100% 1.49s

avrdude: 1928 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1928 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.99s

avrdude: verifying ...
avrdude: 1928 bytes of flash verified
avrdude: reading input file "0xc4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xc4:
avrdude: load data lfuse data from input file 0xc4:
avrdude: input file 0xc4 contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Clean-only build of configuration Release for project bma020-tiny2313 ****

make clean 
rm -rf  ./bma.o ./main.o ./rf12.o  ./bma.d ./main.d ./rf12.d  bma020-tiny2313.eep  bma020-tiny2313.hex  bma020-tiny2313.lss  avrdudedummy  sizedummy  bma020-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
Finished building: ../bma.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:34: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:136: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:34: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1928 bytes (94.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1928 bytes):

Writing | ################################################## | 100% 1.50s

avrdude: 1928 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1928 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.99s

avrdude: verifying ...
avrdude: 1928 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
Finished building: avrdudedummy
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):
 

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:34: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:136: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:34: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1928 bytes (94.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1928 bytes):

Writing | ################################################## | 100% 1.50s

avrdude: 1928 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1928 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.99s

avrdude: verifying ...
avrdude: 1928 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
Finished building: avrdudedummy
avrdude: reading on-chip lfuse data:
 

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1872 bytes (91.4% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1872 bytes):

Writing | ################################################## | 100% 1.46s

avrdude: 1872 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1872 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.96s

avrdude: verifying ...
avrdude: 1872 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1934 bytes (94.4% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1934 bytes):

Writing | ################################################## | 100% 1.51s

avrdude: 1934 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1934 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.99s

avrdude: verifying ...
avrdude: 1934 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s
 

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1938 bytes (94.6% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1938 bytes):

Writing | ################################################## | 100% 1.51s

avrdude: 1938 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1938 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.00s

avrdude: verifying ...
avrdude: 1938 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Finished building: avrdudedummy
Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:41: warning: implicit declaration of function 'TransmitByte'
../main.c:42: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:142: warning: conflicting types for 'TransmitByte'
../main.c:41: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:149: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:42: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2030 bytes (99.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (2030 bytes):

Writing | ################################################## | 100% 1.59s

avrdude: 2030 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 2030 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.04s

avrdude: verifying ...
avrdude: 2030 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:41: warning: implicit declaration of function 'TransmitByte'
../main.c:42: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:142: warning: conflicting types for 'TransmitByte'
../main.c:41: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:149: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:42: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2052 bytes (100.2% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: ERROR: address 0x0804 out of range at line 129 of bma020-tiny2313.hex
avrdude: read from file 'bma020-tiny2313.hex' failed

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:41: warning: implicit declaration of function 'TransmitByte'
../main.c:42: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:142: warning: conflicting types for 'TransmitByte'
../main.c:41: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:149: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:42: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2038 bytes (99.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (2038 bytes):

Writing | ################################################## | 100% 1.58s

avrdude: 2038 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 2038 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.05s

avrdude: verifying ...
avrdude: 2038 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:41: warning: implicit declaration of function 'TransmitByte'
../main.c:42: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:142: warning: conflicting types for 'TransmitByte'
../main.c:41: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:149: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:42: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2050 bytes (100.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: ERROR: address 0x0802 out of range at line 129 of bma020-tiny2313.hex
avrdude: read from file 'bma020-tiny2313.hex' failed

avrdude done.  Thank you.

make: *** [avrdudedummy] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:41: warning: implicit declaration of function 'TransmitByte'
../main.c:42: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:142: warning: conflicting types for 'TransmitByte'
../main.c:41: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:149: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:42: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1974 bytes (96.4% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1974 bytes):

Writing | ################################################## | 100% 1.54s

avrdude: 1974 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1974 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.01s

avrdude: verifying ...
avrdude: 1974 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Finished building: avrdudedummy
 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
../bma.c: In function 'BMA_init2':
../bma.c:88: error: redefinition of 'x'
../bma.c:86: error: previous definition of 'x' was here
make: *** [bma.o] Fehler 1

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
Finished building: ../bma.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:36: warning: implicit declaration of function 'TransmitByte'
../main.c:37: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:138: warning: conflicting types for 'TransmitByte'
../main.c:36: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:145: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:37: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1942 bytes (94.8% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1942 bytes):

Writing | ################################################## | 100% 1.51s

avrdude: 1942 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1942 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.00s

avrdude: verifying ...
avrdude: 1942 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: verifying ...
 
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:36: warning: implicit declaration of function 'TransmitByte'
../main.c:37: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:138: warning: conflicting types for 'TransmitByte'
../main.c:36: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:145: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:37: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1946 bytes (95.0% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1946 bytes):

Writing | ################################################## | 100% 1.52s

avrdude: 1946 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1946 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.00s

avrdude: verifying ...
avrdude: 1946 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Finished building: avrdudedummy
 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:39: warning: implicit declaration of function 'TransmitByte'
../main.c:40: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:131: warning: conflicting types for 'TransmitByte'
../main.c:39: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:138: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:40: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1948 bytes (95.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1948 bytes):

Writing | ################################################## | 100% 1.51s

avrdude: 1948 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1948 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.00s

avrdude: verifying ...
avrdude: 1948 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:54: warning: implicit declaration of function 'TransmitByte'
../main.c:55: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:135: warning: conflicting types for 'TransmitByte'
../main.c:54: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:142: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:55: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2012 bytes (98.2% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (2012 bytes):

Writing | ################################################## | 100% 1.57s

avrdude: 2012 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 2012 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.03s

avrdude: verifying ...
avrdude: 2012 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
Finished building: avrdudedummy
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1584 bytes (77.3% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1584 bytes):

Writing | ################################################## | 100% 1.23s

avrdude: 1584 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1584 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.82s

avrdude: verifying ...
avrdude: 1584 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

 
avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1582 bytes (77.2% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1582 bytes):

Writing | ################################################## | 100% 1.23s

avrdude: 1582 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1582 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1582 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy
 

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1638 bytes (80.0% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1638 bytes):

Writing | ################################################## | 100% 1.27s

avrdude: 1638 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1638 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.84s

avrdude: verifying ...
avrdude: 1638 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

avrdude: 1 bytes of lfuse written
 
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1636 bytes (79.9% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1636 bytes):

Writing | ################################################## | 100% 1.28s

avrdude: 1636 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1636 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.84s

avrdude: verifying ...
avrdude: 1636 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
Finished building: avrdudedummy
avrdude: load data lfuse data from input file 0xce:
 
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1638 bytes (80.0% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1638 bytes):

Writing | ################################################## | 100% 1.27s

avrdude: 1638 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1638 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.85s

avrdude: verifying ...
avrdude: 1638 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=14745600UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1584 bytes (77.3% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xce:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1584 bytes):

Writing | ################################################## | 100% 1.24s

avrdude: 1584 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1584 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1584 bytes of flash verified
avrdude: reading input file "0xce"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xce:
avrdude: load data lfuse data from input file 0xce:
avrdude: input file 0xce contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: verifying ...
 
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1584 bytes (77.3% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1584 bytes):

Writing | ################################################## | 100% 1.23s

avrdude: 1584 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1584 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1584 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy
 

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:56: warning: implicit declaration of function 'TransmitByte'
../main.c:57: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:139: warning: conflicting types for 'TransmitByte'
../main.c:56: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:146: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:57: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2012 bytes (98.2% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (2012 bytes):

Writing | ################################################## | 100% 1.56s

avrdude: 2012 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 2012 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.04s

avrdude: verifying ...
avrdude: 2012 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
 
avrdude: load data lfuse data from input file 0xcc:
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:56: warning: implicit declaration of function 'TransmitByte'
../main.c:57: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:139: warning: conflicting types for 'TransmitByte'
../main.c:56: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:146: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:57: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2048 bytes (100.0% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (2048 bytes):

Writing | ################################################## | 100% 1.60s

avrdude: 2048 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 2048 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.05s

avrdude: verifying ...
avrdude: 2048 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
Finished building: avrdudedummy
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2048 bytes (100.0% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (2048 bytes):

Writing | ################################################## | 100% 1.59s

avrdude: 2048 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 2048 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.06s

avrdude: verifying ...
avrdude: 2048 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

Finished building: avrdudedummy
 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:60: warning: implicit declaration of function 'TransmitByte'
../main.c:61: warning: implicit declaration of function 'TransmitIntAsAscii'
../main.c: At top level:
../main.c:140: warning: conflicting types for 'TransmitByte'
../main.c:60: warning: previous implicit declaration of 'TransmitByte' was here
../main.c:147: warning: conflicting types for 'TransmitIntAsAscii'
../main.c:61: warning: previous implicit declaration of 'TransmitIntAsAscii' was here
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    2048 bytes (100.0% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (2048 bytes):

Writing | ################################################## | 100% 1.59s

avrdude: 2048 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 2048 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.05s

avrdude: verifying ...
avrdude: 2048 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
Finished building: avrdudedummy
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

 
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1620 bytes (79.1% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1620 bytes):

Writing | ################################################## | 100% 1.26s

avrdude: 1620 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1620 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.83s

avrdude: verifying ...
avrdude: 1620 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
Finished building: avrdudedummy
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'measure':
../main.c:35: warning: 'z1' may be used uninitialized in this function
../main.c:34: warning: 'y1' may be used uninitialized in this function
../main.c:33: warning: 'x1' may be used uninitialized in this function
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1782 bytes (87.0% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1782 bytes):

Writing | ################################################## | 100% 1.38s

avrdude: 1782 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1782 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.91s

avrdude: verifying ...
avrdude: 1782 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy
 

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1572 bytes (76.8% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1572 bytes):

Writing | ################################################## | 100% 1.23s

avrdude: 1572 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1572 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.81s

avrdude: verifying ...
avrdude: 1572 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s
Finished building: avrdudedummy

 
avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1796 bytes (87.7% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1796 bytes):

Writing | ################################################## | 100% 1.40s

avrdude: 1796 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1796 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.92s

avrdude: verifying ...
avrdude: 1796 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
Finished building: avrdudedummy
avrdude: input file 0xcc contains 1 bytes
 
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1796 bytes (87.7% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1796 bytes):

Writing | ################################################## | 100% 1.41s

avrdude: 1796 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1796 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.92s

avrdude: verifying ...
avrdude: 1796 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
avrdude: input file 0xcc contains 1 bytes
Finished building: avrdudedummy
 
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=7372800UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1796 bytes (87.7% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xcc:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1796 bytes):

Writing | ################################################## | 100% 1.39s

avrdude: 1796 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1796 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.92s

avrdude: verifying ...
avrdude: 1796 bytes of flash verified
avrdude: reading input file "0xcc"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

Finished building: avrdudedummy
avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xcc:
avrdude: load data lfuse data from input file 0xcc:
 
avrdude: input file 0xcc contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****

**** Clean-only build of configuration Release for project bma020-tiny2313 ****

make clean 
rm -rf  ./bma.o ./main.o ./rf12.o  ./bma.d ./main.d ./rf12.d  bma020-tiny2313.eep  bma020-tiny2313.hex  bma020-tiny2313.lss  avrdudedummy  sizedummy  bma020-tiny2313.elf
 

**** Build Finished ****

**** Build of configuration Release for project bma020-tiny2313 ****

make all 
Building file: ../bma.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"bma.d" -MT"bma.d" -c -o "bma.o" "../bma.c"
Finished building: ../bma.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../rf12.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny2313 -DF_CPU=8000000UL -MMD -MP -MF"rf12.d" -MT"rf12.d" -c -o "rf12.o" "../rf12.c"
Finished building: ../rf12.c
 
Building target: bma020-tiny2313.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,bma020-tiny2313.map -mmcu=attiny2313 -o "bma020-tiny2313.elf"  ./bma.o ./main.o ./rf12.o   
Finished building target: bma020-tiny2313.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S bma020-tiny2313.elf  >"bma020-tiny2313.lss"
Finished building: bma020-tiny2313.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -O ihex bma020-tiny2313.elf  "bma020-tiny2313.hex"
Finished building: bma020-tiny2313.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex bma020-tiny2313.elf  "bma020-tiny2313.eep"
Finished building: bma020-tiny2313.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny2313 bma020-tiny2313.elf
AVR Memory Usage
----------------
Device: attiny2313

Program:    1796 bytes (87.7% Full)
(.text + .data + .bootloader)

Data:         20 bytes (15.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt2313 -cusbasp -F -u -Uflash:w:bma020-tiny2313.hex:a -Ulfuse:w:0xc4:m -Uhfuse:w:0xdf:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e910a
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "bma020-tiny2313.hex"
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: writing flash (1796 bytes):

Writing | ################################################## | 100% 1.40s

avrdude: 1796 bytes of flash written
avrdude: verifying flash memory against bma020-tiny2313.hex:
avrdude: load data flash data from input file bma020-tiny2313.hex:
avrdude: input file bma020-tiny2313.hex auto detected as Intel Hex
avrdude: input file bma020-tiny2313.hex contains 1796 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.92s

avrdude: verifying ...
avrdude: 1796 bytes of flash verified
avrdude: reading input file "0xc4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xc4:
avrdude: load data lfuse data from input file 0xc4:
avrdude: input file 0xc4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xdf"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s
Finished building: avrdudedummy

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xdf:
 
avrdude: load data hfuse data from input file 0xdf:
avrdude: input file 0xdf contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.


**** Build Finished ****
