Archive member included because of file (symbol)

/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
                              /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/libc.a(strcmp_P.o)
                              ./main2.o (strcmp_P)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               ./usbdrv.o
usbTxStatus1        0xc               ./usbdrv.o
usbDeviceAddr       0x1               ./usbdrv.o
usbRxToken          0x1               ./usbdrv.o
usbInputBufOffset   0x1               ./usbdrv.o
usbMsgPtr           0x2               ./usbdrv.o
usbRxLen            0x1               ./usbdrv.o
usbNewDeviceAddr    0x1               ./usbdrv.o
usbCurrentTok       0x1               ./usbdrv.o
usbConfiguration    0x1               ./usbdrv.o
usbRxBuf            0x16              ./usbdrv.o
usbTxStatus3        0xc               ./usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD ./main.o
LOAD ./main2.o
LOAD ./oddebug.o
LOAD ./usbdrv.o
LOAD ./usbdrvasm.o
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/libc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xdb2
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000026       0x57 ./main2.o
 .progmem.data  0x000000000000007d       0x48 ./usbdrv.o
                0x00000000000000b3                usbDescriptorDevice
                0x000000000000007d                usbDescriptorString0
                0x0000000000000081                usbDescriptorStringVendor
                0x00000000000000a3                usbDescriptorStringDevice
                0x00000000000000c6                . = ALIGN (0x2)
 *fill*         0x00000000000000c5        0x1 00
                0x00000000000000c6                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000c6        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000c6                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000c6                __ctors_start = .
 *(.ctors)
                0x00000000000000c6                __ctors_end = .
                0x00000000000000c6                __dtors_start = .
 *(.dtors)
                0x00000000000000c6                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000c6        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000000000c6                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000c6        0xc /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000d2       0x16 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
                0x00000000000000d2                __do_copy_data
 .init4         0x00000000000000e8       0x10 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000e8                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000f8        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000000000000fc        0x2 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000000000fc                __bad_interrupt
                0x00000000000000fc                __vector_2
 .text          0x00000000000000fe        0x0 ./main.o
 .text          0x00000000000000fe      0x6ec ./main2.o
                0x0000000000000548                usbFunctionWriteOut
                0x00000000000000fe                usbFunctionDescriptor
                0x0000000000000298                __vector_12
                0x00000000000001cc                __vector_6
                0x0000000000000128                usbFunctionSetup
                0x0000000000000166                __vector_3
                0x0000000000000276                __vector_11
                0x00000000000002ba                __vector_13
                0x0000000000000342                __vector_17
                0x00000000000001ee                __vector_7
                0x00000000000001aa                __vector_5
                0x0000000000000386                main
                0x0000000000000188                __vector_4
                0x0000000000000232                __vector_9
                0x00000000000002fe                __vector_15
                0x0000000000000210                __vector_8
                0x00000000000002dc                __vector_14
                0x0000000000000254                __vector_10
                0x0000000000000320                __vector_16
                0x00000000000007d6                usbFunctionRead
                0x0000000000000364                __vector_18
                0x00000000000007c2                usbFunctionWrite
 .text          0x00000000000007ea        0x0 ./oddebug.o
 .text          0x00000000000007ea      0x2f0 ./usbdrv.o
                0x0000000000000890                usbPoll
                0x000000000000080c                usbSetInterrupt3
                0x000000000000084e                usbSetInterrupt
                0x00000000000007ea                usbInit
 .text          0x0000000000000ada      0x2c2 ./usbdrvasm.o
                0x0000000000000b0c                __vector_1
                0x0000000000000ada                usbCrc16
                0x0000000000000b04                usbCrc16Append
 .text          0x0000000000000d9c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000d9c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000d9c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000d9c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/libc.a(strcmp_P.o)
                0x0000000000000d9c                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000d9c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000d9c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000d9c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000000d9c       0x12 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/libc.a(strcmp_P.o)
                0x0000000000000d9c                strcmp_P
                0x0000000000000dae                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000dae        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
                0x0000000000000dae                exit
                0x0000000000000dae                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000dae        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000db2                _etext = .

.data           0x0000000000800060        0xc load address 0x0000000000000db2
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0xa ./main2.o
 .data          0x000000000080006a        0x0 ./oddebug.o
 .data          0x000000000080006a        0x2 ./usbdrv.o
                0x000000000080006a                usbTxLen
 .data          0x000000000080006c        0x0 ./usbdrvasm.o
 .data          0x000000000080006c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .data          0x000000000080006c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .data          0x000000000080006c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .data          0x000000000080006c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/libc.a(strcmp_P.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080006c                . = ALIGN (0x2)
                0x000000000080006c                _edata = .
                0x000000000080006c                PROVIDE (__data_end, .)

.bss            0x000000000080006c      0x15e
                0x000000000080006c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080006c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x000000000080006c        0x0 ./main.o
 .bss           0x000000000080006c      0x11b ./main2.o
 .bss           0x0000000000800187        0x0 ./oddebug.o
 .bss           0x0000000000800187        0x1 ./usbdrv.o
 .bss           0x0000000000800188        0x0 ./usbdrvasm.o
 .bss           0x0000000000800188        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800188        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800188        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800188        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/libc.a(strcmp_P.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800188       0x42 ./usbdrv.o
                0x0000000000800188                usbTxBuf
                0x0000000000800193                usbTxStatus1
                0x000000000080019f                usbDeviceAddr
                0x00000000008001a0                usbRxToken
                0x00000000008001a1                usbInputBufOffset
                0x00000000008001a2                usbMsgPtr
                0x00000000008001a4                usbRxLen
                0x00000000008001a5                usbNewDeviceAddr
                0x00000000008001a6                usbCurrentTok
                0x00000000008001a7                usbConfiguration
                0x00000000008001a8                usbRxBuf
                0x00000000008001be                usbTxStatus3
                0x00000000008001ca                PROVIDE (__bss_end, .)
                0x0000000000000db2                __data_load_start = LOADADDR (.data)
                0x0000000000000dbe                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001ca        0x0
                0x00000000008001ca                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001ca                PROVIDE (__noinit_end, .)
                0x00000000008001ca                _end = .
                0x00000000008001ca                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x750
 *(.stab)
 .stab          0x0000000000000000      0x6cc /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc       0x84 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/libc.a(strcmp_P.o)
                                         0x90 (size before relaxing)

.stabstr        0x0000000000000000       0x86
 *(.stabstr)
 .stabstr       0x0000000000000000       0x86 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(rfm12-tiny2313.elf elf32-avr)
LOAD linker stubs
