Archive member included because of file (symbol)

/opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_divmodsi4.o)
                              ./rf12.o (__divmodsi4)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
                              /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o (exit)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
                              ./bma.o (__do_copy_data)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                              ./bma.o (__do_clear_bss)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_udivmodsi4.o)
                              /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

x                   0x2               ./main.o
z                   0x2               ./main.o
y                   0x2               ./main.o
airid               0x4               ./rf12.o
uiState             0x2               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
LOAD ./bma.o
LOAD ./main.o
LOAD ./rf12.o
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/libc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x6fe
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0x8 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002e       0x16 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
                0x000000000000002e                __do_copy_data
 .init4         0x0000000000000044       0x10 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                0x0000000000000044                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000054        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x0000000000000058        0x2 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
                0x0000000000000058                __vector_1
                0x0000000000000058                __vector_12
                0x0000000000000058                __bad_interrupt
                0x0000000000000058                __vector_6
                0x0000000000000058                __vector_3
                0x0000000000000058                __vector_11
                0x0000000000000058                __vector_13
                0x0000000000000058                __vector_17
                0x0000000000000058                __vector_7
                0x0000000000000058                __vector_5
                0x0000000000000058                __vector_4
                0x0000000000000058                __vector_9
                0x0000000000000058                __vector_2
                0x0000000000000058                __vector_15
                0x0000000000000058                __vector_8
                0x0000000000000058                __vector_14
                0x0000000000000058                __vector_10
                0x0000000000000058                __vector_16
 .text          0x000000000000005a       0x8e ./bma.o
                0x000000000000005a                BMA_trans
                0x00000000000000bc                BMA_init
                0x00000000000000a2                BMA_uninit
                0x00000000000000d2                BMA_init2
 .text          0x00000000000000e8      0x386 ./main.o
                0x00000000000001ba                measure
                0x0000000000000120                send
                0x0000000000000362                main
                0x00000000000000e8                __vector_18
 .text          0x000000000000046e      0x212 ./rf12.o
                0x00000000000005c0                rf12_txdata_start
                0x000000000000046e                rf12_trans
                0x0000000000000636                rf12_txdata
                0x00000000000005ae                rf12_readytrans
                0x000000000000065a                rf12_preinit
                0x0000000000000600                rf12_txdata_send
                0x00000000000004a6                rf12_init
                0x00000000000004d2                rf12_setall
                0x000000000000062e                rf12_txdata_end
                0x0000000000000584                rf12_ready
 .text          0x0000000000000680        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000680        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .text          0x0000000000000680        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .text          0x0000000000000680        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
 .text          0x0000000000000680        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_udivmodsi4.o)
                0x0000000000000680                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000680       0x36 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_divmodsi4.o)
                0x0000000000000680                __divmodsi4
 .text.libgcc   0x00000000000006b6        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000006b6        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000006b6        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000006b6       0x44 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_udivmodsi4.o)
                0x00000000000006b6                __udivmodsi4
                0x00000000000006fa                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000006fa        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
                0x00000000000006fa                exit
                0x00000000000006fa                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000006fa        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000006fe                _etext = .

.data           0x0000000000800060        0x6 load address 0x00000000000006fe
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
 .data          0x0000000000800060        0x0 ./bma.o
 .data          0x0000000000800060        0x5 ./main.o
 .data          0x0000000000800065        0x0 ./rf12.o
 .data          0x0000000000800065        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800065        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .data          0x0000000000800065        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .data          0x0000000000800065        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
 .data          0x0000000000800065        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800066                . = ALIGN (0x2)
 *fill*         0x0000000000800065        0x1 00
                0x0000000000800066                _edata = .
                0x0000000000800066                PROVIDE (__data_end, .)

.bss            0x0000000000800066        0xe
                0x0000000000800066                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800066        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
 .bss           0x0000000000800066        0x0 ./bma.o
 .bss           0x0000000000800066        0x2 ./main.o
                0x0000000000800066                WDTcounter
 .bss           0x0000000000800068        0x0 ./rf12.o
 .bss           0x0000000000800068        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800068        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .bss           0x0000000000800068        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .bss           0x0000000000800068        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800068        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800068        0x8 ./main.o
                0x0000000000800068                x
                0x000000000080006a                z
                0x000000000080006c                y
                0x000000000080006e                uiState
 COMMON         0x0000000000800070        0x4 ./rf12.o
                0x0000000000800070                airid
                0x0000000000800074                PROVIDE (__bss_end, .)
                0x00000000000006fe                __data_load_start = LOADADDR (.data)
                0x0000000000000704                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800074        0x0
                0x0000000000800074                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800074                PROVIDE (__noinit_end, .)
                0x0000000000800074                _end = .
                0x0000000000800074                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6b4
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(bma020-tiny2313.elf elf32-avr)
LOAD linker stubs
