Archive member included because of file (symbol)

/opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
                              /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               ./usbdrv.o
usbTxStatus1        0xc               ./usbdrv.o
usbDeviceAddr       0x1               ./usbdrv.o
usbRxToken          0x1               ./usbdrv.o
usbInputBufOffset   0x1               ./usbdrv.o
usbMsgPtr           0x2               ./usbdrv.o
usbRxLen            0x1               ./usbdrv.o
usbNewDeviceAddr    0x1               ./usbdrv.o
usbCurrentTok       0x1               ./usbdrv.o
usbConfiguration    0x1               ./usbdrv.o
usbRxBuf            0x16              ./usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./main.o
LOAD ./oddebug.o
LOAD ./usbdrv.o
LOAD ./usbdrvasm.o
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/libc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x72c
 *(.vectors)
 .vectors       0x00000000       0x54 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000054       0x34 ./main.o
                0x00000054                usbDescriptorHidReport
 .progmem.data  0x00000088       0x56 ./usbdrv.o
                0x000000aa                usbDescriptorDevice
                0x00000088                usbDescriptorString0
                0x000000bc                usbDescriptorConfiguration
                0x0000008c                usbDescriptorStringVendor
                0x0000009e                usbDescriptorStringDevice
                0x000000de                . = ALIGN (0x2)
                0x000000de                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000de        0x0 linker stubs
 *(.trampolines*)
                0x000000de                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000de                __ctors_start = .
 *(.ctors)
                0x000000de                __ctors_end = .
                0x000000de                __dtors_start = .
 *(.dtors)
                0x000000de                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000de        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x000000de                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000de        0xc /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000ea       0x16 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
                0x000000ea                __do_copy_data
 .init4         0x00000100       0x10 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                0x00000100                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000110        0x8 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000118        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000118                __vector_12
                0x00000118                __bad_interrupt
                0x00000118                __vector_6
                0x00000118                __vector_3
                0x00000118                __vector_11
                0x00000118                __vector_13
                0x00000118                __vector_17
                0x00000118                __vector_19
                0x00000118                __vector_7
                0x00000118                __vector_5
                0x00000118                __vector_4
                0x00000118                __vector_9
                0x00000118                __vector_2
                0x00000118                __vector_15
                0x00000118                __vector_8
                0x00000118                __vector_14
                0x00000118                __vector_10
                0x00000118                __vector_16
                0x00000118                __vector_18
                0x00000118                __vector_20
 .text          0x0000011c       0xfc ./main.o
                0x0000011c                usbFunctionSetup
                0x00000162                main
 .text          0x00000218        0x0 ./oddebug.o
 .text          0x00000218      0x26a ./usbdrv.o
                0x00000232                usbPoll
                0x0000043e                usbSetInterrupt
                0x00000218                usbInit
 .text          0x00000482      0x2a6 ./usbdrvasm.o
                0x000004b4                __vector_1
                0x00000482                usbCrc16
                0x000004ac                usbCrc16Append
 .text          0x00000728        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .text          0x00000728        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .text          0x00000728        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                0x00000728                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000728        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000728        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000728        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                0x00000728                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000728        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
                0x00000728                exit
                0x00000728                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000728        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000072c                _etext = .

.data           0x00800060        0x4 load address 0x0000072c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x2 ./main.o
 .data          0x00800062        0x0 ./oddebug.o
 .data          0x00800062        0x2 ./usbdrv.o
                0x00800062                usbTxLen
 .data          0x00800064        0x0 ./usbdrvasm.o
 .data          0x00800064        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .data          0x00800064        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .data          0x00800064        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800064                . = ALIGN (0x2)
                0x00800064                _edata = .
                0x00800064                PROVIDE (__data_end, .)

.bss            0x00800064       0x3e
                0x00800064                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800064        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800064        0x7 ./main.o
 .bss           0x0080006b        0x0 ./oddebug.o
 .bss           0x0080006b        0x1 ./usbdrv.o
 .bss           0x0080006c        0x0 ./usbdrvasm.o
 .bss           0x0080006c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .bss           0x0080006c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x0080006c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080006c       0x36 ./usbdrv.o
                0x0080006c                usbTxBuf
                0x00800077                usbTxStatus1
                0x00800083                usbDeviceAddr
                0x00800084                usbRxToken
                0x00800085                usbInputBufOffset
                0x00800086                usbMsgPtr
                0x00800088                usbRxLen
                0x00800089                usbNewDeviceAddr
                0x0080008a                usbCurrentTok
                0x0080008b                usbConfiguration
                0x0080008c                usbRxBuf
                0x008000a2                PROVIDE (__bss_end, .)
                0x0000072c                __data_load_start = LOADADDR (.data)
                0x00000730                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000a2        0x0
                0x008000a2                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000a2                PROVIDE (__noinit_end, .)
                0x008000a2                _end = .
                0x008000a2                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(usb-mega32.elf elf32-avr)
LOAD linker stubs
