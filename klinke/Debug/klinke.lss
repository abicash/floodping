
klinke.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ffc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000ffc  00001090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800068  00800068  00001098  2**0
                  ALLOC
  3 .stab         00000f6c  00000000  00000000  00001098  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000099f  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  000029a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00002ae3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00002c53  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  0000489c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dce  00000000  00000000  00005787  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00006558  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000294  00000000  00000000  000066b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  0000694c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000711a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2a c0       	rjmp	.+84     	; 0x58 <__bad_interrupt>
   4:	29 c0       	rjmp	.+82     	; 0x58 <__bad_interrupt>
   6:	28 c0       	rjmp	.+80     	; 0x58 <__bad_interrupt>
   8:	27 c0       	rjmp	.+78     	; 0x58 <__bad_interrupt>
   a:	26 c0       	rjmp	.+76     	; 0x58 <__bad_interrupt>
   c:	25 c0       	rjmp	.+74     	; 0x58 <__bad_interrupt>
   e:	24 c0       	rjmp	.+72     	; 0x58 <__bad_interrupt>
  10:	23 c0       	rjmp	.+70     	; 0x58 <__bad_interrupt>
  12:	22 c0       	rjmp	.+68     	; 0x58 <__bad_interrupt>
  14:	21 c0       	rjmp	.+66     	; 0x58 <__bad_interrupt>
  16:	20 c0       	rjmp	.+64     	; 0x58 <__bad_interrupt>
  18:	1f c0       	rjmp	.+62     	; 0x58 <__bad_interrupt>
  1a:	3b c0       	rjmp	.+118    	; 0x92 <__vector_13>
  1c:	1d c0       	rjmp	.+58     	; 0x58 <__bad_interrupt>
  1e:	1c c0       	rjmp	.+56     	; 0x58 <__bad_interrupt>
  20:	1b c0       	rjmp	.+54     	; 0x58 <__bad_interrupt>
  22:	1a c0       	rjmp	.+52     	; 0x58 <__bad_interrupt>
  24:	19 c0       	rjmp	.+50     	; 0x58 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf ed       	ldi	r28, 0xDF	; 223
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_copy_data>:
  2e:	10 e0       	ldi	r17, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	ec ef       	ldi	r30, 0xFC	; 252
  36:	ff e0       	ldi	r31, 0x0F	; 15
  38:	02 c0       	rjmp	.+4      	; 0x3e <.do_copy_data_start>

0000003a <.do_copy_data_loop>:
  3a:	05 90       	lpm	r0, Z+
  3c:	0d 92       	st	X+, r0

0000003e <.do_copy_data_start>:
  3e:	a8 36       	cpi	r26, 0x68	; 104
  40:	b1 07       	cpc	r27, r17
  42:	d9 f7       	brne	.-10     	; 0x3a <.do_copy_data_loop>

00000044 <__do_clear_bss>:
  44:	10 e0       	ldi	r17, 0x00	; 0
  46:	a8 e6       	ldi	r26, 0x68	; 104
  48:	b0 e0       	ldi	r27, 0x00	; 0
  4a:	01 c0       	rjmp	.+2      	; 0x4e <.do_clear_bss_start>

0000004c <.do_clear_bss_loop>:
  4c:	1d 92       	st	X+, r1

0000004e <.do_clear_bss_start>:
  4e:	a9 36       	cpi	r26, 0x69	; 105
  50:	b1 07       	cpc	r27, r17
  52:	e1 f7       	brne	.-8      	; 0x4c <.do_clear_bss_loop>
  54:	64 d0       	rcall	.+200    	; 0x11e <main>
  56:	d0 c7       	rjmp	.+4000   	; 0xff8 <_exit>

00000058 <__bad_interrupt>:
  58:	d3 cf       	rjmp	.-90     	; 0x0 <__vectors>

0000005a <PulseOn>:

#define FreigabeDauer       40 /* x 100ms */
#define SchliessVerzoegerung 4 /* x 100ms */

void PulseOn()
{
  5a:	df 93       	push	r29
  5c:	cf 93       	push	r28
  5e:	cd b7       	in	r28, 0x3d	; 61
  60:	de b7       	in	r29, 0x3e	; 62
	PORTD |= (1 << PD4);
  62:	a2 e3       	ldi	r26, 0x32	; 50
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e3       	ldi	r30, 0x32	; 50
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	80 81       	ld	r24, Z
  6c:	80 61       	ori	r24, 0x10	; 16
  6e:	8c 93       	st	X, r24
}
  70:	cf 91       	pop	r28
  72:	df 91       	pop	r29
  74:	08 95       	ret

00000076 <PulseOff>:

void PulseOff()
{
  76:	df 93       	push	r29
  78:	cf 93       	push	r28
  7a:	cd b7       	in	r28, 0x3d	; 61
  7c:	de b7       	in	r29, 0x3e	; 62
	PORTD &= ~(1 << PD4);
  7e:	a2 e3       	ldi	r26, 0x32	; 50
  80:	b0 e0       	ldi	r27, 0x00	; 0
  82:	e2 e3       	ldi	r30, 0x32	; 50
  84:	f0 e0       	ldi	r31, 0x00	; 0
  86:	80 81       	ld	r24, Z
  88:	8f 7e       	andi	r24, 0xEF	; 239
  8a:	8c 93       	st	X, r24
}
  8c:	cf 91       	pop	r28
  8e:	df 91       	pop	r29
  90:	08 95       	ret

00000092 <__vector_13>:

ISR(TIMER0_COMPA_vect)
{
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	2f 93       	push	r18
  9e:	3f 93       	push	r19
  a0:	4f 93       	push	r20
  a2:	5f 93       	push	r21
  a4:	6f 93       	push	r22
  a6:	7f 93       	push	r23
  a8:	8f 93       	push	r24
  aa:	9f 93       	push	r25
  ac:	af 93       	push	r26
  ae:	bf 93       	push	r27
  b0:	ef 93       	push	r30
  b2:	ff 93       	push	r31
  b4:	df 93       	push	r29
  b6:	cf 93       	push	r28
  b8:	0f 92       	push	r0
  ba:	cd b7       	in	r28, 0x3d	; 61
  bc:	de b7       	in	r29, 0x3e	; 62
	unsigned char ucTemp = uiCount;
  be:	80 91 68 00 	lds	r24, 0x0068
  c2:	89 83       	std	Y+1, r24	; 0x01
	cli();
  c4:	f8 94       	cli
	if (ucTemp == 0)
  c6:	89 81       	ldd	r24, Y+1	; 0x01
  c8:	88 23       	and	r24, r24
  ca:	11 f4       	brne	.+4      	; 0xd0 <__vector_13+0x3e>
	{
		PulseOn();
  cc:	c6 df       	rcall	.-116    	; 0x5a <PulseOn>
  ce:	0c c0       	rjmp	.+24     	; 0xe8 <__stack+0x9>
	}
	else if (ucTemp == 2)
  d0:	89 81       	ldd	r24, Y+1	; 0x01
  d2:	82 30       	cpi	r24, 0x02	; 2
  d4:	11 f4       	brne	.+4      	; 0xda <__vector_13+0x48>
	{
		PulseOff();
  d6:	cf df       	rcall	.-98     	; 0x76 <PulseOff>
  d8:	07 c0       	rjmp	.+14     	; 0xe8 <__stack+0x9>
	}
	else if (ucTemp >= 10)
  da:	89 81       	ldd	r24, Y+1	; 0x01
  dc:	8a 30       	cpi	r24, 0x0A	; 10
  de:	20 f0       	brcs	.+8      	; 0xe8 <__stack+0x9>
	{
		uiCount = 0;
  e0:	10 92 68 00 	sts	0x0068, r1
		sei();
  e4:	78 94       	sei
  e6:	07 c0       	rjmp	.+14     	; 0xf6 <__stack+0x17>
		return;
	}
	ucTemp++;
  e8:	89 81       	ldd	r24, Y+1	; 0x01
  ea:	8f 5f       	subi	r24, 0xFF	; 255
  ec:	89 83       	std	Y+1, r24	; 0x01
	uiCount = ucTemp;
  ee:	89 81       	ldd	r24, Y+1	; 0x01
  f0:	80 93 68 00 	sts	0x0068, r24
	sei();
  f4:	78 94       	sei
}
  f6:	0f 90       	pop	r0
  f8:	cf 91       	pop	r28
  fa:	df 91       	pop	r29
  fc:	ff 91       	pop	r31
  fe:	ef 91       	pop	r30
 100:	bf 91       	pop	r27
 102:	af 91       	pop	r26
 104:	9f 91       	pop	r25
 106:	8f 91       	pop	r24
 108:	7f 91       	pop	r23
 10a:	6f 91       	pop	r22
 10c:	5f 91       	pop	r21
 10e:	4f 91       	pop	r20
 110:	3f 91       	pop	r19
 112:	2f 91       	pop	r18
 114:	0f 90       	pop	r0
 116:	0f be       	out	0x3f, r0	; 63
 118:	0f 90       	pop	r0
 11a:	1f 90       	pop	r1
 11c:	18 95       	reti

0000011e <main>:

int main(void)
{
 11e:	df 93       	push	r29
 120:	cf 93       	push	r28
 122:	cd b7       	in	r28, 0x3d	; 61
 124:	de b7       	in	r29, 0x3e	; 62
 126:	e3 97       	sbiw	r28, 0x33	; 51
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	f8 94       	cli
 12c:	de bf       	out	0x3e, r29	; 62
 12e:	0f be       	out	0x3f, r0	; 63
 130:	cd bf       	out	0x3d, r28	; 61
	cli();
 132:	f8 94       	cli
	wdt_reset();
 134:	a8 95       	wdr
	wdt_disable();
 136:	88 e1       	ldi	r24, 0x18	; 24
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	f8 94       	cli
 13c:	81 bd       	out	0x21, r24	; 33
 13e:	11 bc       	out	0x21, r1	; 33
 140:	0f be       	out	0x3f, r0	; 63

	DDRD = (1 << PD4) | (1 << PD5);
 142:	e1 e3       	ldi	r30, 0x31	; 49
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	80 e3       	ldi	r24, 0x30	; 48
 148:	80 83       	st	Z, r24
	PORTD &= ~(1 << PD5);
 14a:	a2 e3       	ldi	r26, 0x32	; 50
 14c:	b0 e0       	ldi	r27, 0x00	; 0
 14e:	e2 e3       	ldi	r30, 0x32	; 50
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	8f 7d       	andi	r24, 0xDF	; 223
 156:	8c 93       	st	X, r24

	DDRB &= ~(1 << PB0);
 158:	a7 e3       	ldi	r26, 0x37	; 55
 15a:	b0 e0       	ldi	r27, 0x00	; 0
 15c:	e7 e3       	ldi	r30, 0x37	; 55
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	8e 7f       	andi	r24, 0xFE	; 254
 164:	8c 93       	st	X, r24
	PORTB |= (1 << PB0);
 166:	a8 e3       	ldi	r26, 0x38	; 56
 168:	b0 e0       	ldi	r27, 0x00	; 0
 16a:	e8 e3       	ldi	r30, 0x38	; 56
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	80 81       	ld	r24, Z
 170:	81 60       	ori	r24, 0x01	; 1
 172:	8c 93       	st	X, r24

	OCR0A = ServoRiegelZu;
 174:	e6 e5       	ldi	r30, 0x56	; 86
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	8a e2       	ldi	r24, 0x2A	; 42
 17a:	80 83       	st	Z, r24
	TIMSK |= (1 << OCIE0A);
 17c:	a9 e5       	ldi	r26, 0x59	; 89
 17e:	b0 e0       	ldi	r27, 0x00	; 0
 180:	e9 e5       	ldi	r30, 0x59	; 89
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	80 81       	ld	r24, Z
 186:	81 60       	ori	r24, 0x01	; 1
 188:	8c 93       	st	X, r24
	TCCR0A = (1 << WGM01);
 18a:	e0 e5       	ldi	r30, 0x50	; 80
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	82 e0       	ldi	r24, 0x02	; 2
 190:	80 83       	st	Z, r24
	TCCR0B |= (1 << CS01) | (1 << CS00);
 192:	a3 e5       	ldi	r26, 0x53	; 83
 194:	b0 e0       	ldi	r27, 0x00	; 0
 196:	e3 e5       	ldi	r30, 0x53	; 83
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	83 60       	ori	r24, 0x03	; 3
 19e:	8c 93       	st	X, r24

	sei();
 1a0:	78 94       	sei

	unsigned int uiDelay = 0;
 1a2:	1b aa       	std	Y+51, r1	; 0x33
 1a4:	1a aa       	std	Y+50, r1	; 0x32
	unsigned int uiDelayClose = 0;
 1a6:	19 aa       	std	Y+49, r1	; 0x31
 1a8:	18 aa       	std	Y+48, r1	; 0x30
	unsigned char uiServoSoll = ServoRiegelZu;
 1aa:	8a e2       	ldi	r24, 0x2A	; 42
 1ac:	8f a7       	std	Y+47, r24	; 0x2f
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	a8 ec       	ldi	r26, 0xC8	; 200
 1b4:	b2 e4       	ldi	r27, 0x42	; 66
 1b6:	8f a3       	std	Y+39, r24	; 0x27
 1b8:	98 a7       	std	Y+40, r25	; 0x28
 1ba:	a9 a7       	std	Y+41, r26	; 0x29
 1bc:	ba a7       	std	Y+42, r27	; 0x2a
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
 1be:	6f a1       	ldd	r22, Y+39	; 0x27
 1c0:	78 a5       	ldd	r23, Y+40	; 0x28
 1c2:	89 a5       	ldd	r24, Y+41	; 0x29
 1c4:	9a a5       	ldd	r25, Y+42	; 0x2a
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	4a ef       	ldi	r20, 0xFA	; 250
 1cc:	54 e4       	ldi	r21, 0x44	; 68
 1ce:	70 d3       	rcall	.+1760   	; 0x8b0 <__mulsf3>
 1d0:	dc 01       	movw	r26, r24
 1d2:	cb 01       	movw	r24, r22
 1d4:	8b a3       	std	Y+35, r24	; 0x23
 1d6:	9c a3       	std	Y+36, r25	; 0x24
 1d8:	ad a3       	std	Y+37, r26	; 0x25
 1da:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
 1dc:	6b a1       	ldd	r22, Y+35	; 0x23
 1de:	7c a1       	ldd	r23, Y+36	; 0x24
 1e0:	8d a1       	ldd	r24, Y+37	; 0x25
 1e2:	9e a1       	ldd	r25, Y+38	; 0x26
 1e4:	20 e0       	ldi	r18, 0x00	; 0
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	40 e8       	ldi	r20, 0x80	; 128
 1ea:	5f e3       	ldi	r21, 0x3F	; 63
 1ec:	ac d4       	rcall	.+2392   	; 0xb46 <__ltsf2>
 1ee:	88 23       	and	r24, r24
 1f0:	2c f4       	brge	.+10     	; 0x1fc <main+0xde>
		__ticks = 1;
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	9a a3       	std	Y+34, r25	; 0x22
 1f8:	89 a3       	std	Y+33, r24	; 0x21
 1fa:	3b c0       	rjmp	.+118    	; 0x272 <main+0x154>
	else if (__tmp > 65535)
 1fc:	6b a1       	ldd	r22, Y+35	; 0x23
 1fe:	7c a1       	ldd	r23, Y+36	; 0x24
 200:	8d a1       	ldd	r24, Y+37	; 0x25
 202:	9e a1       	ldd	r25, Y+38	; 0x26
 204:	20 e0       	ldi	r18, 0x00	; 0
 206:	3f ef       	ldi	r19, 0xFF	; 255
 208:	4f e7       	ldi	r20, 0x7F	; 127
 20a:	57 e4       	ldi	r21, 0x47	; 71
 20c:	46 d4       	rcall	.+2188   	; 0xa9a <__gtsf2>
 20e:	18 16       	cp	r1, r24
 210:	3c f5       	brge	.+78     	; 0x260 <main+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 212:	6f a1       	ldd	r22, Y+39	; 0x27
 214:	78 a5       	ldd	r23, Y+40	; 0x28
 216:	89 a5       	ldd	r24, Y+41	; 0x29
 218:	9a a5       	ldd	r25, Y+42	; 0x2a
 21a:	20 e0       	ldi	r18, 0x00	; 0
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	40 e2       	ldi	r20, 0x20	; 32
 220:	51 e4       	ldi	r21, 0x41	; 65
 222:	46 d3       	rcall	.+1676   	; 0x8b0 <__mulsf3>
 224:	dc 01       	movw	r26, r24
 226:	cb 01       	movw	r24, r22
 228:	bc 01       	movw	r22, r24
 22a:	cd 01       	movw	r24, r26
 22c:	7d d1       	rcall	.+762    	; 0x528 <__fixunssfsi>
 22e:	dc 01       	movw	r26, r24
 230:	cb 01       	movw	r24, r22
 232:	9a a3       	std	Y+34, r25	; 0x22
 234:	89 a3       	std	Y+33, r24	; 0x21
 236:	0f c0       	rjmp	.+30     	; 0x256 <main+0x138>
 238:	88 ec       	ldi	r24, 0xC8	; 200
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	98 a3       	std	Y+32, r25	; 0x20
 23e:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 240:	8f 8d       	ldd	r24, Y+31	; 0x1f
 242:	98 a1       	ldd	r25, Y+32	; 0x20
 244:	01 97       	sbiw	r24, 0x01	; 1
 246:	f1 f7       	brne	.-4      	; 0x244 <main+0x126>
 248:	98 a3       	std	Y+32, r25	; 0x20
 24a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 24c:	89 a1       	ldd	r24, Y+33	; 0x21
 24e:	9a a1       	ldd	r25, Y+34	; 0x22
 250:	01 97       	sbiw	r24, 0x01	; 1
 252:	9a a3       	std	Y+34, r25	; 0x22
 254:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 256:	89 a1       	ldd	r24, Y+33	; 0x21
 258:	9a a1       	ldd	r25, Y+34	; 0x22
 25a:	00 97       	sbiw	r24, 0x00	; 0
 25c:	69 f7       	brne	.-38     	; 0x238 <main+0x11a>
 25e:	13 c0       	rjmp	.+38     	; 0x286 <main+0x168>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 260:	6b a1       	ldd	r22, Y+35	; 0x23
 262:	7c a1       	ldd	r23, Y+36	; 0x24
 264:	8d a1       	ldd	r24, Y+37	; 0x25
 266:	9e a1       	ldd	r25, Y+38	; 0x26
 268:	5f d1       	rcall	.+702    	; 0x528 <__fixunssfsi>
 26a:	dc 01       	movw	r26, r24
 26c:	cb 01       	movw	r24, r22
 26e:	9a a3       	std	Y+34, r25	; 0x22
 270:	89 a3       	std	Y+33, r24	; 0x21
 272:	89 a1       	ldd	r24, Y+33	; 0x21
 274:	9a a1       	ldd	r25, Y+34	; 0x22
 276:	9e 8f       	std	Y+30, r25	; 0x1e
 278:	8d 8f       	std	Y+29, r24	; 0x1d
 27a:	8d 8d       	ldd	r24, Y+29	; 0x1d
 27c:	9e 8d       	ldd	r25, Y+30	; 0x1e
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <main+0x160>
 282:	9e 8f       	std	Y+30, r25	; 0x1e
 284:	8d 8f       	std	Y+29, r24	; 0x1d

	for (;;)
	{
		_delay_ms(100);
		int bTuerKontakt = !(PINB & (1 << PB0));
 286:	e6 e3       	ldi	r30, 0x36	; 54
 288:	f0 e0       	ldi	r31, 0x00	; 0
 28a:	80 81       	ld	r24, Z
 28c:	88 2f       	mov	r24, r24
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	81 70       	andi	r24, 0x01	; 1
 292:	90 70       	andi	r25, 0x00	; 0
 294:	1e a6       	std	Y+46, r1	; 0x2e
 296:	1d a6       	std	Y+45, r1	; 0x2d
 298:	00 97       	sbiw	r24, 0x00	; 0
 29a:	21 f4       	brne	.+8      	; 0x2a4 <main+0x186>
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	9e a7       	std	Y+46, r25	; 0x2e
 2a2:	8d a7       	std	Y+45, r24	; 0x2d
		int bRFIDFreigabe = PINB & (1 << PB6);
 2a4:	e6 e3       	ldi	r30, 0x36	; 54
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	88 2f       	mov	r24, r24
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	80 74       	andi	r24, 0x40	; 64
 2b0:	90 70       	andi	r25, 0x00	; 0
 2b2:	9c a7       	std	Y+44, r25	; 0x2c
 2b4:	8b a7       	std	Y+43, r24	; 0x2b
		//    int bRFIDFehler = PINB & (1 << PB0);

		if ((uiServoSoll == ServoRiegelOffen) && (uiDelay == 0))
 2b6:	8f a5       	ldd	r24, Y+47	; 0x2f
 2b8:	85 3a       	cpi	r24, 0xA5	; 165
 2ba:	09 f0       	breq	.+2      	; 0x2be <main+0x1a0>
 2bc:	99 c0       	rjmp	.+306    	; 0x3f0 <main+0x2d2>
 2be:	8a a9       	ldd	r24, Y+50	; 0x32
 2c0:	9b a9       	ldd	r25, Y+51	; 0x33
 2c2:	00 97       	sbiw	r24, 0x00	; 0
 2c4:	09 f0       	breq	.+2      	; 0x2c8 <main+0x1aa>
 2c6:	94 c0       	rjmp	.+296    	; 0x3f0 <main+0x2d2>
		{
			if (!bTuerKontakt)
 2c8:	8d a5       	ldd	r24, Y+45	; 0x2d
 2ca:	9e a5       	ldd	r25, Y+46	; 0x2e
 2cc:	00 97       	sbiw	r24, 0x00	; 0
 2ce:	29 f4       	brne	.+10     	; 0x2da <main+0x1bc>
			{
				uiDelayClose = SchliessVerzoegerung;
 2d0:	84 e0       	ldi	r24, 0x04	; 4
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	99 ab       	std	Y+49, r25	; 0x31
 2d6:	88 ab       	std	Y+48, r24	; 0x30
 2d8:	1c c1       	rjmp	.+568    	; 0x512 <main+0x3f4>
			}
			else if (uiDelayClose)
 2da:	88 a9       	ldd	r24, Y+48	; 0x30
 2dc:	99 a9       	ldd	r25, Y+49	; 0x31
 2de:	00 97       	sbiw	r24, 0x00	; 0
 2e0:	31 f0       	breq	.+12     	; 0x2ee <main+0x1d0>
			{
				uiDelayClose--;
 2e2:	88 a9       	ldd	r24, Y+48	; 0x30
 2e4:	99 a9       	ldd	r25, Y+49	; 0x31
 2e6:	01 97       	sbiw	r24, 0x01	; 1
 2e8:	99 ab       	std	Y+49, r25	; 0x31
 2ea:	88 ab       	std	Y+48, r24	; 0x30
 2ec:	12 c1       	rjmp	.+548    	; 0x512 <main+0x3f4>
			}
			else
			{
				uiServoSoll = ServoRiegelZu;
 2ee:	8a e2       	ldi	r24, 0x2A	; 42
 2f0:	8f a7       	std	Y+47, r24	; 0x2f
				OCR0A = uiServoSoll;
 2f2:	e6 e5       	ldi	r30, 0x56	; 86
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	8f a5       	ldd	r24, Y+47	; 0x2f
 2f8:	80 83       	st	Z, r24
				PORTD |= (1 << PD5);
 2fa:	a2 e3       	ldi	r26, 0x32	; 50
 2fc:	b0 e0       	ldi	r27, 0x00	; 0
 2fe:	e2 e3       	ldi	r30, 0x32	; 50
 300:	f0 e0       	ldi	r31, 0x00	; 0
 302:	80 81       	ld	r24, Z
 304:	80 62       	ori	r24, 0x20	; 32
 306:	8c 93       	st	X, r24
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	aa e7       	ldi	r26, 0x7A	; 122
 30e:	b4 e4       	ldi	r27, 0x44	; 68
 310:	89 8f       	std	Y+25, r24	; 0x19
 312:	9a 8f       	std	Y+26, r25	; 0x1a
 314:	ab 8f       	std	Y+27, r26	; 0x1b
 316:	bc 8f       	std	Y+28, r27	; 0x1c
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
 318:	69 8d       	ldd	r22, Y+25	; 0x19
 31a:	7a 8d       	ldd	r23, Y+26	; 0x1a
 31c:	8b 8d       	ldd	r24, Y+27	; 0x1b
 31e:	9c 8d       	ldd	r25, Y+28	; 0x1c
 320:	20 e0       	ldi	r18, 0x00	; 0
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	4a ef       	ldi	r20, 0xFA	; 250
 326:	54 e4       	ldi	r21, 0x44	; 68
 328:	c3 d2       	rcall	.+1414   	; 0x8b0 <__mulsf3>
 32a:	dc 01       	movw	r26, r24
 32c:	cb 01       	movw	r24, r22
 32e:	8d 8b       	std	Y+21, r24	; 0x15
 330:	9e 8b       	std	Y+22, r25	; 0x16
 332:	af 8b       	std	Y+23, r26	; 0x17
 334:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
 336:	6d 89       	ldd	r22, Y+21	; 0x15
 338:	7e 89       	ldd	r23, Y+22	; 0x16
 33a:	8f 89       	ldd	r24, Y+23	; 0x17
 33c:	98 8d       	ldd	r25, Y+24	; 0x18
 33e:	20 e0       	ldi	r18, 0x00	; 0
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	40 e8       	ldi	r20, 0x80	; 128
 344:	5f e3       	ldi	r21, 0x3F	; 63
 346:	ff d3       	rcall	.+2046   	; 0xb46 <__ltsf2>
 348:	88 23       	and	r24, r24
 34a:	2c f4       	brge	.+10     	; 0x356 <main+0x238>
		__ticks = 1;
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	9c 8b       	std	Y+20, r25	; 0x14
 352:	8b 8b       	std	Y+19, r24	; 0x13
 354:	3b c0       	rjmp	.+118    	; 0x3cc <main+0x2ae>
	else if (__tmp > 65535)
 356:	6d 89       	ldd	r22, Y+21	; 0x15
 358:	7e 89       	ldd	r23, Y+22	; 0x16
 35a:	8f 89       	ldd	r24, Y+23	; 0x17
 35c:	98 8d       	ldd	r25, Y+24	; 0x18
 35e:	20 e0       	ldi	r18, 0x00	; 0
 360:	3f ef       	ldi	r19, 0xFF	; 255
 362:	4f e7       	ldi	r20, 0x7F	; 127
 364:	57 e4       	ldi	r21, 0x47	; 71
 366:	99 d3       	rcall	.+1842   	; 0xa9a <__gtsf2>
 368:	18 16       	cp	r1, r24
 36a:	3c f5       	brge	.+78     	; 0x3ba <main+0x29c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 36c:	69 8d       	ldd	r22, Y+25	; 0x19
 36e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 370:	8b 8d       	ldd	r24, Y+27	; 0x1b
 372:	9c 8d       	ldd	r25, Y+28	; 0x1c
 374:	20 e0       	ldi	r18, 0x00	; 0
 376:	30 e0       	ldi	r19, 0x00	; 0
 378:	40 e2       	ldi	r20, 0x20	; 32
 37a:	51 e4       	ldi	r21, 0x41	; 65
 37c:	99 d2       	rcall	.+1330   	; 0x8b0 <__mulsf3>
 37e:	dc 01       	movw	r26, r24
 380:	cb 01       	movw	r24, r22
 382:	bc 01       	movw	r22, r24
 384:	cd 01       	movw	r24, r26
 386:	d0 d0       	rcall	.+416    	; 0x528 <__fixunssfsi>
 388:	dc 01       	movw	r26, r24
 38a:	cb 01       	movw	r24, r22
 38c:	9c 8b       	std	Y+20, r25	; 0x14
 38e:	8b 8b       	std	Y+19, r24	; 0x13
 390:	0f c0       	rjmp	.+30     	; 0x3b0 <main+0x292>
 392:	88 ec       	ldi	r24, 0xC8	; 200
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	9a 8b       	std	Y+18, r25	; 0x12
 398:	89 8b       	std	Y+17, r24	; 0x11
 39a:	89 89       	ldd	r24, Y+17	; 0x11
 39c:	9a 89       	ldd	r25, Y+18	; 0x12
 39e:	01 97       	sbiw	r24, 0x01	; 1
 3a0:	f1 f7       	brne	.-4      	; 0x39e <main+0x280>
 3a2:	9a 8b       	std	Y+18, r25	; 0x12
 3a4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3a6:	8b 89       	ldd	r24, Y+19	; 0x13
 3a8:	9c 89       	ldd	r25, Y+20	; 0x14
 3aa:	01 97       	sbiw	r24, 0x01	; 1
 3ac:	9c 8b       	std	Y+20, r25	; 0x14
 3ae:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3b0:	8b 89       	ldd	r24, Y+19	; 0x13
 3b2:	9c 89       	ldd	r25, Y+20	; 0x14
 3b4:	00 97       	sbiw	r24, 0x00	; 0
 3b6:	69 f7       	brne	.-38     	; 0x392 <main+0x274>
 3b8:	13 c0       	rjmp	.+38     	; 0x3e0 <main+0x2c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 3ba:	6d 89       	ldd	r22, Y+21	; 0x15
 3bc:	7e 89       	ldd	r23, Y+22	; 0x16
 3be:	8f 89       	ldd	r24, Y+23	; 0x17
 3c0:	98 8d       	ldd	r25, Y+24	; 0x18
 3c2:	b2 d0       	rcall	.+356    	; 0x528 <__fixunssfsi>
 3c4:	dc 01       	movw	r26, r24
 3c6:	cb 01       	movw	r24, r22
 3c8:	9c 8b       	std	Y+20, r25	; 0x14
 3ca:	8b 8b       	std	Y+19, r24	; 0x13
 3cc:	8b 89       	ldd	r24, Y+19	; 0x13
 3ce:	9c 89       	ldd	r25, Y+20	; 0x14
 3d0:	98 8b       	std	Y+16, r25	; 0x10
 3d2:	8f 87       	std	Y+15, r24	; 0x0f
 3d4:	8f 85       	ldd	r24, Y+15	; 0x0f
 3d6:	98 89       	ldd	r25, Y+16	; 0x10
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <main+0x2ba>
 3dc:	98 8b       	std	Y+16, r25	; 0x10
 3de:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(1000);
				PORTD &= ~(1 << PD5);
 3e0:	a2 e3       	ldi	r26, 0x32	; 50
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	e2 e3       	ldi	r30, 0x32	; 50
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	80 81       	ld	r24, Z
 3ea:	8f 7d       	andi	r24, 0xDF	; 223
 3ec:	8c 93       	st	X, r24
 3ee:	91 c0       	rjmp	.+290    	; 0x512 <main+0x3f4>
			}
		}
		else if (bRFIDFreigabe && (uiServoSoll == ServoRiegelZu))
 3f0:	8b a5       	ldd	r24, Y+43	; 0x2b
 3f2:	9c a5       	ldd	r25, Y+44	; 0x2c
 3f4:	00 97       	sbiw	r24, 0x00	; 0
 3f6:	09 f4       	brne	.+2      	; 0x3fa <main+0x2dc>
 3f8:	8c c0       	rjmp	.+280    	; 0x512 <main+0x3f4>
 3fa:	8f a5       	ldd	r24, Y+47	; 0x2f
 3fc:	8a 32       	cpi	r24, 0x2A	; 42
 3fe:	09 f0       	breq	.+2      	; 0x402 <main+0x2e4>
 400:	88 c0       	rjmp	.+272    	; 0x512 <main+0x3f4>
		{
            uiDelayClose = SchliessVerzoegerung;
 402:	84 e0       	ldi	r24, 0x04	; 4
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	99 ab       	std	Y+49, r25	; 0x31
 408:	88 ab       	std	Y+48, r24	; 0x30
			uiServoSoll = ServoRiegelOffen;
 40a:	85 ea       	ldi	r24, 0xA5	; 165
 40c:	8f a7       	std	Y+47, r24	; 0x2f
			OCR0A = uiServoSoll;
 40e:	e6 e5       	ldi	r30, 0x56	; 86
 410:	f0 e0       	ldi	r31, 0x00	; 0
 412:	8f a5       	ldd	r24, Y+47	; 0x2f
 414:	80 83       	st	Z, r24
			uiDelay = FreigabeDauer;
 416:	88 e2       	ldi	r24, 0x28	; 40
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	9b ab       	std	Y+51, r25	; 0x33
 41c:	8a ab       	std	Y+50, r24	; 0x32
			PORTD |= (1 << PD5);
 41e:	a2 e3       	ldi	r26, 0x32	; 50
 420:	b0 e0       	ldi	r27, 0x00	; 0
 422:	e2 e3       	ldi	r30, 0x32	; 50
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	80 81       	ld	r24, Z
 428:	80 62       	ori	r24, 0x20	; 32
 42a:	8c 93       	st	X, r24
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	aa e7       	ldi	r26, 0x7A	; 122
 432:	b4 e4       	ldi	r27, 0x44	; 68
 434:	8b 87       	std	Y+11, r24	; 0x0b
 436:	9c 87       	std	Y+12, r25	; 0x0c
 438:	ad 87       	std	Y+13, r26	; 0x0d
 43a:	be 87       	std	Y+14, r27	; 0x0e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
 43c:	6b 85       	ldd	r22, Y+11	; 0x0b
 43e:	7c 85       	ldd	r23, Y+12	; 0x0c
 440:	8d 85       	ldd	r24, Y+13	; 0x0d
 442:	9e 85       	ldd	r25, Y+14	; 0x0e
 444:	20 e0       	ldi	r18, 0x00	; 0
 446:	30 e0       	ldi	r19, 0x00	; 0
 448:	4a ef       	ldi	r20, 0xFA	; 250
 44a:	54 e4       	ldi	r21, 0x44	; 68
 44c:	31 d2       	rcall	.+1122   	; 0x8b0 <__mulsf3>
 44e:	dc 01       	movw	r26, r24
 450:	cb 01       	movw	r24, r22
 452:	8f 83       	std	Y+7, r24	; 0x07
 454:	98 87       	std	Y+8, r25	; 0x08
 456:	a9 87       	std	Y+9, r26	; 0x09
 458:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 45a:	6f 81       	ldd	r22, Y+7	; 0x07
 45c:	78 85       	ldd	r23, Y+8	; 0x08
 45e:	89 85       	ldd	r24, Y+9	; 0x09
 460:	9a 85       	ldd	r25, Y+10	; 0x0a
 462:	20 e0       	ldi	r18, 0x00	; 0
 464:	30 e0       	ldi	r19, 0x00	; 0
 466:	40 e8       	ldi	r20, 0x80	; 128
 468:	5f e3       	ldi	r21, 0x3F	; 63
 46a:	6d d3       	rcall	.+1754   	; 0xb46 <__ltsf2>
 46c:	88 23       	and	r24, r24
 46e:	2c f4       	brge	.+10     	; 0x47a <main+0x35c>
		__ticks = 1;
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	9e 83       	std	Y+6, r25	; 0x06
 476:	8d 83       	std	Y+5, r24	; 0x05
 478:	3b c0       	rjmp	.+118    	; 0x4f0 <main+0x3d2>
	else if (__tmp > 65535)
 47a:	6f 81       	ldd	r22, Y+7	; 0x07
 47c:	78 85       	ldd	r23, Y+8	; 0x08
 47e:	89 85       	ldd	r24, Y+9	; 0x09
 480:	9a 85       	ldd	r25, Y+10	; 0x0a
 482:	20 e0       	ldi	r18, 0x00	; 0
 484:	3f ef       	ldi	r19, 0xFF	; 255
 486:	4f e7       	ldi	r20, 0x7F	; 127
 488:	57 e4       	ldi	r21, 0x47	; 71
 48a:	07 d3       	rcall	.+1550   	; 0xa9a <__gtsf2>
 48c:	18 16       	cp	r1, r24
 48e:	3c f5       	brge	.+78     	; 0x4de <main+0x3c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 490:	6b 85       	ldd	r22, Y+11	; 0x0b
 492:	7c 85       	ldd	r23, Y+12	; 0x0c
 494:	8d 85       	ldd	r24, Y+13	; 0x0d
 496:	9e 85       	ldd	r25, Y+14	; 0x0e
 498:	20 e0       	ldi	r18, 0x00	; 0
 49a:	30 e0       	ldi	r19, 0x00	; 0
 49c:	40 e2       	ldi	r20, 0x20	; 32
 49e:	51 e4       	ldi	r21, 0x41	; 65
 4a0:	07 d2       	rcall	.+1038   	; 0x8b0 <__mulsf3>
 4a2:	dc 01       	movw	r26, r24
 4a4:	cb 01       	movw	r24, r22
 4a6:	bc 01       	movw	r22, r24
 4a8:	cd 01       	movw	r24, r26
 4aa:	3e d0       	rcall	.+124    	; 0x528 <__fixunssfsi>
 4ac:	dc 01       	movw	r26, r24
 4ae:	cb 01       	movw	r24, r22
 4b0:	9e 83       	std	Y+6, r25	; 0x06
 4b2:	8d 83       	std	Y+5, r24	; 0x05
 4b4:	0f c0       	rjmp	.+30     	; 0x4d4 <main+0x3b6>
 4b6:	88 ec       	ldi	r24, 0xC8	; 200
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	9c 83       	std	Y+4, r25	; 0x04
 4bc:	8b 83       	std	Y+3, r24	; 0x03
 4be:	8b 81       	ldd	r24, Y+3	; 0x03
 4c0:	9c 81       	ldd	r25, Y+4	; 0x04
 4c2:	01 97       	sbiw	r24, 0x01	; 1
 4c4:	f1 f7       	brne	.-4      	; 0x4c2 <main+0x3a4>
 4c6:	9c 83       	std	Y+4, r25	; 0x04
 4c8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4ca:	8d 81       	ldd	r24, Y+5	; 0x05
 4cc:	9e 81       	ldd	r25, Y+6	; 0x06
 4ce:	01 97       	sbiw	r24, 0x01	; 1
 4d0:	9e 83       	std	Y+6, r25	; 0x06
 4d2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 4d4:	8d 81       	ldd	r24, Y+5	; 0x05
 4d6:	9e 81       	ldd	r25, Y+6	; 0x06
 4d8:	00 97       	sbiw	r24, 0x00	; 0
 4da:	69 f7       	brne	.-38     	; 0x4b6 <main+0x398>
 4dc:	13 c0       	rjmp	.+38     	; 0x504 <main+0x3e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 4de:	6f 81       	ldd	r22, Y+7	; 0x07
 4e0:	78 85       	ldd	r23, Y+8	; 0x08
 4e2:	89 85       	ldd	r24, Y+9	; 0x09
 4e4:	9a 85       	ldd	r25, Y+10	; 0x0a
 4e6:	20 d0       	rcall	.+64     	; 0x528 <__fixunssfsi>
 4e8:	dc 01       	movw	r26, r24
 4ea:	cb 01       	movw	r24, r22
 4ec:	9e 83       	std	Y+6, r25	; 0x06
 4ee:	8d 83       	std	Y+5, r24	; 0x05
 4f0:	8d 81       	ldd	r24, Y+5	; 0x05
 4f2:	9e 81       	ldd	r25, Y+6	; 0x06
 4f4:	9a 83       	std	Y+2, r25	; 0x02
 4f6:	89 83       	std	Y+1, r24	; 0x01
 4f8:	89 81       	ldd	r24, Y+1	; 0x01
 4fa:	9a 81       	ldd	r25, Y+2	; 0x02
 4fc:	01 97       	sbiw	r24, 0x01	; 1
 4fe:	f1 f7       	brne	.-4      	; 0x4fc <main+0x3de>
 500:	9a 83       	std	Y+2, r25	; 0x02
 502:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(1000);
			PORTD &= ~(1 << PD5);
 504:	a2 e3       	ldi	r26, 0x32	; 50
 506:	b0 e0       	ldi	r27, 0x00	; 0
 508:	e2 e3       	ldi	r30, 0x32	; 50
 50a:	f0 e0       	ldi	r31, 0x00	; 0
 50c:	80 81       	ld	r24, Z
 50e:	8f 7d       	andi	r24, 0xDF	; 223
 510:	8c 93       	st	X, r24
		}
		if (uiDelay > 0)
 512:	8a a9       	ldd	r24, Y+50	; 0x32
 514:	9b a9       	ldd	r25, Y+51	; 0x33
 516:	00 97       	sbiw	r24, 0x00	; 0
 518:	09 f4       	brne	.+2      	; 0x51c <main+0x3fe>
 51a:	49 ce       	rjmp	.-878    	; 0x1ae <main+0x90>
		{
			uiDelay--;
 51c:	8a a9       	ldd	r24, Y+50	; 0x32
 51e:	9b a9       	ldd	r25, Y+51	; 0x33
 520:	01 97       	sbiw	r24, 0x01	; 1
 522:	9b ab       	std	Y+51, r25	; 0x33
 524:	8a ab       	std	Y+50, r24	; 0x32
 526:	43 ce       	rjmp	.-890    	; 0x1ae <main+0x90>

00000528 <__fixunssfsi>:
 528:	ef 92       	push	r14
 52a:	ff 92       	push	r15
 52c:	0f 93       	push	r16
 52e:	1f 93       	push	r17
 530:	7b 01       	movw	r14, r22
 532:	8c 01       	movw	r16, r24
 534:	20 e0       	ldi	r18, 0x00	; 0
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	40 e0       	ldi	r20, 0x00	; 0
 53a:	5f e4       	ldi	r21, 0x4F	; 79
 53c:	d9 d2       	rcall	.+1458   	; 0xaf0 <__gesf2>
 53e:	88 23       	and	r24, r24
 540:	7c f0       	brlt	.+30     	; 0x560 <__fixunssfsi+0x38>
 542:	c8 01       	movw	r24, r16
 544:	b7 01       	movw	r22, r14
 546:	20 e0       	ldi	r18, 0x00	; 0
 548:	30 e0       	ldi	r19, 0x00	; 0
 54a:	40 e0       	ldi	r20, 0x00	; 0
 54c:	5f e4       	ldi	r21, 0x4F	; 79
 54e:	5e d1       	rcall	.+700    	; 0x80c <__subsf3>
 550:	25 d3       	rcall	.+1610   	; 0xb9c <__fixsfsi>
 552:	9b 01       	movw	r18, r22
 554:	ac 01       	movw	r20, r24
 556:	20 50       	subi	r18, 0x00	; 0
 558:	30 40       	sbci	r19, 0x00	; 0
 55a:	40 40       	sbci	r20, 0x00	; 0
 55c:	50 48       	sbci	r21, 0x80	; 128
 55e:	05 c0       	rjmp	.+10     	; 0x56a <__fixunssfsi+0x42>
 560:	c8 01       	movw	r24, r16
 562:	b7 01       	movw	r22, r14
 564:	1b d3       	rcall	.+1590   	; 0xb9c <__fixsfsi>
 566:	9b 01       	movw	r18, r22
 568:	ac 01       	movw	r20, r24
 56a:	b9 01       	movw	r22, r18
 56c:	ca 01       	movw	r24, r20
 56e:	1f 91       	pop	r17
 570:	0f 91       	pop	r16
 572:	ff 90       	pop	r15
 574:	ef 90       	pop	r14
 576:	08 95       	ret

00000578 <_fpadd_parts>:
 578:	a0 e0       	ldi	r26, 0x00	; 0
 57a:	b0 e0       	ldi	r27, 0x00	; 0
 57c:	e1 ec       	ldi	r30, 0xC1	; 193
 57e:	f2 e0       	ldi	r31, 0x02	; 2
 580:	04 c5       	rjmp	.+2568   	; 0xf8a <__prologue_saves__>
 582:	dc 01       	movw	r26, r24
 584:	2b 01       	movw	r4, r22
 586:	fa 01       	movw	r30, r20
 588:	9c 91       	ld	r25, X
 58a:	92 30       	cpi	r25, 0x02	; 2
 58c:	08 f4       	brcc	.+2      	; 0x590 <_fpadd_parts+0x18>
 58e:	39 c1       	rjmp	.+626    	; 0x802 <_fpadd_parts+0x28a>
 590:	eb 01       	movw	r28, r22
 592:	88 81       	ld	r24, Y
 594:	82 30       	cpi	r24, 0x02	; 2
 596:	08 f4       	brcc	.+2      	; 0x59a <_fpadd_parts+0x22>
 598:	33 c1       	rjmp	.+614    	; 0x800 <_fpadd_parts+0x288>
 59a:	94 30       	cpi	r25, 0x04	; 4
 59c:	69 f4       	brne	.+26     	; 0x5b8 <_fpadd_parts+0x40>
 59e:	84 30       	cpi	r24, 0x04	; 4
 5a0:	09 f0       	breq	.+2      	; 0x5a4 <_fpadd_parts+0x2c>
 5a2:	2f c1       	rjmp	.+606    	; 0x802 <_fpadd_parts+0x28a>
 5a4:	11 96       	adiw	r26, 0x01	; 1
 5a6:	9c 91       	ld	r25, X
 5a8:	11 97       	sbiw	r26, 0x01	; 1
 5aa:	89 81       	ldd	r24, Y+1	; 0x01
 5ac:	98 17       	cp	r25, r24
 5ae:	09 f4       	brne	.+2      	; 0x5b2 <_fpadd_parts+0x3a>
 5b0:	28 c1       	rjmp	.+592    	; 0x802 <_fpadd_parts+0x28a>
 5b2:	a0 e6       	ldi	r26, 0x60	; 96
 5b4:	b0 e0       	ldi	r27, 0x00	; 0
 5b6:	25 c1       	rjmp	.+586    	; 0x802 <_fpadd_parts+0x28a>
 5b8:	84 30       	cpi	r24, 0x04	; 4
 5ba:	09 f4       	brne	.+2      	; 0x5be <_fpadd_parts+0x46>
 5bc:	21 c1       	rjmp	.+578    	; 0x800 <_fpadd_parts+0x288>
 5be:	82 30       	cpi	r24, 0x02	; 2
 5c0:	a9 f4       	brne	.+42     	; 0x5ec <_fpadd_parts+0x74>
 5c2:	92 30       	cpi	r25, 0x02	; 2
 5c4:	09 f0       	breq	.+2      	; 0x5c8 <_fpadd_parts+0x50>
 5c6:	1d c1       	rjmp	.+570    	; 0x802 <_fpadd_parts+0x28a>
 5c8:	9a 01       	movw	r18, r20
 5ca:	ad 01       	movw	r20, r26
 5cc:	88 e0       	ldi	r24, 0x08	; 8
 5ce:	ea 01       	movw	r28, r20
 5d0:	09 90       	ld	r0, Y+
 5d2:	ae 01       	movw	r20, r28
 5d4:	e9 01       	movw	r28, r18
 5d6:	09 92       	st	Y+, r0
 5d8:	9e 01       	movw	r18, r28
 5da:	81 50       	subi	r24, 0x01	; 1
 5dc:	c1 f7       	brne	.-16     	; 0x5ce <_fpadd_parts+0x56>
 5de:	e2 01       	movw	r28, r4
 5e0:	89 81       	ldd	r24, Y+1	; 0x01
 5e2:	11 96       	adiw	r26, 0x01	; 1
 5e4:	9c 91       	ld	r25, X
 5e6:	89 23       	and	r24, r25
 5e8:	81 83       	std	Z+1, r24	; 0x01
 5ea:	08 c1       	rjmp	.+528    	; 0x7fc <_fpadd_parts+0x284>
 5ec:	92 30       	cpi	r25, 0x02	; 2
 5ee:	09 f4       	brne	.+2      	; 0x5f2 <_fpadd_parts+0x7a>
 5f0:	07 c1       	rjmp	.+526    	; 0x800 <_fpadd_parts+0x288>
 5f2:	12 96       	adiw	r26, 0x02	; 2
 5f4:	2d 90       	ld	r2, X+
 5f6:	3c 90       	ld	r3, X
 5f8:	13 97       	sbiw	r26, 0x03	; 3
 5fa:	eb 01       	movw	r28, r22
 5fc:	8a 81       	ldd	r24, Y+2	; 0x02
 5fe:	9b 81       	ldd	r25, Y+3	; 0x03
 600:	14 96       	adiw	r26, 0x04	; 4
 602:	ad 90       	ld	r10, X+
 604:	bd 90       	ld	r11, X+
 606:	cd 90       	ld	r12, X+
 608:	dc 90       	ld	r13, X
 60a:	17 97       	sbiw	r26, 0x07	; 7
 60c:	ec 80       	ldd	r14, Y+4	; 0x04
 60e:	fd 80       	ldd	r15, Y+5	; 0x05
 610:	0e 81       	ldd	r16, Y+6	; 0x06
 612:	1f 81       	ldd	r17, Y+7	; 0x07
 614:	91 01       	movw	r18, r2
 616:	28 1b       	sub	r18, r24
 618:	39 0b       	sbc	r19, r25
 61a:	b9 01       	movw	r22, r18
 61c:	37 ff       	sbrs	r19, 7
 61e:	04 c0       	rjmp	.+8      	; 0x628 <_fpadd_parts+0xb0>
 620:	66 27       	eor	r22, r22
 622:	77 27       	eor	r23, r23
 624:	62 1b       	sub	r22, r18
 626:	73 0b       	sbc	r23, r19
 628:	60 32       	cpi	r22, 0x20	; 32
 62a:	71 05       	cpc	r23, r1
 62c:	0c f0       	brlt	.+2      	; 0x630 <_fpadd_parts+0xb8>
 62e:	61 c0       	rjmp	.+194    	; 0x6f2 <_fpadd_parts+0x17a>
 630:	12 16       	cp	r1, r18
 632:	13 06       	cpc	r1, r19
 634:	6c f5       	brge	.+90     	; 0x690 <_fpadd_parts+0x118>
 636:	37 01       	movw	r6, r14
 638:	48 01       	movw	r8, r16
 63a:	06 2e       	mov	r0, r22
 63c:	04 c0       	rjmp	.+8      	; 0x646 <_fpadd_parts+0xce>
 63e:	96 94       	lsr	r9
 640:	87 94       	ror	r8
 642:	77 94       	ror	r7
 644:	67 94       	ror	r6
 646:	0a 94       	dec	r0
 648:	d2 f7       	brpl	.-12     	; 0x63e <_fpadd_parts+0xc6>
 64a:	21 e0       	ldi	r18, 0x01	; 1
 64c:	30 e0       	ldi	r19, 0x00	; 0
 64e:	40 e0       	ldi	r20, 0x00	; 0
 650:	50 e0       	ldi	r21, 0x00	; 0
 652:	04 c0       	rjmp	.+8      	; 0x65c <_fpadd_parts+0xe4>
 654:	22 0f       	add	r18, r18
 656:	33 1f       	adc	r19, r19
 658:	44 1f       	adc	r20, r20
 65a:	55 1f       	adc	r21, r21
 65c:	6a 95       	dec	r22
 65e:	d2 f7       	brpl	.-12     	; 0x654 <_fpadd_parts+0xdc>
 660:	21 50       	subi	r18, 0x01	; 1
 662:	30 40       	sbci	r19, 0x00	; 0
 664:	40 40       	sbci	r20, 0x00	; 0
 666:	50 40       	sbci	r21, 0x00	; 0
 668:	2e 21       	and	r18, r14
 66a:	3f 21       	and	r19, r15
 66c:	40 23       	and	r20, r16
 66e:	51 23       	and	r21, r17
 670:	21 15       	cp	r18, r1
 672:	31 05       	cpc	r19, r1
 674:	41 05       	cpc	r20, r1
 676:	51 05       	cpc	r21, r1
 678:	21 f0       	breq	.+8      	; 0x682 <_fpadd_parts+0x10a>
 67a:	21 e0       	ldi	r18, 0x01	; 1
 67c:	30 e0       	ldi	r19, 0x00	; 0
 67e:	40 e0       	ldi	r20, 0x00	; 0
 680:	50 e0       	ldi	r21, 0x00	; 0
 682:	79 01       	movw	r14, r18
 684:	8a 01       	movw	r16, r20
 686:	e6 28       	or	r14, r6
 688:	f7 28       	or	r15, r7
 68a:	08 29       	or	r16, r8
 68c:	19 29       	or	r17, r9
 68e:	3c c0       	rjmp	.+120    	; 0x708 <_fpadd_parts+0x190>
 690:	23 2b       	or	r18, r19
 692:	d1 f1       	breq	.+116    	; 0x708 <_fpadd_parts+0x190>
 694:	26 0e       	add	r2, r22
 696:	37 1e       	adc	r3, r23
 698:	35 01       	movw	r6, r10
 69a:	46 01       	movw	r8, r12
 69c:	06 2e       	mov	r0, r22
 69e:	04 c0       	rjmp	.+8      	; 0x6a8 <_fpadd_parts+0x130>
 6a0:	96 94       	lsr	r9
 6a2:	87 94       	ror	r8
 6a4:	77 94       	ror	r7
 6a6:	67 94       	ror	r6
 6a8:	0a 94       	dec	r0
 6aa:	d2 f7       	brpl	.-12     	; 0x6a0 <_fpadd_parts+0x128>
 6ac:	21 e0       	ldi	r18, 0x01	; 1
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	40 e0       	ldi	r20, 0x00	; 0
 6b2:	50 e0       	ldi	r21, 0x00	; 0
 6b4:	04 c0       	rjmp	.+8      	; 0x6be <_fpadd_parts+0x146>
 6b6:	22 0f       	add	r18, r18
 6b8:	33 1f       	adc	r19, r19
 6ba:	44 1f       	adc	r20, r20
 6bc:	55 1f       	adc	r21, r21
 6be:	6a 95       	dec	r22
 6c0:	d2 f7       	brpl	.-12     	; 0x6b6 <_fpadd_parts+0x13e>
 6c2:	21 50       	subi	r18, 0x01	; 1
 6c4:	30 40       	sbci	r19, 0x00	; 0
 6c6:	40 40       	sbci	r20, 0x00	; 0
 6c8:	50 40       	sbci	r21, 0x00	; 0
 6ca:	2a 21       	and	r18, r10
 6cc:	3b 21       	and	r19, r11
 6ce:	4c 21       	and	r20, r12
 6d0:	5d 21       	and	r21, r13
 6d2:	21 15       	cp	r18, r1
 6d4:	31 05       	cpc	r19, r1
 6d6:	41 05       	cpc	r20, r1
 6d8:	51 05       	cpc	r21, r1
 6da:	21 f0       	breq	.+8      	; 0x6e4 <_fpadd_parts+0x16c>
 6dc:	21 e0       	ldi	r18, 0x01	; 1
 6de:	30 e0       	ldi	r19, 0x00	; 0
 6e0:	40 e0       	ldi	r20, 0x00	; 0
 6e2:	50 e0       	ldi	r21, 0x00	; 0
 6e4:	59 01       	movw	r10, r18
 6e6:	6a 01       	movw	r12, r20
 6e8:	a6 28       	or	r10, r6
 6ea:	b7 28       	or	r11, r7
 6ec:	c8 28       	or	r12, r8
 6ee:	d9 28       	or	r13, r9
 6f0:	0b c0       	rjmp	.+22     	; 0x708 <_fpadd_parts+0x190>
 6f2:	82 15       	cp	r24, r2
 6f4:	93 05       	cpc	r25, r3
 6f6:	2c f0       	brlt	.+10     	; 0x702 <_fpadd_parts+0x18a>
 6f8:	1c 01       	movw	r2, r24
 6fa:	aa 24       	eor	r10, r10
 6fc:	bb 24       	eor	r11, r11
 6fe:	65 01       	movw	r12, r10
 700:	03 c0       	rjmp	.+6      	; 0x708 <_fpadd_parts+0x190>
 702:	ee 24       	eor	r14, r14
 704:	ff 24       	eor	r15, r15
 706:	87 01       	movw	r16, r14
 708:	11 96       	adiw	r26, 0x01	; 1
 70a:	9c 91       	ld	r25, X
 70c:	d2 01       	movw	r26, r4
 70e:	11 96       	adiw	r26, 0x01	; 1
 710:	8c 91       	ld	r24, X
 712:	98 17       	cp	r25, r24
 714:	09 f4       	brne	.+2      	; 0x718 <_fpadd_parts+0x1a0>
 716:	45 c0       	rjmp	.+138    	; 0x7a2 <_fpadd_parts+0x22a>
 718:	99 23       	and	r25, r25
 71a:	39 f0       	breq	.+14     	; 0x72a <_fpadd_parts+0x1b2>
 71c:	a8 01       	movw	r20, r16
 71e:	97 01       	movw	r18, r14
 720:	2a 19       	sub	r18, r10
 722:	3b 09       	sbc	r19, r11
 724:	4c 09       	sbc	r20, r12
 726:	5d 09       	sbc	r21, r13
 728:	06 c0       	rjmp	.+12     	; 0x736 <_fpadd_parts+0x1be>
 72a:	a6 01       	movw	r20, r12
 72c:	95 01       	movw	r18, r10
 72e:	2e 19       	sub	r18, r14
 730:	3f 09       	sbc	r19, r15
 732:	40 0b       	sbc	r20, r16
 734:	51 0b       	sbc	r21, r17
 736:	57 fd       	sbrc	r21, 7
 738:	08 c0       	rjmp	.+16     	; 0x74a <_fpadd_parts+0x1d2>
 73a:	11 82       	std	Z+1, r1	; 0x01
 73c:	33 82       	std	Z+3, r3	; 0x03
 73e:	22 82       	std	Z+2, r2	; 0x02
 740:	24 83       	std	Z+4, r18	; 0x04
 742:	35 83       	std	Z+5, r19	; 0x05
 744:	46 83       	std	Z+6, r20	; 0x06
 746:	57 83       	std	Z+7, r21	; 0x07
 748:	1d c0       	rjmp	.+58     	; 0x784 <_fpadd_parts+0x20c>
 74a:	81 e0       	ldi	r24, 0x01	; 1
 74c:	81 83       	std	Z+1, r24	; 0x01
 74e:	33 82       	std	Z+3, r3	; 0x03
 750:	22 82       	std	Z+2, r2	; 0x02
 752:	88 27       	eor	r24, r24
 754:	99 27       	eor	r25, r25
 756:	dc 01       	movw	r26, r24
 758:	82 1b       	sub	r24, r18
 75a:	93 0b       	sbc	r25, r19
 75c:	a4 0b       	sbc	r26, r20
 75e:	b5 0b       	sbc	r27, r21
 760:	84 83       	std	Z+4, r24	; 0x04
 762:	95 83       	std	Z+5, r25	; 0x05
 764:	a6 83       	std	Z+6, r26	; 0x06
 766:	b7 83       	std	Z+7, r27	; 0x07
 768:	0d c0       	rjmp	.+26     	; 0x784 <_fpadd_parts+0x20c>
 76a:	22 0f       	add	r18, r18
 76c:	33 1f       	adc	r19, r19
 76e:	44 1f       	adc	r20, r20
 770:	55 1f       	adc	r21, r21
 772:	24 83       	std	Z+4, r18	; 0x04
 774:	35 83       	std	Z+5, r19	; 0x05
 776:	46 83       	std	Z+6, r20	; 0x06
 778:	57 83       	std	Z+7, r21	; 0x07
 77a:	82 81       	ldd	r24, Z+2	; 0x02
 77c:	93 81       	ldd	r25, Z+3	; 0x03
 77e:	01 97       	sbiw	r24, 0x01	; 1
 780:	93 83       	std	Z+3, r25	; 0x03
 782:	82 83       	std	Z+2, r24	; 0x02
 784:	24 81       	ldd	r18, Z+4	; 0x04
 786:	35 81       	ldd	r19, Z+5	; 0x05
 788:	46 81       	ldd	r20, Z+6	; 0x06
 78a:	57 81       	ldd	r21, Z+7	; 0x07
 78c:	da 01       	movw	r26, r20
 78e:	c9 01       	movw	r24, r18
 790:	01 97       	sbiw	r24, 0x01	; 1
 792:	a1 09       	sbc	r26, r1
 794:	b1 09       	sbc	r27, r1
 796:	8f 5f       	subi	r24, 0xFF	; 255
 798:	9f 4f       	sbci	r25, 0xFF	; 255
 79a:	af 4f       	sbci	r26, 0xFF	; 255
 79c:	bf 43       	sbci	r27, 0x3F	; 63
 79e:	28 f3       	brcs	.-54     	; 0x76a <_fpadd_parts+0x1f2>
 7a0:	0b c0       	rjmp	.+22     	; 0x7b8 <_fpadd_parts+0x240>
 7a2:	91 83       	std	Z+1, r25	; 0x01
 7a4:	33 82       	std	Z+3, r3	; 0x03
 7a6:	22 82       	std	Z+2, r2	; 0x02
 7a8:	ea 0c       	add	r14, r10
 7aa:	fb 1c       	adc	r15, r11
 7ac:	0c 1d       	adc	r16, r12
 7ae:	1d 1d       	adc	r17, r13
 7b0:	e4 82       	std	Z+4, r14	; 0x04
 7b2:	f5 82       	std	Z+5, r15	; 0x05
 7b4:	06 83       	std	Z+6, r16	; 0x06
 7b6:	17 83       	std	Z+7, r17	; 0x07
 7b8:	83 e0       	ldi	r24, 0x03	; 3
 7ba:	80 83       	st	Z, r24
 7bc:	24 81       	ldd	r18, Z+4	; 0x04
 7be:	35 81       	ldd	r19, Z+5	; 0x05
 7c0:	46 81       	ldd	r20, Z+6	; 0x06
 7c2:	57 81       	ldd	r21, Z+7	; 0x07
 7c4:	57 ff       	sbrs	r21, 7
 7c6:	1a c0       	rjmp	.+52     	; 0x7fc <_fpadd_parts+0x284>
 7c8:	c9 01       	movw	r24, r18
 7ca:	aa 27       	eor	r26, r26
 7cc:	97 fd       	sbrc	r25, 7
 7ce:	a0 95       	com	r26
 7d0:	ba 2f       	mov	r27, r26
 7d2:	81 70       	andi	r24, 0x01	; 1
 7d4:	90 70       	andi	r25, 0x00	; 0
 7d6:	a0 70       	andi	r26, 0x00	; 0
 7d8:	b0 70       	andi	r27, 0x00	; 0
 7da:	56 95       	lsr	r21
 7dc:	47 95       	ror	r20
 7de:	37 95       	ror	r19
 7e0:	27 95       	ror	r18
 7e2:	82 2b       	or	r24, r18
 7e4:	93 2b       	or	r25, r19
 7e6:	a4 2b       	or	r26, r20
 7e8:	b5 2b       	or	r27, r21
 7ea:	84 83       	std	Z+4, r24	; 0x04
 7ec:	95 83       	std	Z+5, r25	; 0x05
 7ee:	a6 83       	std	Z+6, r26	; 0x06
 7f0:	b7 83       	std	Z+7, r27	; 0x07
 7f2:	82 81       	ldd	r24, Z+2	; 0x02
 7f4:	93 81       	ldd	r25, Z+3	; 0x03
 7f6:	01 96       	adiw	r24, 0x01	; 1
 7f8:	93 83       	std	Z+3, r25	; 0x03
 7fa:	82 83       	std	Z+2, r24	; 0x02
 7fc:	df 01       	movw	r26, r30
 7fe:	01 c0       	rjmp	.+2      	; 0x802 <_fpadd_parts+0x28a>
 800:	d2 01       	movw	r26, r4
 802:	cd 01       	movw	r24, r26
 804:	cd b7       	in	r28, 0x3d	; 61
 806:	de b7       	in	r29, 0x3e	; 62
 808:	e2 e1       	ldi	r30, 0x12	; 18
 80a:	db c3       	rjmp	.+1974   	; 0xfc2 <__epilogue_restores__>

0000080c <__subsf3>:
 80c:	a0 e2       	ldi	r26, 0x20	; 32
 80e:	b0 e0       	ldi	r27, 0x00	; 0
 810:	eb e0       	ldi	r30, 0x0B	; 11
 812:	f4 e0       	ldi	r31, 0x04	; 4
 814:	c6 c3       	rjmp	.+1932   	; 0xfa2 <__prologue_saves__+0x18>
 816:	69 83       	std	Y+1, r22	; 0x01
 818:	7a 83       	std	Y+2, r23	; 0x02
 81a:	8b 83       	std	Y+3, r24	; 0x03
 81c:	9c 83       	std	Y+4, r25	; 0x04
 81e:	2d 83       	std	Y+5, r18	; 0x05
 820:	3e 83       	std	Y+6, r19	; 0x06
 822:	4f 83       	std	Y+7, r20	; 0x07
 824:	58 87       	std	Y+8, r21	; 0x08
 826:	e9 e0       	ldi	r30, 0x09	; 9
 828:	ee 2e       	mov	r14, r30
 82a:	f1 2c       	mov	r15, r1
 82c:	ec 0e       	add	r14, r28
 82e:	fd 1e       	adc	r15, r29
 830:	ce 01       	movw	r24, r28
 832:	01 96       	adiw	r24, 0x01	; 1
 834:	b7 01       	movw	r22, r14
 836:	d8 d2       	rcall	.+1456   	; 0xde8 <__unpack_f>
 838:	8e 01       	movw	r16, r28
 83a:	0f 5e       	subi	r16, 0xEF	; 239
 83c:	1f 4f       	sbci	r17, 0xFF	; 255
 83e:	ce 01       	movw	r24, r28
 840:	05 96       	adiw	r24, 0x05	; 5
 842:	b8 01       	movw	r22, r16
 844:	d1 d2       	rcall	.+1442   	; 0xde8 <__unpack_f>
 846:	8a 89       	ldd	r24, Y+18	; 0x12
 848:	91 e0       	ldi	r25, 0x01	; 1
 84a:	89 27       	eor	r24, r25
 84c:	8a 8b       	std	Y+18, r24	; 0x12
 84e:	c7 01       	movw	r24, r14
 850:	b8 01       	movw	r22, r16
 852:	ae 01       	movw	r20, r28
 854:	47 5e       	subi	r20, 0xE7	; 231
 856:	5f 4f       	sbci	r21, 0xFF	; 255
 858:	8f de       	rcall	.-738    	; 0x578 <_fpadd_parts>
 85a:	f1 d1       	rcall	.+994    	; 0xc3e <__pack_f>
 85c:	a0 96       	adiw	r28, 0x20	; 32
 85e:	e6 e0       	ldi	r30, 0x06	; 6
 860:	bc c3       	rjmp	.+1912   	; 0xfda <__epilogue_restores__+0x18>

00000862 <__addsf3>:
 862:	a0 e2       	ldi	r26, 0x20	; 32
 864:	b0 e0       	ldi	r27, 0x00	; 0
 866:	e6 e3       	ldi	r30, 0x36	; 54
 868:	f4 e0       	ldi	r31, 0x04	; 4
 86a:	9b c3       	rjmp	.+1846   	; 0xfa2 <__prologue_saves__+0x18>
 86c:	69 83       	std	Y+1, r22	; 0x01
 86e:	7a 83       	std	Y+2, r23	; 0x02
 870:	8b 83       	std	Y+3, r24	; 0x03
 872:	9c 83       	std	Y+4, r25	; 0x04
 874:	2d 83       	std	Y+5, r18	; 0x05
 876:	3e 83       	std	Y+6, r19	; 0x06
 878:	4f 83       	std	Y+7, r20	; 0x07
 87a:	58 87       	std	Y+8, r21	; 0x08
 87c:	f9 e0       	ldi	r31, 0x09	; 9
 87e:	ef 2e       	mov	r14, r31
 880:	f1 2c       	mov	r15, r1
 882:	ec 0e       	add	r14, r28
 884:	fd 1e       	adc	r15, r29
 886:	ce 01       	movw	r24, r28
 888:	01 96       	adiw	r24, 0x01	; 1
 88a:	b7 01       	movw	r22, r14
 88c:	ad d2       	rcall	.+1370   	; 0xde8 <__unpack_f>
 88e:	8e 01       	movw	r16, r28
 890:	0f 5e       	subi	r16, 0xEF	; 239
 892:	1f 4f       	sbci	r17, 0xFF	; 255
 894:	ce 01       	movw	r24, r28
 896:	05 96       	adiw	r24, 0x05	; 5
 898:	b8 01       	movw	r22, r16
 89a:	a6 d2       	rcall	.+1356   	; 0xde8 <__unpack_f>
 89c:	c7 01       	movw	r24, r14
 89e:	b8 01       	movw	r22, r16
 8a0:	ae 01       	movw	r20, r28
 8a2:	47 5e       	subi	r20, 0xE7	; 231
 8a4:	5f 4f       	sbci	r21, 0xFF	; 255
 8a6:	68 de       	rcall	.-816    	; 0x578 <_fpadd_parts>
 8a8:	ca d1       	rcall	.+916    	; 0xc3e <__pack_f>
 8aa:	a0 96       	adiw	r28, 0x20	; 32
 8ac:	e6 e0       	ldi	r30, 0x06	; 6
 8ae:	95 c3       	rjmp	.+1834   	; 0xfda <__epilogue_restores__+0x18>

000008b0 <__mulsf3>:
 8b0:	a0 e2       	ldi	r26, 0x20	; 32
 8b2:	b0 e0       	ldi	r27, 0x00	; 0
 8b4:	ed e5       	ldi	r30, 0x5D	; 93
 8b6:	f4 e0       	ldi	r31, 0x04	; 4
 8b8:	68 c3       	rjmp	.+1744   	; 0xf8a <__prologue_saves__>
 8ba:	69 83       	std	Y+1, r22	; 0x01
 8bc:	7a 83       	std	Y+2, r23	; 0x02
 8be:	8b 83       	std	Y+3, r24	; 0x03
 8c0:	9c 83       	std	Y+4, r25	; 0x04
 8c2:	2d 83       	std	Y+5, r18	; 0x05
 8c4:	3e 83       	std	Y+6, r19	; 0x06
 8c6:	4f 83       	std	Y+7, r20	; 0x07
 8c8:	58 87       	std	Y+8, r21	; 0x08
 8ca:	ce 01       	movw	r24, r28
 8cc:	01 96       	adiw	r24, 0x01	; 1
 8ce:	be 01       	movw	r22, r28
 8d0:	67 5f       	subi	r22, 0xF7	; 247
 8d2:	7f 4f       	sbci	r23, 0xFF	; 255
 8d4:	89 d2       	rcall	.+1298   	; 0xde8 <__unpack_f>
 8d6:	ce 01       	movw	r24, r28
 8d8:	05 96       	adiw	r24, 0x05	; 5
 8da:	be 01       	movw	r22, r28
 8dc:	6f 5e       	subi	r22, 0xEF	; 239
 8de:	7f 4f       	sbci	r23, 0xFF	; 255
 8e0:	83 d2       	rcall	.+1286   	; 0xde8 <__unpack_f>
 8e2:	99 85       	ldd	r25, Y+9	; 0x09
 8e4:	92 30       	cpi	r25, 0x02	; 2
 8e6:	88 f0       	brcs	.+34     	; 0x90a <__mulsf3+0x5a>
 8e8:	89 89       	ldd	r24, Y+17	; 0x11
 8ea:	82 30       	cpi	r24, 0x02	; 2
 8ec:	c8 f0       	brcs	.+50     	; 0x920 <__mulsf3+0x70>
 8ee:	94 30       	cpi	r25, 0x04	; 4
 8f0:	19 f4       	brne	.+6      	; 0x8f8 <__mulsf3+0x48>
 8f2:	82 30       	cpi	r24, 0x02	; 2
 8f4:	51 f4       	brne	.+20     	; 0x90a <__mulsf3+0x5a>
 8f6:	04 c0       	rjmp	.+8      	; 0x900 <__mulsf3+0x50>
 8f8:	84 30       	cpi	r24, 0x04	; 4
 8fa:	29 f4       	brne	.+10     	; 0x906 <__mulsf3+0x56>
 8fc:	92 30       	cpi	r25, 0x02	; 2
 8fe:	81 f4       	brne	.+32     	; 0x920 <__mulsf3+0x70>
 900:	80 e6       	ldi	r24, 0x60	; 96
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	c6 c0       	rjmp	.+396    	; 0xa92 <__mulsf3+0x1e2>
 906:	92 30       	cpi	r25, 0x02	; 2
 908:	49 f4       	brne	.+18     	; 0x91c <__mulsf3+0x6c>
 90a:	20 e0       	ldi	r18, 0x00	; 0
 90c:	9a 85       	ldd	r25, Y+10	; 0x0a
 90e:	8a 89       	ldd	r24, Y+18	; 0x12
 910:	98 13       	cpse	r25, r24
 912:	21 e0       	ldi	r18, 0x01	; 1
 914:	2a 87       	std	Y+10, r18	; 0x0a
 916:	ce 01       	movw	r24, r28
 918:	09 96       	adiw	r24, 0x09	; 9
 91a:	bb c0       	rjmp	.+374    	; 0xa92 <__mulsf3+0x1e2>
 91c:	82 30       	cpi	r24, 0x02	; 2
 91e:	49 f4       	brne	.+18     	; 0x932 <__mulsf3+0x82>
 920:	20 e0       	ldi	r18, 0x00	; 0
 922:	9a 85       	ldd	r25, Y+10	; 0x0a
 924:	8a 89       	ldd	r24, Y+18	; 0x12
 926:	98 13       	cpse	r25, r24
 928:	21 e0       	ldi	r18, 0x01	; 1
 92a:	2a 8b       	std	Y+18, r18	; 0x12
 92c:	ce 01       	movw	r24, r28
 92e:	41 96       	adiw	r24, 0x11	; 17
 930:	b0 c0       	rjmp	.+352    	; 0xa92 <__mulsf3+0x1e2>
 932:	2d 84       	ldd	r2, Y+13	; 0x0d
 934:	3e 84       	ldd	r3, Y+14	; 0x0e
 936:	4f 84       	ldd	r4, Y+15	; 0x0f
 938:	58 88       	ldd	r5, Y+16	; 0x10
 93a:	6d 88       	ldd	r6, Y+21	; 0x15
 93c:	7e 88       	ldd	r7, Y+22	; 0x16
 93e:	8f 88       	ldd	r8, Y+23	; 0x17
 940:	98 8c       	ldd	r9, Y+24	; 0x18
 942:	ee 24       	eor	r14, r14
 944:	ff 24       	eor	r15, r15
 946:	87 01       	movw	r16, r14
 948:	aa 24       	eor	r10, r10
 94a:	bb 24       	eor	r11, r11
 94c:	65 01       	movw	r12, r10
 94e:	40 e0       	ldi	r20, 0x00	; 0
 950:	50 e0       	ldi	r21, 0x00	; 0
 952:	60 e0       	ldi	r22, 0x00	; 0
 954:	70 e0       	ldi	r23, 0x00	; 0
 956:	e0 e0       	ldi	r30, 0x00	; 0
 958:	f0 e0       	ldi	r31, 0x00	; 0
 95a:	c1 01       	movw	r24, r2
 95c:	81 70       	andi	r24, 0x01	; 1
 95e:	90 70       	andi	r25, 0x00	; 0
 960:	89 2b       	or	r24, r25
 962:	e9 f0       	breq	.+58     	; 0x99e <__mulsf3+0xee>
 964:	e6 0c       	add	r14, r6
 966:	f7 1c       	adc	r15, r7
 968:	08 1d       	adc	r16, r8
 96a:	19 1d       	adc	r17, r9
 96c:	9a 01       	movw	r18, r20
 96e:	ab 01       	movw	r20, r22
 970:	2a 0d       	add	r18, r10
 972:	3b 1d       	adc	r19, r11
 974:	4c 1d       	adc	r20, r12
 976:	5d 1d       	adc	r21, r13
 978:	80 e0       	ldi	r24, 0x00	; 0
 97a:	90 e0       	ldi	r25, 0x00	; 0
 97c:	a0 e0       	ldi	r26, 0x00	; 0
 97e:	b0 e0       	ldi	r27, 0x00	; 0
 980:	e6 14       	cp	r14, r6
 982:	f7 04       	cpc	r15, r7
 984:	08 05       	cpc	r16, r8
 986:	19 05       	cpc	r17, r9
 988:	20 f4       	brcc	.+8      	; 0x992 <__mulsf3+0xe2>
 98a:	81 e0       	ldi	r24, 0x01	; 1
 98c:	90 e0       	ldi	r25, 0x00	; 0
 98e:	a0 e0       	ldi	r26, 0x00	; 0
 990:	b0 e0       	ldi	r27, 0x00	; 0
 992:	ba 01       	movw	r22, r20
 994:	a9 01       	movw	r20, r18
 996:	48 0f       	add	r20, r24
 998:	59 1f       	adc	r21, r25
 99a:	6a 1f       	adc	r22, r26
 99c:	7b 1f       	adc	r23, r27
 99e:	aa 0c       	add	r10, r10
 9a0:	bb 1c       	adc	r11, r11
 9a2:	cc 1c       	adc	r12, r12
 9a4:	dd 1c       	adc	r13, r13
 9a6:	97 fe       	sbrs	r9, 7
 9a8:	08 c0       	rjmp	.+16     	; 0x9ba <__mulsf3+0x10a>
 9aa:	81 e0       	ldi	r24, 0x01	; 1
 9ac:	90 e0       	ldi	r25, 0x00	; 0
 9ae:	a0 e0       	ldi	r26, 0x00	; 0
 9b0:	b0 e0       	ldi	r27, 0x00	; 0
 9b2:	a8 2a       	or	r10, r24
 9b4:	b9 2a       	or	r11, r25
 9b6:	ca 2a       	or	r12, r26
 9b8:	db 2a       	or	r13, r27
 9ba:	31 96       	adiw	r30, 0x01	; 1
 9bc:	e0 32       	cpi	r30, 0x20	; 32
 9be:	f1 05       	cpc	r31, r1
 9c0:	49 f0       	breq	.+18     	; 0x9d4 <__mulsf3+0x124>
 9c2:	66 0c       	add	r6, r6
 9c4:	77 1c       	adc	r7, r7
 9c6:	88 1c       	adc	r8, r8
 9c8:	99 1c       	adc	r9, r9
 9ca:	56 94       	lsr	r5
 9cc:	47 94       	ror	r4
 9ce:	37 94       	ror	r3
 9d0:	27 94       	ror	r2
 9d2:	c3 cf       	rjmp	.-122    	; 0x95a <__mulsf3+0xaa>
 9d4:	fa 85       	ldd	r31, Y+10	; 0x0a
 9d6:	ea 89       	ldd	r30, Y+18	; 0x12
 9d8:	2b 89       	ldd	r18, Y+19	; 0x13
 9da:	3c 89       	ldd	r19, Y+20	; 0x14
 9dc:	8b 85       	ldd	r24, Y+11	; 0x0b
 9de:	9c 85       	ldd	r25, Y+12	; 0x0c
 9e0:	28 0f       	add	r18, r24
 9e2:	39 1f       	adc	r19, r25
 9e4:	2e 5f       	subi	r18, 0xFE	; 254
 9e6:	3f 4f       	sbci	r19, 0xFF	; 255
 9e8:	17 c0       	rjmp	.+46     	; 0xa18 <__mulsf3+0x168>
 9ea:	ca 01       	movw	r24, r20
 9ec:	81 70       	andi	r24, 0x01	; 1
 9ee:	90 70       	andi	r25, 0x00	; 0
 9f0:	89 2b       	or	r24, r25
 9f2:	61 f0       	breq	.+24     	; 0xa0c <__mulsf3+0x15c>
 9f4:	16 95       	lsr	r17
 9f6:	07 95       	ror	r16
 9f8:	f7 94       	ror	r15
 9fa:	e7 94       	ror	r14
 9fc:	80 e0       	ldi	r24, 0x00	; 0
 9fe:	90 e0       	ldi	r25, 0x00	; 0
 a00:	a0 e0       	ldi	r26, 0x00	; 0
 a02:	b0 e8       	ldi	r27, 0x80	; 128
 a04:	e8 2a       	or	r14, r24
 a06:	f9 2a       	or	r15, r25
 a08:	0a 2b       	or	r16, r26
 a0a:	1b 2b       	or	r17, r27
 a0c:	76 95       	lsr	r23
 a0e:	67 95       	ror	r22
 a10:	57 95       	ror	r21
 a12:	47 95       	ror	r20
 a14:	2f 5f       	subi	r18, 0xFF	; 255
 a16:	3f 4f       	sbci	r19, 0xFF	; 255
 a18:	77 fd       	sbrc	r23, 7
 a1a:	e7 cf       	rjmp	.-50     	; 0x9ea <__mulsf3+0x13a>
 a1c:	0c c0       	rjmp	.+24     	; 0xa36 <__mulsf3+0x186>
 a1e:	44 0f       	add	r20, r20
 a20:	55 1f       	adc	r21, r21
 a22:	66 1f       	adc	r22, r22
 a24:	77 1f       	adc	r23, r23
 a26:	17 fd       	sbrc	r17, 7
 a28:	41 60       	ori	r20, 0x01	; 1
 a2a:	ee 0c       	add	r14, r14
 a2c:	ff 1c       	adc	r15, r15
 a2e:	00 1f       	adc	r16, r16
 a30:	11 1f       	adc	r17, r17
 a32:	21 50       	subi	r18, 0x01	; 1
 a34:	30 40       	sbci	r19, 0x00	; 0
 a36:	40 30       	cpi	r20, 0x00	; 0
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	59 07       	cpc	r21, r25
 a3c:	90 e0       	ldi	r25, 0x00	; 0
 a3e:	69 07       	cpc	r22, r25
 a40:	90 e4       	ldi	r25, 0x40	; 64
 a42:	79 07       	cpc	r23, r25
 a44:	60 f3       	brcs	.-40     	; 0xa1e <__mulsf3+0x16e>
 a46:	2b 8f       	std	Y+27, r18	; 0x1b
 a48:	3c 8f       	std	Y+28, r19	; 0x1c
 a4a:	db 01       	movw	r26, r22
 a4c:	ca 01       	movw	r24, r20
 a4e:	8f 77       	andi	r24, 0x7F	; 127
 a50:	90 70       	andi	r25, 0x00	; 0
 a52:	a0 70       	andi	r26, 0x00	; 0
 a54:	b0 70       	andi	r27, 0x00	; 0
 a56:	80 34       	cpi	r24, 0x40	; 64
 a58:	91 05       	cpc	r25, r1
 a5a:	a1 05       	cpc	r26, r1
 a5c:	b1 05       	cpc	r27, r1
 a5e:	61 f4       	brne	.+24     	; 0xa78 <__mulsf3+0x1c8>
 a60:	47 fd       	sbrc	r20, 7
 a62:	0a c0       	rjmp	.+20     	; 0xa78 <__mulsf3+0x1c8>
 a64:	e1 14       	cp	r14, r1
 a66:	f1 04       	cpc	r15, r1
 a68:	01 05       	cpc	r16, r1
 a6a:	11 05       	cpc	r17, r1
 a6c:	29 f0       	breq	.+10     	; 0xa78 <__mulsf3+0x1c8>
 a6e:	40 5c       	subi	r20, 0xC0	; 192
 a70:	5f 4f       	sbci	r21, 0xFF	; 255
 a72:	6f 4f       	sbci	r22, 0xFF	; 255
 a74:	7f 4f       	sbci	r23, 0xFF	; 255
 a76:	40 78       	andi	r20, 0x80	; 128
 a78:	1a 8e       	std	Y+26, r1	; 0x1a
 a7a:	fe 17       	cp	r31, r30
 a7c:	11 f0       	breq	.+4      	; 0xa82 <__mulsf3+0x1d2>
 a7e:	81 e0       	ldi	r24, 0x01	; 1
 a80:	8a 8f       	std	Y+26, r24	; 0x1a
 a82:	4d 8f       	std	Y+29, r20	; 0x1d
 a84:	5e 8f       	std	Y+30, r21	; 0x1e
 a86:	6f 8f       	std	Y+31, r22	; 0x1f
 a88:	78 a3       	std	Y+32, r23	; 0x20
 a8a:	83 e0       	ldi	r24, 0x03	; 3
 a8c:	89 8f       	std	Y+25, r24	; 0x19
 a8e:	ce 01       	movw	r24, r28
 a90:	49 96       	adiw	r24, 0x19	; 25
 a92:	d5 d0       	rcall	.+426    	; 0xc3e <__pack_f>
 a94:	a0 96       	adiw	r28, 0x20	; 32
 a96:	e2 e1       	ldi	r30, 0x12	; 18
 a98:	94 c2       	rjmp	.+1320   	; 0xfc2 <__epilogue_restores__>

00000a9a <__gtsf2>:
 a9a:	a8 e1       	ldi	r26, 0x18	; 24
 a9c:	b0 e0       	ldi	r27, 0x00	; 0
 a9e:	e2 e5       	ldi	r30, 0x52	; 82
 aa0:	f5 e0       	ldi	r31, 0x05	; 5
 aa2:	7f c2       	rjmp	.+1278   	; 0xfa2 <__prologue_saves__+0x18>
 aa4:	69 83       	std	Y+1, r22	; 0x01
 aa6:	7a 83       	std	Y+2, r23	; 0x02
 aa8:	8b 83       	std	Y+3, r24	; 0x03
 aaa:	9c 83       	std	Y+4, r25	; 0x04
 aac:	2d 83       	std	Y+5, r18	; 0x05
 aae:	3e 83       	std	Y+6, r19	; 0x06
 ab0:	4f 83       	std	Y+7, r20	; 0x07
 ab2:	58 87       	std	Y+8, r21	; 0x08
 ab4:	89 e0       	ldi	r24, 0x09	; 9
 ab6:	e8 2e       	mov	r14, r24
 ab8:	f1 2c       	mov	r15, r1
 aba:	ec 0e       	add	r14, r28
 abc:	fd 1e       	adc	r15, r29
 abe:	ce 01       	movw	r24, r28
 ac0:	01 96       	adiw	r24, 0x01	; 1
 ac2:	b7 01       	movw	r22, r14
 ac4:	91 d1       	rcall	.+802    	; 0xde8 <__unpack_f>
 ac6:	8e 01       	movw	r16, r28
 ac8:	0f 5e       	subi	r16, 0xEF	; 239
 aca:	1f 4f       	sbci	r17, 0xFF	; 255
 acc:	ce 01       	movw	r24, r28
 ace:	05 96       	adiw	r24, 0x05	; 5
 ad0:	b8 01       	movw	r22, r16
 ad2:	8a d1       	rcall	.+788    	; 0xde8 <__unpack_f>
 ad4:	89 85       	ldd	r24, Y+9	; 0x09
 ad6:	82 30       	cpi	r24, 0x02	; 2
 ad8:	38 f0       	brcs	.+14     	; 0xae8 <__gtsf2+0x4e>
 ada:	89 89       	ldd	r24, Y+17	; 0x11
 adc:	82 30       	cpi	r24, 0x02	; 2
 ade:	20 f0       	brcs	.+8      	; 0xae8 <__gtsf2+0x4e>
 ae0:	c7 01       	movw	r24, r14
 ae2:	b8 01       	movw	r22, r16
 ae4:	f9 d1       	rcall	.+1010   	; 0xed8 <__fpcmp_parts_f>
 ae6:	01 c0       	rjmp	.+2      	; 0xaea <__gtsf2+0x50>
 ae8:	8f ef       	ldi	r24, 0xFF	; 255
 aea:	68 96       	adiw	r28, 0x18	; 24
 aec:	e6 e0       	ldi	r30, 0x06	; 6
 aee:	75 c2       	rjmp	.+1258   	; 0xfda <__epilogue_restores__+0x18>

00000af0 <__gesf2>:
 af0:	a8 e1       	ldi	r26, 0x18	; 24
 af2:	b0 e0       	ldi	r27, 0x00	; 0
 af4:	ed e7       	ldi	r30, 0x7D	; 125
 af6:	f5 e0       	ldi	r31, 0x05	; 5
 af8:	54 c2       	rjmp	.+1192   	; 0xfa2 <__prologue_saves__+0x18>
 afa:	69 83       	std	Y+1, r22	; 0x01
 afc:	7a 83       	std	Y+2, r23	; 0x02
 afe:	8b 83       	std	Y+3, r24	; 0x03
 b00:	9c 83       	std	Y+4, r25	; 0x04
 b02:	2d 83       	std	Y+5, r18	; 0x05
 b04:	3e 83       	std	Y+6, r19	; 0x06
 b06:	4f 83       	std	Y+7, r20	; 0x07
 b08:	58 87       	std	Y+8, r21	; 0x08
 b0a:	89 e0       	ldi	r24, 0x09	; 9
 b0c:	e8 2e       	mov	r14, r24
 b0e:	f1 2c       	mov	r15, r1
 b10:	ec 0e       	add	r14, r28
 b12:	fd 1e       	adc	r15, r29
 b14:	ce 01       	movw	r24, r28
 b16:	01 96       	adiw	r24, 0x01	; 1
 b18:	b7 01       	movw	r22, r14
 b1a:	66 d1       	rcall	.+716    	; 0xde8 <__unpack_f>
 b1c:	8e 01       	movw	r16, r28
 b1e:	0f 5e       	subi	r16, 0xEF	; 239
 b20:	1f 4f       	sbci	r17, 0xFF	; 255
 b22:	ce 01       	movw	r24, r28
 b24:	05 96       	adiw	r24, 0x05	; 5
 b26:	b8 01       	movw	r22, r16
 b28:	5f d1       	rcall	.+702    	; 0xde8 <__unpack_f>
 b2a:	89 85       	ldd	r24, Y+9	; 0x09
 b2c:	82 30       	cpi	r24, 0x02	; 2
 b2e:	38 f0       	brcs	.+14     	; 0xb3e <__gesf2+0x4e>
 b30:	89 89       	ldd	r24, Y+17	; 0x11
 b32:	82 30       	cpi	r24, 0x02	; 2
 b34:	20 f0       	brcs	.+8      	; 0xb3e <__gesf2+0x4e>
 b36:	c7 01       	movw	r24, r14
 b38:	b8 01       	movw	r22, r16
 b3a:	ce d1       	rcall	.+924    	; 0xed8 <__fpcmp_parts_f>
 b3c:	01 c0       	rjmp	.+2      	; 0xb40 <__gesf2+0x50>
 b3e:	8f ef       	ldi	r24, 0xFF	; 255
 b40:	68 96       	adiw	r28, 0x18	; 24
 b42:	e6 e0       	ldi	r30, 0x06	; 6
 b44:	4a c2       	rjmp	.+1172   	; 0xfda <__epilogue_restores__+0x18>

00000b46 <__ltsf2>:
 b46:	a8 e1       	ldi	r26, 0x18	; 24
 b48:	b0 e0       	ldi	r27, 0x00	; 0
 b4a:	e8 ea       	ldi	r30, 0xA8	; 168
 b4c:	f5 e0       	ldi	r31, 0x05	; 5
 b4e:	29 c2       	rjmp	.+1106   	; 0xfa2 <__prologue_saves__+0x18>
 b50:	69 83       	std	Y+1, r22	; 0x01
 b52:	7a 83       	std	Y+2, r23	; 0x02
 b54:	8b 83       	std	Y+3, r24	; 0x03
 b56:	9c 83       	std	Y+4, r25	; 0x04
 b58:	2d 83       	std	Y+5, r18	; 0x05
 b5a:	3e 83       	std	Y+6, r19	; 0x06
 b5c:	4f 83       	std	Y+7, r20	; 0x07
 b5e:	58 87       	std	Y+8, r21	; 0x08
 b60:	89 e0       	ldi	r24, 0x09	; 9
 b62:	e8 2e       	mov	r14, r24
 b64:	f1 2c       	mov	r15, r1
 b66:	ec 0e       	add	r14, r28
 b68:	fd 1e       	adc	r15, r29
 b6a:	ce 01       	movw	r24, r28
 b6c:	01 96       	adiw	r24, 0x01	; 1
 b6e:	b7 01       	movw	r22, r14
 b70:	3b d1       	rcall	.+630    	; 0xde8 <__unpack_f>
 b72:	8e 01       	movw	r16, r28
 b74:	0f 5e       	subi	r16, 0xEF	; 239
 b76:	1f 4f       	sbci	r17, 0xFF	; 255
 b78:	ce 01       	movw	r24, r28
 b7a:	05 96       	adiw	r24, 0x05	; 5
 b7c:	b8 01       	movw	r22, r16
 b7e:	34 d1       	rcall	.+616    	; 0xde8 <__unpack_f>
 b80:	89 85       	ldd	r24, Y+9	; 0x09
 b82:	82 30       	cpi	r24, 0x02	; 2
 b84:	38 f0       	brcs	.+14     	; 0xb94 <__ltsf2+0x4e>
 b86:	89 89       	ldd	r24, Y+17	; 0x11
 b88:	82 30       	cpi	r24, 0x02	; 2
 b8a:	20 f0       	brcs	.+8      	; 0xb94 <__ltsf2+0x4e>
 b8c:	c7 01       	movw	r24, r14
 b8e:	b8 01       	movw	r22, r16
 b90:	a3 d1       	rcall	.+838    	; 0xed8 <__fpcmp_parts_f>
 b92:	01 c0       	rjmp	.+2      	; 0xb96 <__ltsf2+0x50>
 b94:	81 e0       	ldi	r24, 0x01	; 1
 b96:	68 96       	adiw	r28, 0x18	; 24
 b98:	e6 e0       	ldi	r30, 0x06	; 6
 b9a:	1f c2       	rjmp	.+1086   	; 0xfda <__epilogue_restores__+0x18>

00000b9c <__fixsfsi>:
 b9c:	ac e0       	ldi	r26, 0x0C	; 12
 b9e:	b0 e0       	ldi	r27, 0x00	; 0
 ba0:	e3 ed       	ldi	r30, 0xD3	; 211
 ba2:	f5 e0       	ldi	r31, 0x05	; 5
 ba4:	02 c2       	rjmp	.+1028   	; 0xfaa <__prologue_saves__+0x20>
 ba6:	69 83       	std	Y+1, r22	; 0x01
 ba8:	7a 83       	std	Y+2, r23	; 0x02
 baa:	8b 83       	std	Y+3, r24	; 0x03
 bac:	9c 83       	std	Y+4, r25	; 0x04
 bae:	ce 01       	movw	r24, r28
 bb0:	01 96       	adiw	r24, 0x01	; 1
 bb2:	be 01       	movw	r22, r28
 bb4:	6b 5f       	subi	r22, 0xFB	; 251
 bb6:	7f 4f       	sbci	r23, 0xFF	; 255
 bb8:	17 d1       	rcall	.+558    	; 0xde8 <__unpack_f>
 bba:	8d 81       	ldd	r24, Y+5	; 0x05
 bbc:	82 30       	cpi	r24, 0x02	; 2
 bbe:	61 f1       	breq	.+88     	; 0xc18 <__fixsfsi+0x7c>
 bc0:	82 30       	cpi	r24, 0x02	; 2
 bc2:	50 f1       	brcs	.+84     	; 0xc18 <__fixsfsi+0x7c>
 bc4:	84 30       	cpi	r24, 0x04	; 4
 bc6:	21 f4       	brne	.+8      	; 0xbd0 <__fixsfsi+0x34>
 bc8:	8e 81       	ldd	r24, Y+6	; 0x06
 bca:	88 23       	and	r24, r24
 bcc:	51 f1       	breq	.+84     	; 0xc22 <__fixsfsi+0x86>
 bce:	2e c0       	rjmp	.+92     	; 0xc2c <__fixsfsi+0x90>
 bd0:	2f 81       	ldd	r18, Y+7	; 0x07
 bd2:	38 85       	ldd	r19, Y+8	; 0x08
 bd4:	37 fd       	sbrc	r19, 7
 bd6:	20 c0       	rjmp	.+64     	; 0xc18 <__fixsfsi+0x7c>
 bd8:	6e 81       	ldd	r22, Y+6	; 0x06
 bda:	2f 31       	cpi	r18, 0x1F	; 31
 bdc:	31 05       	cpc	r19, r1
 bde:	1c f0       	brlt	.+6      	; 0xbe6 <__fixsfsi+0x4a>
 be0:	66 23       	and	r22, r22
 be2:	f9 f0       	breq	.+62     	; 0xc22 <__fixsfsi+0x86>
 be4:	23 c0       	rjmp	.+70     	; 0xc2c <__fixsfsi+0x90>
 be6:	8e e1       	ldi	r24, 0x1E	; 30
 be8:	90 e0       	ldi	r25, 0x00	; 0
 bea:	82 1b       	sub	r24, r18
 bec:	93 0b       	sbc	r25, r19
 bee:	29 85       	ldd	r18, Y+9	; 0x09
 bf0:	3a 85       	ldd	r19, Y+10	; 0x0a
 bf2:	4b 85       	ldd	r20, Y+11	; 0x0b
 bf4:	5c 85       	ldd	r21, Y+12	; 0x0c
 bf6:	04 c0       	rjmp	.+8      	; 0xc00 <__fixsfsi+0x64>
 bf8:	56 95       	lsr	r21
 bfa:	47 95       	ror	r20
 bfc:	37 95       	ror	r19
 bfe:	27 95       	ror	r18
 c00:	8a 95       	dec	r24
 c02:	d2 f7       	brpl	.-12     	; 0xbf8 <__fixsfsi+0x5c>
 c04:	66 23       	and	r22, r22
 c06:	b1 f0       	breq	.+44     	; 0xc34 <__fixsfsi+0x98>
 c08:	50 95       	com	r21
 c0a:	40 95       	com	r20
 c0c:	30 95       	com	r19
 c0e:	21 95       	neg	r18
 c10:	3f 4f       	sbci	r19, 0xFF	; 255
 c12:	4f 4f       	sbci	r20, 0xFF	; 255
 c14:	5f 4f       	sbci	r21, 0xFF	; 255
 c16:	0e c0       	rjmp	.+28     	; 0xc34 <__fixsfsi+0x98>
 c18:	20 e0       	ldi	r18, 0x00	; 0
 c1a:	30 e0       	ldi	r19, 0x00	; 0
 c1c:	40 e0       	ldi	r20, 0x00	; 0
 c1e:	50 e0       	ldi	r21, 0x00	; 0
 c20:	09 c0       	rjmp	.+18     	; 0xc34 <__fixsfsi+0x98>
 c22:	2f ef       	ldi	r18, 0xFF	; 255
 c24:	3f ef       	ldi	r19, 0xFF	; 255
 c26:	4f ef       	ldi	r20, 0xFF	; 255
 c28:	5f e7       	ldi	r21, 0x7F	; 127
 c2a:	04 c0       	rjmp	.+8      	; 0xc34 <__fixsfsi+0x98>
 c2c:	20 e0       	ldi	r18, 0x00	; 0
 c2e:	30 e0       	ldi	r19, 0x00	; 0
 c30:	40 e0       	ldi	r20, 0x00	; 0
 c32:	50 e8       	ldi	r21, 0x80	; 128
 c34:	b9 01       	movw	r22, r18
 c36:	ca 01       	movw	r24, r20
 c38:	2c 96       	adiw	r28, 0x0c	; 12
 c3a:	e2 e0       	ldi	r30, 0x02	; 2
 c3c:	d2 c1       	rjmp	.+932    	; 0xfe2 <__epilogue_restores__+0x20>

00000c3e <__pack_f>:
 c3e:	df 92       	push	r13
 c40:	ef 92       	push	r14
 c42:	ff 92       	push	r15
 c44:	0f 93       	push	r16
 c46:	1f 93       	push	r17
 c48:	fc 01       	movw	r30, r24
 c4a:	e4 80       	ldd	r14, Z+4	; 0x04
 c4c:	f5 80       	ldd	r15, Z+5	; 0x05
 c4e:	06 81       	ldd	r16, Z+6	; 0x06
 c50:	17 81       	ldd	r17, Z+7	; 0x07
 c52:	d1 80       	ldd	r13, Z+1	; 0x01
 c54:	80 81       	ld	r24, Z
 c56:	82 30       	cpi	r24, 0x02	; 2
 c58:	48 f4       	brcc	.+18     	; 0xc6c <__pack_f+0x2e>
 c5a:	80 e0       	ldi	r24, 0x00	; 0
 c5c:	90 e0       	ldi	r25, 0x00	; 0
 c5e:	a0 e1       	ldi	r26, 0x10	; 16
 c60:	b0 e0       	ldi	r27, 0x00	; 0
 c62:	e8 2a       	or	r14, r24
 c64:	f9 2a       	or	r15, r25
 c66:	0a 2b       	or	r16, r26
 c68:	1b 2b       	or	r17, r27
 c6a:	a5 c0       	rjmp	.+330    	; 0xdb6 <__pack_f+0x178>
 c6c:	84 30       	cpi	r24, 0x04	; 4
 c6e:	09 f4       	brne	.+2      	; 0xc72 <__pack_f+0x34>
 c70:	9f c0       	rjmp	.+318    	; 0xdb0 <__pack_f+0x172>
 c72:	82 30       	cpi	r24, 0x02	; 2
 c74:	21 f4       	brne	.+8      	; 0xc7e <__pack_f+0x40>
 c76:	ee 24       	eor	r14, r14
 c78:	ff 24       	eor	r15, r15
 c7a:	87 01       	movw	r16, r14
 c7c:	05 c0       	rjmp	.+10     	; 0xc88 <__pack_f+0x4a>
 c7e:	e1 14       	cp	r14, r1
 c80:	f1 04       	cpc	r15, r1
 c82:	01 05       	cpc	r16, r1
 c84:	11 05       	cpc	r17, r1
 c86:	19 f4       	brne	.+6      	; 0xc8e <__pack_f+0x50>
 c88:	e0 e0       	ldi	r30, 0x00	; 0
 c8a:	f0 e0       	ldi	r31, 0x00	; 0
 c8c:	96 c0       	rjmp	.+300    	; 0xdba <__pack_f+0x17c>
 c8e:	62 81       	ldd	r22, Z+2	; 0x02
 c90:	73 81       	ldd	r23, Z+3	; 0x03
 c92:	9f ef       	ldi	r25, 0xFF	; 255
 c94:	62 38       	cpi	r22, 0x82	; 130
 c96:	79 07       	cpc	r23, r25
 c98:	0c f0       	brlt	.+2      	; 0xc9c <__pack_f+0x5e>
 c9a:	5b c0       	rjmp	.+182    	; 0xd52 <__pack_f+0x114>
 c9c:	22 e8       	ldi	r18, 0x82	; 130
 c9e:	3f ef       	ldi	r19, 0xFF	; 255
 ca0:	26 1b       	sub	r18, r22
 ca2:	37 0b       	sbc	r19, r23
 ca4:	2a 31       	cpi	r18, 0x1A	; 26
 ca6:	31 05       	cpc	r19, r1
 ca8:	2c f0       	brlt	.+10     	; 0xcb4 <__pack_f+0x76>
 caa:	20 e0       	ldi	r18, 0x00	; 0
 cac:	30 e0       	ldi	r19, 0x00	; 0
 cae:	40 e0       	ldi	r20, 0x00	; 0
 cb0:	50 e0       	ldi	r21, 0x00	; 0
 cb2:	2a c0       	rjmp	.+84     	; 0xd08 <__pack_f+0xca>
 cb4:	b8 01       	movw	r22, r16
 cb6:	a7 01       	movw	r20, r14
 cb8:	02 2e       	mov	r0, r18
 cba:	04 c0       	rjmp	.+8      	; 0xcc4 <__pack_f+0x86>
 cbc:	76 95       	lsr	r23
 cbe:	67 95       	ror	r22
 cc0:	57 95       	ror	r21
 cc2:	47 95       	ror	r20
 cc4:	0a 94       	dec	r0
 cc6:	d2 f7       	brpl	.-12     	; 0xcbc <__pack_f+0x7e>
 cc8:	81 e0       	ldi	r24, 0x01	; 1
 cca:	90 e0       	ldi	r25, 0x00	; 0
 ccc:	a0 e0       	ldi	r26, 0x00	; 0
 cce:	b0 e0       	ldi	r27, 0x00	; 0
 cd0:	04 c0       	rjmp	.+8      	; 0xcda <__pack_f+0x9c>
 cd2:	88 0f       	add	r24, r24
 cd4:	99 1f       	adc	r25, r25
 cd6:	aa 1f       	adc	r26, r26
 cd8:	bb 1f       	adc	r27, r27
 cda:	2a 95       	dec	r18
 cdc:	d2 f7       	brpl	.-12     	; 0xcd2 <__pack_f+0x94>
 cde:	01 97       	sbiw	r24, 0x01	; 1
 ce0:	a1 09       	sbc	r26, r1
 ce2:	b1 09       	sbc	r27, r1
 ce4:	8e 21       	and	r24, r14
 ce6:	9f 21       	and	r25, r15
 ce8:	a0 23       	and	r26, r16
 cea:	b1 23       	and	r27, r17
 cec:	00 97       	sbiw	r24, 0x00	; 0
 cee:	a1 05       	cpc	r26, r1
 cf0:	b1 05       	cpc	r27, r1
 cf2:	21 f0       	breq	.+8      	; 0xcfc <__pack_f+0xbe>
 cf4:	81 e0       	ldi	r24, 0x01	; 1
 cf6:	90 e0       	ldi	r25, 0x00	; 0
 cf8:	a0 e0       	ldi	r26, 0x00	; 0
 cfa:	b0 e0       	ldi	r27, 0x00	; 0
 cfc:	9a 01       	movw	r18, r20
 cfe:	ab 01       	movw	r20, r22
 d00:	28 2b       	or	r18, r24
 d02:	39 2b       	or	r19, r25
 d04:	4a 2b       	or	r20, r26
 d06:	5b 2b       	or	r21, r27
 d08:	da 01       	movw	r26, r20
 d0a:	c9 01       	movw	r24, r18
 d0c:	8f 77       	andi	r24, 0x7F	; 127
 d0e:	90 70       	andi	r25, 0x00	; 0
 d10:	a0 70       	andi	r26, 0x00	; 0
 d12:	b0 70       	andi	r27, 0x00	; 0
 d14:	80 34       	cpi	r24, 0x40	; 64
 d16:	91 05       	cpc	r25, r1
 d18:	a1 05       	cpc	r26, r1
 d1a:	b1 05       	cpc	r27, r1
 d1c:	39 f4       	brne	.+14     	; 0xd2c <__pack_f+0xee>
 d1e:	27 ff       	sbrs	r18, 7
 d20:	09 c0       	rjmp	.+18     	; 0xd34 <__pack_f+0xf6>
 d22:	20 5c       	subi	r18, 0xC0	; 192
 d24:	3f 4f       	sbci	r19, 0xFF	; 255
 d26:	4f 4f       	sbci	r20, 0xFF	; 255
 d28:	5f 4f       	sbci	r21, 0xFF	; 255
 d2a:	04 c0       	rjmp	.+8      	; 0xd34 <__pack_f+0xf6>
 d2c:	21 5c       	subi	r18, 0xC1	; 193
 d2e:	3f 4f       	sbci	r19, 0xFF	; 255
 d30:	4f 4f       	sbci	r20, 0xFF	; 255
 d32:	5f 4f       	sbci	r21, 0xFF	; 255
 d34:	e0 e0       	ldi	r30, 0x00	; 0
 d36:	f0 e0       	ldi	r31, 0x00	; 0
 d38:	20 30       	cpi	r18, 0x00	; 0
 d3a:	a0 e0       	ldi	r26, 0x00	; 0
 d3c:	3a 07       	cpc	r19, r26
 d3e:	a0 e0       	ldi	r26, 0x00	; 0
 d40:	4a 07       	cpc	r20, r26
 d42:	a0 e4       	ldi	r26, 0x40	; 64
 d44:	5a 07       	cpc	r21, r26
 d46:	10 f0       	brcs	.+4      	; 0xd4c <__pack_f+0x10e>
 d48:	e1 e0       	ldi	r30, 0x01	; 1
 d4a:	f0 e0       	ldi	r31, 0x00	; 0
 d4c:	79 01       	movw	r14, r18
 d4e:	8a 01       	movw	r16, r20
 d50:	27 c0       	rjmp	.+78     	; 0xda0 <__pack_f+0x162>
 d52:	60 38       	cpi	r22, 0x80	; 128
 d54:	71 05       	cpc	r23, r1
 d56:	64 f5       	brge	.+88     	; 0xdb0 <__pack_f+0x172>
 d58:	fb 01       	movw	r30, r22
 d5a:	e1 58       	subi	r30, 0x81	; 129
 d5c:	ff 4f       	sbci	r31, 0xFF	; 255
 d5e:	d8 01       	movw	r26, r16
 d60:	c7 01       	movw	r24, r14
 d62:	8f 77       	andi	r24, 0x7F	; 127
 d64:	90 70       	andi	r25, 0x00	; 0
 d66:	a0 70       	andi	r26, 0x00	; 0
 d68:	b0 70       	andi	r27, 0x00	; 0
 d6a:	80 34       	cpi	r24, 0x40	; 64
 d6c:	91 05       	cpc	r25, r1
 d6e:	a1 05       	cpc	r26, r1
 d70:	b1 05       	cpc	r27, r1
 d72:	39 f4       	brne	.+14     	; 0xd82 <__pack_f+0x144>
 d74:	e7 fe       	sbrs	r14, 7
 d76:	0d c0       	rjmp	.+26     	; 0xd92 <__pack_f+0x154>
 d78:	80 e4       	ldi	r24, 0x40	; 64
 d7a:	90 e0       	ldi	r25, 0x00	; 0
 d7c:	a0 e0       	ldi	r26, 0x00	; 0
 d7e:	b0 e0       	ldi	r27, 0x00	; 0
 d80:	04 c0       	rjmp	.+8      	; 0xd8a <__pack_f+0x14c>
 d82:	8f e3       	ldi	r24, 0x3F	; 63
 d84:	90 e0       	ldi	r25, 0x00	; 0
 d86:	a0 e0       	ldi	r26, 0x00	; 0
 d88:	b0 e0       	ldi	r27, 0x00	; 0
 d8a:	e8 0e       	add	r14, r24
 d8c:	f9 1e       	adc	r15, r25
 d8e:	0a 1f       	adc	r16, r26
 d90:	1b 1f       	adc	r17, r27
 d92:	17 ff       	sbrs	r17, 7
 d94:	05 c0       	rjmp	.+10     	; 0xda0 <__pack_f+0x162>
 d96:	16 95       	lsr	r17
 d98:	07 95       	ror	r16
 d9a:	f7 94       	ror	r15
 d9c:	e7 94       	ror	r14
 d9e:	31 96       	adiw	r30, 0x01	; 1
 da0:	87 e0       	ldi	r24, 0x07	; 7
 da2:	16 95       	lsr	r17
 da4:	07 95       	ror	r16
 da6:	f7 94       	ror	r15
 da8:	e7 94       	ror	r14
 daa:	8a 95       	dec	r24
 dac:	d1 f7       	brne	.-12     	; 0xda2 <__pack_f+0x164>
 dae:	05 c0       	rjmp	.+10     	; 0xdba <__pack_f+0x17c>
 db0:	ee 24       	eor	r14, r14
 db2:	ff 24       	eor	r15, r15
 db4:	87 01       	movw	r16, r14
 db6:	ef ef       	ldi	r30, 0xFF	; 255
 db8:	f0 e0       	ldi	r31, 0x00	; 0
 dba:	6e 2f       	mov	r22, r30
 dbc:	67 95       	ror	r22
 dbe:	66 27       	eor	r22, r22
 dc0:	67 95       	ror	r22
 dc2:	90 2f       	mov	r25, r16
 dc4:	9f 77       	andi	r25, 0x7F	; 127
 dc6:	d7 94       	ror	r13
 dc8:	dd 24       	eor	r13, r13
 dca:	d7 94       	ror	r13
 dcc:	8e 2f       	mov	r24, r30
 dce:	86 95       	lsr	r24
 dd0:	49 2f       	mov	r20, r25
 dd2:	46 2b       	or	r20, r22
 dd4:	58 2f       	mov	r21, r24
 dd6:	5d 29       	or	r21, r13
 dd8:	b7 01       	movw	r22, r14
 dda:	ca 01       	movw	r24, r20
 ddc:	1f 91       	pop	r17
 dde:	0f 91       	pop	r16
 de0:	ff 90       	pop	r15
 de2:	ef 90       	pop	r14
 de4:	df 90       	pop	r13
 de6:	08 95       	ret

00000de8 <__unpack_f>:
 de8:	fc 01       	movw	r30, r24
 dea:	db 01       	movw	r26, r22
 dec:	40 81       	ld	r20, Z
 dee:	51 81       	ldd	r21, Z+1	; 0x01
 df0:	22 81       	ldd	r18, Z+2	; 0x02
 df2:	62 2f       	mov	r22, r18
 df4:	6f 77       	andi	r22, 0x7F	; 127
 df6:	70 e0       	ldi	r23, 0x00	; 0
 df8:	22 1f       	adc	r18, r18
 dfa:	22 27       	eor	r18, r18
 dfc:	22 1f       	adc	r18, r18
 dfe:	93 81       	ldd	r25, Z+3	; 0x03
 e00:	89 2f       	mov	r24, r25
 e02:	88 0f       	add	r24, r24
 e04:	82 2b       	or	r24, r18
 e06:	28 2f       	mov	r18, r24
 e08:	30 e0       	ldi	r19, 0x00	; 0
 e0a:	99 1f       	adc	r25, r25
 e0c:	99 27       	eor	r25, r25
 e0e:	99 1f       	adc	r25, r25
 e10:	11 96       	adiw	r26, 0x01	; 1
 e12:	9c 93       	st	X, r25
 e14:	11 97       	sbiw	r26, 0x01	; 1
 e16:	21 15       	cp	r18, r1
 e18:	31 05       	cpc	r19, r1
 e1a:	a9 f5       	brne	.+106    	; 0xe86 <__unpack_f+0x9e>
 e1c:	41 15       	cp	r20, r1
 e1e:	51 05       	cpc	r21, r1
 e20:	61 05       	cpc	r22, r1
 e22:	71 05       	cpc	r23, r1
 e24:	11 f4       	brne	.+4      	; 0xe2a <__unpack_f+0x42>
 e26:	82 e0       	ldi	r24, 0x02	; 2
 e28:	37 c0       	rjmp	.+110    	; 0xe98 <__unpack_f+0xb0>
 e2a:	82 e8       	ldi	r24, 0x82	; 130
 e2c:	9f ef       	ldi	r25, 0xFF	; 255
 e2e:	13 96       	adiw	r26, 0x03	; 3
 e30:	9c 93       	st	X, r25
 e32:	8e 93       	st	-X, r24
 e34:	12 97       	sbiw	r26, 0x02	; 2
 e36:	9a 01       	movw	r18, r20
 e38:	ab 01       	movw	r20, r22
 e3a:	67 e0       	ldi	r22, 0x07	; 7
 e3c:	22 0f       	add	r18, r18
 e3e:	33 1f       	adc	r19, r19
 e40:	44 1f       	adc	r20, r20
 e42:	55 1f       	adc	r21, r21
 e44:	6a 95       	dec	r22
 e46:	d1 f7       	brne	.-12     	; 0xe3c <__unpack_f+0x54>
 e48:	83 e0       	ldi	r24, 0x03	; 3
 e4a:	8c 93       	st	X, r24
 e4c:	0d c0       	rjmp	.+26     	; 0xe68 <__unpack_f+0x80>
 e4e:	22 0f       	add	r18, r18
 e50:	33 1f       	adc	r19, r19
 e52:	44 1f       	adc	r20, r20
 e54:	55 1f       	adc	r21, r21
 e56:	12 96       	adiw	r26, 0x02	; 2
 e58:	8d 91       	ld	r24, X+
 e5a:	9c 91       	ld	r25, X
 e5c:	13 97       	sbiw	r26, 0x03	; 3
 e5e:	01 97       	sbiw	r24, 0x01	; 1
 e60:	13 96       	adiw	r26, 0x03	; 3
 e62:	9c 93       	st	X, r25
 e64:	8e 93       	st	-X, r24
 e66:	12 97       	sbiw	r26, 0x02	; 2
 e68:	20 30       	cpi	r18, 0x00	; 0
 e6a:	80 e0       	ldi	r24, 0x00	; 0
 e6c:	38 07       	cpc	r19, r24
 e6e:	80 e0       	ldi	r24, 0x00	; 0
 e70:	48 07       	cpc	r20, r24
 e72:	80 e4       	ldi	r24, 0x40	; 64
 e74:	58 07       	cpc	r21, r24
 e76:	58 f3       	brcs	.-42     	; 0xe4e <__unpack_f+0x66>
 e78:	14 96       	adiw	r26, 0x04	; 4
 e7a:	2d 93       	st	X+, r18
 e7c:	3d 93       	st	X+, r19
 e7e:	4d 93       	st	X+, r20
 e80:	5c 93       	st	X, r21
 e82:	17 97       	sbiw	r26, 0x07	; 7
 e84:	08 95       	ret
 e86:	2f 3f       	cpi	r18, 0xFF	; 255
 e88:	31 05       	cpc	r19, r1
 e8a:	79 f4       	brne	.+30     	; 0xeaa <__unpack_f+0xc2>
 e8c:	41 15       	cp	r20, r1
 e8e:	51 05       	cpc	r21, r1
 e90:	61 05       	cpc	r22, r1
 e92:	71 05       	cpc	r23, r1
 e94:	19 f4       	brne	.+6      	; 0xe9c <__unpack_f+0xb4>
 e96:	84 e0       	ldi	r24, 0x04	; 4
 e98:	8c 93       	st	X, r24
 e9a:	08 95       	ret
 e9c:	64 ff       	sbrs	r22, 4
 e9e:	03 c0       	rjmp	.+6      	; 0xea6 <__unpack_f+0xbe>
 ea0:	81 e0       	ldi	r24, 0x01	; 1
 ea2:	8c 93       	st	X, r24
 ea4:	12 c0       	rjmp	.+36     	; 0xeca <__unpack_f+0xe2>
 ea6:	1c 92       	st	X, r1
 ea8:	10 c0       	rjmp	.+32     	; 0xeca <__unpack_f+0xe2>
 eaa:	2f 57       	subi	r18, 0x7F	; 127
 eac:	30 40       	sbci	r19, 0x00	; 0
 eae:	13 96       	adiw	r26, 0x03	; 3
 eb0:	3c 93       	st	X, r19
 eb2:	2e 93       	st	-X, r18
 eb4:	12 97       	sbiw	r26, 0x02	; 2
 eb6:	83 e0       	ldi	r24, 0x03	; 3
 eb8:	8c 93       	st	X, r24
 eba:	87 e0       	ldi	r24, 0x07	; 7
 ebc:	44 0f       	add	r20, r20
 ebe:	55 1f       	adc	r21, r21
 ec0:	66 1f       	adc	r22, r22
 ec2:	77 1f       	adc	r23, r23
 ec4:	8a 95       	dec	r24
 ec6:	d1 f7       	brne	.-12     	; 0xebc <__unpack_f+0xd4>
 ec8:	70 64       	ori	r23, 0x40	; 64
 eca:	14 96       	adiw	r26, 0x04	; 4
 ecc:	4d 93       	st	X+, r20
 ece:	5d 93       	st	X+, r21
 ed0:	6d 93       	st	X+, r22
 ed2:	7c 93       	st	X, r23
 ed4:	17 97       	sbiw	r26, 0x07	; 7
 ed6:	08 95       	ret

00000ed8 <__fpcmp_parts_f>:
 ed8:	1f 93       	push	r17
 eda:	dc 01       	movw	r26, r24
 edc:	fb 01       	movw	r30, r22
 ede:	9c 91       	ld	r25, X
 ee0:	92 30       	cpi	r25, 0x02	; 2
 ee2:	08 f4       	brcc	.+2      	; 0xee6 <__fpcmp_parts_f+0xe>
 ee4:	47 c0       	rjmp	.+142    	; 0xf74 <__fpcmp_parts_f+0x9c>
 ee6:	80 81       	ld	r24, Z
 ee8:	82 30       	cpi	r24, 0x02	; 2
 eea:	08 f4       	brcc	.+2      	; 0xeee <__fpcmp_parts_f+0x16>
 eec:	43 c0       	rjmp	.+134    	; 0xf74 <__fpcmp_parts_f+0x9c>
 eee:	94 30       	cpi	r25, 0x04	; 4
 ef0:	51 f4       	brne	.+20     	; 0xf06 <__fpcmp_parts_f+0x2e>
 ef2:	11 96       	adiw	r26, 0x01	; 1
 ef4:	1c 91       	ld	r17, X
 ef6:	84 30       	cpi	r24, 0x04	; 4
 ef8:	99 f5       	brne	.+102    	; 0xf60 <__fpcmp_parts_f+0x88>
 efa:	81 81       	ldd	r24, Z+1	; 0x01
 efc:	68 2f       	mov	r22, r24
 efe:	70 e0       	ldi	r23, 0x00	; 0
 f00:	61 1b       	sub	r22, r17
 f02:	71 09       	sbc	r23, r1
 f04:	3f c0       	rjmp	.+126    	; 0xf84 <__fpcmp_parts_f+0xac>
 f06:	84 30       	cpi	r24, 0x04	; 4
 f08:	21 f0       	breq	.+8      	; 0xf12 <__fpcmp_parts_f+0x3a>
 f0a:	92 30       	cpi	r25, 0x02	; 2
 f0c:	31 f4       	brne	.+12     	; 0xf1a <__fpcmp_parts_f+0x42>
 f0e:	82 30       	cpi	r24, 0x02	; 2
 f10:	b9 f1       	breq	.+110    	; 0xf80 <__fpcmp_parts_f+0xa8>
 f12:	81 81       	ldd	r24, Z+1	; 0x01
 f14:	88 23       	and	r24, r24
 f16:	89 f1       	breq	.+98     	; 0xf7a <__fpcmp_parts_f+0xa2>
 f18:	2d c0       	rjmp	.+90     	; 0xf74 <__fpcmp_parts_f+0x9c>
 f1a:	11 96       	adiw	r26, 0x01	; 1
 f1c:	1c 91       	ld	r17, X
 f1e:	11 97       	sbiw	r26, 0x01	; 1
 f20:	82 30       	cpi	r24, 0x02	; 2
 f22:	f1 f0       	breq	.+60     	; 0xf60 <__fpcmp_parts_f+0x88>
 f24:	81 81       	ldd	r24, Z+1	; 0x01
 f26:	18 17       	cp	r17, r24
 f28:	d9 f4       	brne	.+54     	; 0xf60 <__fpcmp_parts_f+0x88>
 f2a:	12 96       	adiw	r26, 0x02	; 2
 f2c:	2d 91       	ld	r18, X+
 f2e:	3c 91       	ld	r19, X
 f30:	13 97       	sbiw	r26, 0x03	; 3
 f32:	82 81       	ldd	r24, Z+2	; 0x02
 f34:	93 81       	ldd	r25, Z+3	; 0x03
 f36:	82 17       	cp	r24, r18
 f38:	93 07       	cpc	r25, r19
 f3a:	94 f0       	brlt	.+36     	; 0xf60 <__fpcmp_parts_f+0x88>
 f3c:	28 17       	cp	r18, r24
 f3e:	39 07       	cpc	r19, r25
 f40:	bc f0       	brlt	.+46     	; 0xf70 <__fpcmp_parts_f+0x98>
 f42:	14 96       	adiw	r26, 0x04	; 4
 f44:	8d 91       	ld	r24, X+
 f46:	9d 91       	ld	r25, X+
 f48:	0d 90       	ld	r0, X+
 f4a:	bc 91       	ld	r27, X
 f4c:	a0 2d       	mov	r26, r0
 f4e:	24 81       	ldd	r18, Z+4	; 0x04
 f50:	35 81       	ldd	r19, Z+5	; 0x05
 f52:	46 81       	ldd	r20, Z+6	; 0x06
 f54:	57 81       	ldd	r21, Z+7	; 0x07
 f56:	28 17       	cp	r18, r24
 f58:	39 07       	cpc	r19, r25
 f5a:	4a 07       	cpc	r20, r26
 f5c:	5b 07       	cpc	r21, r27
 f5e:	18 f4       	brcc	.+6      	; 0xf66 <__fpcmp_parts_f+0x8e>
 f60:	11 23       	and	r17, r17
 f62:	41 f0       	breq	.+16     	; 0xf74 <__fpcmp_parts_f+0x9c>
 f64:	0a c0       	rjmp	.+20     	; 0xf7a <__fpcmp_parts_f+0xa2>
 f66:	82 17       	cp	r24, r18
 f68:	93 07       	cpc	r25, r19
 f6a:	a4 07       	cpc	r26, r20
 f6c:	b5 07       	cpc	r27, r21
 f6e:	40 f4       	brcc	.+16     	; 0xf80 <__fpcmp_parts_f+0xa8>
 f70:	11 23       	and	r17, r17
 f72:	19 f0       	breq	.+6      	; 0xf7a <__fpcmp_parts_f+0xa2>
 f74:	61 e0       	ldi	r22, 0x01	; 1
 f76:	70 e0       	ldi	r23, 0x00	; 0
 f78:	05 c0       	rjmp	.+10     	; 0xf84 <__fpcmp_parts_f+0xac>
 f7a:	6f ef       	ldi	r22, 0xFF	; 255
 f7c:	7f ef       	ldi	r23, 0xFF	; 255
 f7e:	02 c0       	rjmp	.+4      	; 0xf84 <__fpcmp_parts_f+0xac>
 f80:	60 e0       	ldi	r22, 0x00	; 0
 f82:	70 e0       	ldi	r23, 0x00	; 0
 f84:	cb 01       	movw	r24, r22
 f86:	1f 91       	pop	r17
 f88:	08 95       	ret

00000f8a <__prologue_saves__>:
 f8a:	2f 92       	push	r2
 f8c:	3f 92       	push	r3
 f8e:	4f 92       	push	r4
 f90:	5f 92       	push	r5
 f92:	6f 92       	push	r6
 f94:	7f 92       	push	r7
 f96:	8f 92       	push	r8
 f98:	9f 92       	push	r9
 f9a:	af 92       	push	r10
 f9c:	bf 92       	push	r11
 f9e:	cf 92       	push	r12
 fa0:	df 92       	push	r13
 fa2:	ef 92       	push	r14
 fa4:	ff 92       	push	r15
 fa6:	0f 93       	push	r16
 fa8:	1f 93       	push	r17
 faa:	cf 93       	push	r28
 fac:	df 93       	push	r29
 fae:	cd b7       	in	r28, 0x3d	; 61
 fb0:	de b7       	in	r29, 0x3e	; 62
 fb2:	ca 1b       	sub	r28, r26
 fb4:	db 0b       	sbc	r29, r27
 fb6:	0f b6       	in	r0, 0x3f	; 63
 fb8:	f8 94       	cli
 fba:	de bf       	out	0x3e, r29	; 62
 fbc:	0f be       	out	0x3f, r0	; 63
 fbe:	cd bf       	out	0x3d, r28	; 61
 fc0:	09 94       	ijmp

00000fc2 <__epilogue_restores__>:
 fc2:	2a 88       	ldd	r2, Y+18	; 0x12
 fc4:	39 88       	ldd	r3, Y+17	; 0x11
 fc6:	48 88       	ldd	r4, Y+16	; 0x10
 fc8:	5f 84       	ldd	r5, Y+15	; 0x0f
 fca:	6e 84       	ldd	r6, Y+14	; 0x0e
 fcc:	7d 84       	ldd	r7, Y+13	; 0x0d
 fce:	8c 84       	ldd	r8, Y+12	; 0x0c
 fd0:	9b 84       	ldd	r9, Y+11	; 0x0b
 fd2:	aa 84       	ldd	r10, Y+10	; 0x0a
 fd4:	b9 84       	ldd	r11, Y+9	; 0x09
 fd6:	c8 84       	ldd	r12, Y+8	; 0x08
 fd8:	df 80       	ldd	r13, Y+7	; 0x07
 fda:	ee 80       	ldd	r14, Y+6	; 0x06
 fdc:	fd 80       	ldd	r15, Y+5	; 0x05
 fde:	0c 81       	ldd	r16, Y+4	; 0x04
 fe0:	1b 81       	ldd	r17, Y+3	; 0x03
 fe2:	aa 81       	ldd	r26, Y+2	; 0x02
 fe4:	b9 81       	ldd	r27, Y+1	; 0x01
 fe6:	ce 0f       	add	r28, r30
 fe8:	d1 1d       	adc	r29, r1
 fea:	0f b6       	in	r0, 0x3f	; 63
 fec:	f8 94       	cli
 fee:	de bf       	out	0x3e, r29	; 62
 ff0:	0f be       	out	0x3f, r0	; 63
 ff2:	cd bf       	out	0x3d, r28	; 61
 ff4:	ed 01       	movw	r28, r26
 ff6:	08 95       	ret

00000ff8 <_exit>:
 ff8:	f8 94       	cli

00000ffa <__stop_program>:
 ffa:	ff cf       	rjmp	.-2      	; 0xffa <__stop_program>
