Archive member included because of file (symbol)

/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodqi4.o)
                              ./i2c-rtc.o (__udivmodqi4)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o)
                              ./i2c-rtc.o (__divmodhi4)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
                              /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
                              ./i2c-master.o (__do_copy_data)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
                              ./i2c-master.o (__do_clear_bss)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodhi4.o)
                              /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD ./i2c-master.o
LOAD ./i2c-rtc.o
LOAD ./main.o
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/libc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x15ee
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000026       0x30 ./main.o
 *(.progmem*)
                0x0000000000000056                . = ALIGN (0x2)
                0x0000000000000056                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000056        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000056                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000056                __ctors_start = .
 *(.ctors)
                0x0000000000000056                __ctors_end = .
                0x0000000000000056                __dtors_start = .
 *(.dtors)
                0x0000000000000056                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000056        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000056                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000056        0xc /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000062       0x16 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
                0x0000000000000062                __do_copy_data
 .init4         0x0000000000000078       0x10 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000078                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000088        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000008c        0x2 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x000000000000008c                __vector_1
                0x000000000000008c                __vector_12
                0x000000000000008c                __bad_interrupt
                0x000000000000008c                __vector_6
                0x000000000000008c                __vector_3
                0x000000000000008c                __vector_13
                0x000000000000008c                __vector_17
                0x000000000000008c                __vector_7
                0x000000000000008c                __vector_5
                0x000000000000008c                __vector_4
                0x000000000000008c                __vector_9
                0x000000000000008c                __vector_2
                0x000000000000008c                __vector_15
                0x000000000000008c                __vector_8
                0x000000000000008c                __vector_14
                0x000000000000008c                __vector_10
                0x000000000000008c                __vector_16
                0x000000000000008c                __vector_18
 .text          0x000000000000008e       0xfe ./i2c-master.o
                0x000000000000017e                i2c_master_read_nak
                0x0000000000000150                i2c_master_write
                0x000000000000008e                i2c_master_init
                0x00000000000000e2                i2c_master_start_wait
                0x0000000000000140                i2c_master_rep_start
                0x0000000000000170                i2c_master_read_ack
                0x0000000000000144                i2c_master_stop
                0x00000000000000a6                i2c_master_start
 .text          0x000000000000018c      0x870 ./i2c-rtc.o
                0x00000000000001cc                add_year
                0x00000000000003ce                i2c_rtc_read
                0x00000000000009bc                save_byte
                0x0000000000000210                add_day
                0x000000000000089e                i2c_rtc_write
                0x0000000000000784                i2c_rtc_sram_write
                0x00000000000001d6                sub_year
                0x000000000000018c                bcdtoi
                0x00000000000009dc                set_offset
                0x00000000000002e8                add_hour
                0x0000000000000340                i2c_rtc_sram_read
                0x00000000000001c6                i2c_rtc_get_status
                0x000000000000077c                read_byte
                0x0000000000000276                sub_day
                0x0000000000000802                i2c_rtc_init
                0x00000000000001a0                itobcd
                0x00000000000002fc                sub_hour
                0x00000000000001f8                sub_month
                0x00000000000001e0                add_month
                0x0000000000000314                add_minute
                0x0000000000000328                sub_minute
 .text          0x00000000000009fc      0xb88 ./main.o
                0x0000000000000dfc                read_distance
                0x0000000000000b6c                SetColor
                0x0000000000000a18                __vector_11
                0x0000000000000b58                InitPWM
                0x0000000000000b6a                LinearizeForEye
                0x0000000000000eca                main
                0x0000000000000a04                uartPuts
                0x0000000000000a84                hex2dez_c
                0x0000000000000ac2                hex2dez
                0x00000000000009fc                uartPutc
                0x0000000000000b80                readIr
 .text          0x0000000000001584        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodqi4.o)
 .text          0x0000000000001584        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o)
 .text          0x0000000000001584        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .text          0x0000000000001584        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000001584        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000001584        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000001584                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000001584       0x18 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodqi4.o)
                0x0000000000001584                __udivmodqi4
 .text.libgcc   0x000000000000159c       0x26 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o)
                0x000000000000159c                __divmodhi4
                0x000000000000159c                _div
 .text.libgcc   0x00000000000015c2        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000015c2        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000015c2        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000015c2       0x28 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodhi4.o)
                0x00000000000015c2                __udivmodhi4
                0x00000000000015ea                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000015ea        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
                0x00000000000015ea                exit
                0x00000000000015ea                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000015ea        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000015ee                _etext = .

.data           0x0000000000800060      0x1fe load address 0x00000000000015ee
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./i2c-master.o
 .data          0x0000000000800060       0x44 ./i2c-rtc.o
                0x0000000000800088                afall
                0x000000000080006c                arise
                0x0000000000800060                amziffer
 .data          0x00000000008000a4      0x1b9 ./main.o
                0x00000000008001f8                uart_string
 .data          0x000000000080025d        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodqi4.o)
 .data          0x000000000080025d        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o)
 .data          0x000000000080025d        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .data          0x000000000080025d        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .data          0x000000000080025d        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .data          0x000000000080025d        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080025e                . = ALIGN (0x2)
 *fill*         0x000000000080025d        0x1 00
                0x000000000080025e                _edata = .
                0x000000000080025e                PROVIDE (__data_end, .)

.bss            0x000000000080025e        0xe
                0x000000000080025e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080025e        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x000000000080025e        0x1 ./i2c-master.o
 .bss           0x000000000080025f        0x4 ./i2c-rtc.o
                0x000000000080025f                rtc_offset
 .bss           0x0000000000800263        0x9 ./main.o
                0x0000000000800268                uiLastCmd
                0x0000000000800266                g_cPWMg
                0x0000000000800263                uart_str_complete
                0x0000000000800265                g_cPWMr
                0x0000000000800264                uart_str_count
                0x000000000080026a                uiLastCmdTimer
                0x0000000000800267                g_cPWMb
 .bss           0x000000000080026c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodqi4.o)
 .bss           0x000000000080026c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x000000000080026c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .bss           0x000000000080026c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x000000000080026c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .bss           0x000000000080026c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
                0x000000000080026c                PROVIDE (__bss_end, .)
                0x00000000000015ee                __data_load_start = LOADADDR (.data)
                0x00000000000017ec                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080026c        0x0
                0x000000000080026c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080026c                PROVIDE (__noinit_end, .)
                0x000000000080026c                _end = .
                0x000000000080026c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Schlafzimmer.elf elf32-avr)
LOAD linker stubs
